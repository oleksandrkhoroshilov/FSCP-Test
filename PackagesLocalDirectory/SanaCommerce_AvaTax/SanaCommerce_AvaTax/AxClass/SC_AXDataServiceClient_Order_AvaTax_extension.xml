<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SC_AXDataServiceClient_Order_AvaTax_extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
[ExtensionOf(classstr(SC_AXDataServiceClient_Order))]
final class SC_AXDataServiceClient_Order_AvaTax_extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>calculateSalesTotals</Name>
				<Source><![CDATA[
    protected void calculateSalesTotals(boolean _quote)
    {
        SalesTotals             salesTotalsIncTax;
        SalesQuotationTotals    salesQuotationTotalsIncTax;
        AVA_TaxEngine           AVA_TaxEngine = new AVA_TaxEngine();

        if(_quote)
        {
            salesQuotationTotals = SalesQuotationTotals::construct(salesQuotationTable);
            AVA_TaxEngine.getTax(salesQuotationTable, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
            salesQuotationTotals.calc();

            if(salesQuotationTable.InclTax)
            {
                ttsbegin;
                salesQuotationTable.selectForUpdate(true);
                salesQuotationTable.InclTax = NoYes::No;
                salesQuotationTable.doUpdate();
                
                salesQuotationTotalsIncTax = salesQuotationTotals::construct(salesQuotationTable);
                AVA_TaxEngine.getTax(salesQuotationTable, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
                salesQuotationTotalsIncTax.calc();

                if(salesQuotationTable.SC_PromotionValue)
                {
                    salesQuotationTable.modifiedField(fieldnum(salesQuotationTable, SC_PromotionValue));
                }

                subTotal            = salesQuotationTotalsIncTax.totalBalance() + salesQuotationTotalsIncTax.totalMarkup() - totalPaymentShipmentCost;
                totalRoundOff       = salesQuotationTotalsIncTax.totalRoundOff();
                totalInvoiceDisc    = salesQuotationTotalsIncTax.totalEndDisc();
                promotionCalculated = salesQuotationTable.SC_PromotionAmount;
                totalBalance        = salesQuotationTotalsIncTax.totalBalance();
              
                salesQuotationTable.InclTax = NoYes::Yes;
                salesQuotationTable.doUpdate();

                if(salesQuotationTable.SC_PromotionValue)
                {
                    salesQuotationTable.modifiedField(fieldnum(salesQuotationTable, SC_PromotionValue));
                }
                ttscommit;
            }
            else
            {
                subTotal            = salesQuotationTotals.totalBalance() + salesQuotationTotals.totalMarkup() - totalPaymentShipmentCost;
                totalRoundOff       = salesQuotationTotals.totalRoundOff();
                totalInvoiceDisc    = salesQuotationTotals.totalEndDisc();
                promotionCalculated = salesQuotationTable.SC_PromotionAmount;
                totalBalance        = salesQuotationTotals.totalBalance();
            }

            totalExclTax            = salesQuotationTotals.totalAmount() - salesQuotationTotals.totalTaxAmount();
            totalInclTax            = salesQuotationTotals.totalAmount();
            totalTaxAmount          = salesQuotationTotals.totalTaxAmount();
            totalCashDisc           = CustTable::find(salesQuotationTable.InvoiceAccount).UseCashDisc != UseCashDisc::Never ? salesQuotationTotals.totalCashDisc() : 0;
        }
        else
        {
            salesTotals = SalesTotals::construct(salesTable);
            AVA_TaxEngine.getTax(salesTable, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
            salesTotals.calc();

            if(salesTable.InclTax)
            {
                ttsbegin;
                salesTable.selectForUpdate(true);
                salesTable.InclTax = NoYes::No;
                salesTable.doUpdate();
                
                salesTotalsIncTax = SalesTotals::construct(salesTable);
                AVA_TaxEngine.getTax(salesTable, DateTimeUtil::getSystemDate(DateTimeUtil::getUserPreferredTimeZone()));
                salesTotalsIncTax.calc();

                if(salesTable.SystemEntrySource) //if order was created from quotation we need to update entry policy to calculate real discount
                {
                    this.updateEntryChangePolicy();
                }
                
                if(salesTable.SC_PromotionValue)
                {
                    salesTable.type().modifiedField(fieldnum(salesTable, SC_PromotionValue));
                }

                subTotal            = salesTotalsIncTax.totalBalance() + salesTotalsIncTax.totalMarkup() - totalPaymentShipmentCost;
                totalRoundOff       = salesTotalsIncTax.totalRoundOff();
                totalInvoiceDisc    = salesTotalsIncTax.totalEndDisc();
                promotionCalculated = salesTable.SC_PromotionAmount;
                totalBalance        = salesTotalsIncTax.totalBalance();
                
                salesTable.InclTax = NoYes::Yes;
                salesTable.doUpdate();

                if(salesTable.SC_PromotionValue)
                {
                    salesTable.type().modifiedField(fieldnum(salesTable, SC_PromotionValue));
                }
                ttscommit;
            }
            else
            {
                subTotal            = salesTotals.totalBalance() + salesTotals.totalMarkup() - totalPaymentShipmentCost;
                totalRoundOff       = salesTotals.totalRoundOff();
                totalInvoiceDisc    = salesTotals.totalEndDisc();
                promotionCalculated = salesTable.SC_PromotionAmount;
                totalBalance        = salesTotals.totalBalance();
            }

            totalExclTax            = salesTotals.totalAmount() - salesTotals.totalTaxAmount();
            totalInclTax            = salesTotals.totalAmount();
            totalTaxAmount          = salesTotals.totalTaxAmount();
            totalCashDisc           = CustTable::find(salesTable.InvoiceAccount).UseCashDisc != UseCashDisc::Never ? salesTotals.totalCashDisc() : 0;
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>