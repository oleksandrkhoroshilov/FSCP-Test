<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocentricHtmlEditorBuild</Name>
	<SourceCode>
		<Declaration><![CDATA[
[FormDesignControlAttribute("DocentricHtmlEditorControl")]
public class DocentricHtmlEditorBuild extends FormBuildControl
{
    private str sourceString;
    private str placeholders;
    private str emailTemplates;
    private str editorCaption;
    private boolean usedForEmailTemplates;
    private boolean allowMaximize;
    private boolean allowEmailTemplates;
    private boolean allowPlaceholders;
 
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmSourceString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets/Gets the editor's data.
    /// </summary>
    /// <param name = "_value">A content string</param>
    /// <returns>A content string</returns>
    [FormDesignPropertyAttribute('Source string', 'Data')]
    public str parmSourceString(str _value = sourceString)
    {
        if(!prmisdefault(_value))
        {
            sourceString = _value;
        }
        return sourceString;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPlaceholders</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets/Gets the list of palceholders available in the editor.
    /// </summary>
    /// <param name = "_value">A list of placeholders</param>
    /// <returns>A list of placeholders</returns>
    [FormDesignPropertyAttribute('Placeholders', 'Data')]
    public str parmPlaceholders(str _value = placeholders)
    {
        if(!prmisdefault(_value))
        {
            placeholders = _value;
        }
        return placeholders;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailTemplates</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets/Gets the list of email templates available in the editor.
    /// </summary>
    /// <param name = "_value">A list of email templates</param>
    /// <returns>A list of email templates</returns>
    [FormDesignPropertyAttribute('Email templates', 'Data')]
    public str parmEmailTemplates(str _value = emailTemplates)
    {
        if(!prmisdefault(_value))
        {
            emailTemplates = _value;
        }
        return emailTemplates;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUsedForEmailTemplates</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets/Gets the flag indicating whether placeholders are used for email templates.
    /// </summary>
    /// <param name = "_value">Are placeholders used for email templates</param>
    /// <returns>True/False</returns>
    [FormDesignPropertyAttribute('Used for Email templates', 'Behavior')]
    public boolean parmUsedForEmailTemplates(boolean _value = usedForEmailTemplates)
    {
        if(!prmisdefault(_value))
        {
            usedForEmailTemplates = _value;
        }
        return usedForEmailTemplates;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAllowMaximize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets/Gets the flag indicating whether the editor can be maximized.
    /// </summary>
    /// <param name = "_value">Allow the editor to be maximized</param>
    /// <returns>True/False</returns>
    [FormDesignPropertyAttribute('Allow maximize', 'Behavior')]
    public boolean parmAllowMaximize(boolean _value = allowMaximize)
    {
        if(!prmisdefault(_value))
        {
            allowMaximize = _value;
        }
        return allowMaximize;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAllowPlaceholders</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets/Gets the flag indicating whether the use of placeholders is allowed in the editor.
    /// </summary>
    /// <param name = "_value">Allow placeholders in the editor</param>
    /// <returns>True/False</returns>
    [FormDesignPropertyAttribute('Allow placeholders', 'Behavior')]
    public boolean parmAllowPlaceholders(boolean _value = allowPlaceholders)
    {
        if(!prmisdefault(_value))
        {
            allowPlaceholders = _value;
        }
        return allowPlaceholders;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAllowEmailTemplates</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets/Gets the flag indicating whether the use of email templates is allowed in the editor.
    /// </summary>
    /// <param name = "_value">Allow email templates in the editor</param>
    /// <returns>True/False</returns>
    [FormDesignPropertyAttribute('Allow email templates', 'Behavior')]
    public boolean parmAllowEmailTemplates(boolean _value = allowEmailTemplates)
    {
        if(!prmisdefault(_value))
        {
            allowEmailTemplates = _value;
        }
        return allowEmailTemplates;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEditorCaption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets/Gets the caption of the editor when it is maximized.
    /// </summary>
    /// <param name = "_value">Editor caption</param>
    /// <returns>Editor caption</returns>
    [FormDesignPropertyAttribute('Editor caption', 'Appearance')]
    public str parmEditorCaption(str _value = editorCaption)
    {
        if(!prmisdefault(_value))
        {
            editorCaption = _value;
        }
        return editorCaption;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>