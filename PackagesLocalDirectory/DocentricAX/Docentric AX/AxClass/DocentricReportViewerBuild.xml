<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocentricReportViewerBuild</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Docentric report viewer form build control.
/// </summary>
[FormDesignControlAttribute("DocentricReportViewerControl")]
public class DocentricReportViewerBuild extends FormBuildControl
{
    private str fileName, userLanguage;
    private boolean useBrowserViewer, enableExportToWord, enableExportToExcel, enableNativePdfPrinting;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFileName</Name>
				<Source><![CDATA[
    /// <summary>
    /// The filename passed to the client side Docentric Report Viewer.
    /// </summary>
    /// <param name = "_value">The filename.</param>
    /// <returns>The filename.</returns>
    [FormDesignPropertyAttribute("Filename")]
    public str parmFileName(str _value = fileName)
    {
        if (!prmisdefault(_value))
        {
            fileName = _value;
        }
        return fileName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUserLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// The user language in which the Docentric Report Viewer will show the UI.
    /// </summary>
    /// <param name = "_value">The user language code (e.g., en-US).</param>
    /// <returns>The user language code.</returns>
    [FormDesignPropertyAttribute("User language")]
    public str parmUserLanguage(str _value = userLanguage)
    {
        if (!prmisdefault(_value))
        {
            userLanguage = _value;
        }
        return userLanguage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmUseBrowserViewer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enable viewing report directly from browser supported PDF viewer.
    /// </summary>
    /// <param name = "_value">True to enable, false to disable.</param>
    /// <returns>True if enabled, otherwise false.</returns>
    [FormDesignPropertyAttribute("Use browser viewer")]
    public boolean parmUseBrowserViewer(boolean _value = useBrowserViewer)
    {
        if (!prmisdefault(_value))
        {
            useBrowserViewer = _value;
        }
        return useBrowserViewer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEnableExportToWord</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables export to Microsoft Word button on the Docentric report viewer.
    /// </summary>
    /// <param name = "_value">True to enable, false to disable.</param>
    /// <returns>True if enabled, otherwise false.</returns>
    [FormDesignPropertyAttribute("Enable export to Word")]
    public boolean parmEnableExportToWord(boolean _value = enableExportToWord)
    {
        if (!prmisdefault(_value))
        {
            enableExportToWord = _value;
        }
        return enableExportToWord;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEnableExportToExcel</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables export to Microsoft Excel button on the Docentric report viewer.
    /// </summary>
    /// <param name = "_value">True to enable, false to disable.</param>
    /// <returns>True if enabled, otherwise false.</returns>
    [FormDesignPropertyAttribute("Enable export to Excel")]
    public boolean parmEnableExportToExcel(boolean _value = enableExportToExcel)
    {
        if (!prmisdefault(_value))
        {
            enableExportToExcel = _value;
        }
        return enableExportToExcel;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEnableNativePdfPrinting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables native PDF printing in browser if supported.
    /// </summary>
    /// <param name = "_value">True to enable, false to disable.</param>
    /// <returns>True if enabled, otherwise false.</returns>
    [FormDesignPropertyAttribute("Enable native PDF printing")]
    public boolean parmEnableNativePdfPrinting(boolean _value = enableNativePdfPrinting)
    {
        if (!prmisdefault(_value))
        {
            enableNativePdfPrinting = _value;
        }
        return enableNativePdfPrinting;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>