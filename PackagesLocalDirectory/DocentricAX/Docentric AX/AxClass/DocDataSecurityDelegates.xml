<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocDataSecurityDelegates</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DocDataSecurityDelegates
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>instance</Name>
				<Source><![CDATA[
    public static DocDataSecurityDelegates instance()
    {
        DocDataSecurityDelegates instance;
        SysGlobalCache  globalCache = appl.globalCache();

        if (globalCache.isSet(classStr(DocDataSecurityDelegates), 0))
        {
            instance = globalCache.get(classStr(DocDataSecurityDelegates), 0);
        }
        else
        {
            instance = new DocDataSecurityDelegates();
            appl.globalCache().set(classStr(DocDataSecurityDelegates), 0, instance);
        }

        return instance;
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyCustomDataSecurity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate for applying custom data security constraints.
    /// </summary>
    /// <param name = "_action">Data security action type</param>
    /// <param name = "_reportId">Report ID</param>
    /// <param name = "_companyId">Company ID</param>
    /// <param name = "_templateId">Template ID</param>
    /// <param name = "_languageId">Language ID</param>
    /// <param name = "_dataSecurityManager">Contains information about the current user roles</param>
    /// <param name = "_showForbiddingMsg">If true, show the forbidding message</param>
    /// <param name = "_result">
    /// The handler result that can break the execution flow.
    /// Set _result.cancelExecution(true), if the execution flow should be break.
    /// Set _result.booleanResult(true), if the given action should be forbidden.
    /// </param>
    delegate void applyCustomDataSecurity(DocDataSecurityTemplateAction _action, str _reportId,
                                          str _companyId, str _templateId, str _languageId, 
                                          DocDataSecurityManager _dataSecurityManager,
                                          boolean _showForbiddingMsg, DocEventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>onApplyCustomDataSecurity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Publisher for applying custom data security constraints.
    /// </summary>
    /// <param name = "_action">Data security action type</param>
    /// <param name = "_reportId">Report ID</param>
    /// <param name = "_companyId">Company ID</param>
    /// <param name = "_templateId">Template ID</param>
    /// <param name = "_languageId">Language ID</param>
    /// <param name = "_dataSecurityManager">Contains information about the current user roles</param>
    /// <param name = "_showForbiddingMsg">If true, show the forbidding message</param>
    /// <returns>Returns DocEventHandlerResult object instance. If result.booleanResult() == true, the given action is forbidden.</returns>
    public DocEventHandlerResult onApplyCustomDataSecurity(DocDataSecurityTemplateAction _action, str _reportId, 
                                                           str _companyId, str _templateId, str _languageId,
                                                           DocDataSecurityManager _dataSecurityManager,
                                                           boolean _showForbiddingMsg)
    {
        DocEventHandlerResult result = new DocEventHandlerResult();
        result.cancelExecution(false);
        result.booleanResult(false);

        this.applyCustomDataSecurity(_action, _reportId, _companyId, _templateId,
            _languageId, _dataSecurityManager, _showForbiddingMsg, result);

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyLegalEntityDataSecurity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate for applying Legal Entity data security constraint.
    /// </summary>
    /// <param name = "_action">Data security action type</param>
    /// <param name = "_reportId">Report ID</param>
    /// <param name = "_companyId">Company ID</param>
    /// <param name = "_templateId">Template ID</param>
    /// <param name = "_languageId">Language ID</param>
    /// <param name = "_dataSecurityManager">Contains information about the current user roles</param>
    /// <param name = "_showForbiddingMsg">If true, show the forbidding message</param>
    /// <param name = "_result">
    /// The handler result that can break the execution flow.
    /// Set _result.cancelExecution(true), if the execution flow should be break.
    /// Set _result.booleanResult(true), if the given action should be forbidden.
    /// </param>
    delegate void applyLegalEntityDataSecurity(DocDataSecurityTemplateAction _action, str _reportId,
                                               str _companyId, str _templateId, str _languageId,
                                               DocDataSecurityManager _dataSecurityManager,
                                               boolean _showForbiddingMsg, DocEventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>onApplyLegalEntityDataSecurity</Name>
				<Source><![CDATA[
    /// <summary>
    /// Publisher for applying Legal Entity data security constraint.
    /// </summary>
    /// <param name = "_action">Data security action type</param>
    /// <param name = "_reportId">Report ID</param>
    /// <param name = "_companyId">Company ID</param>
    /// <param name = "_templateId">Template ID</param>
    /// <param name = "_languageId">Language ID</param>
    /// <param name = "_dataSecurityManager">Contains information about the current user roles</param>
    /// <param name = "_showForbiddingMsg">If true, show the forbidding message</param>
    /// <returns>Returns DocEventHandlerResult object instance. If result.booleanResult() == true, the given action is forbidden.</returns>
    public DocEventHandlerResult onApplyLegalEntityDataSecurity(DocDataSecurityTemplateAction _action, str _reportId,
                                                                str _companyId, str _templateId, str _languageId,
                                                                DocDataSecurityManager _dataSecurityManager,
                                                                boolean _showForbiddingMsg)
    {
        DocEventHandlerResult result = new DocEventHandlerResult();
        result.cancelExecution(false);
        result.booleanResult(false);

        this.applyLegalEntityDataSecurity(_action, _reportId, _companyId, _templateId,
            _languageId, _dataSecurityManager, _showForbiddingMsg, result);

        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyLegalEntityDataSecurity_CustomRole</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delegate for applying Legal Entity data security constraint for a custom role,
    /// i.e. role which is neither Docentric Power User nor Docentric Template Editor.
    /// </summary>
    /// <param name = "_action">Data security action type</param>
    /// <param name = "_reportId">Report ID</param>
    /// <param name = "_companyId">Company ID</param>
    /// <param name = "_templateId">Template ID</param>
    /// <param name = "_languageId">Language ID</param>
    /// <param name = "_dataSecurityManager">Contains information about the current user roles</param>
    /// <param name = "_showForbiddingMsg">If true, show the forbidding message</param>
    /// <param name = "_result">
    /// The handler result that can break the execution flow.
    /// Set _result.cancelExecution(true), if the execution flow should be break.
    /// Set _result.booleanResult(true), if the given action should be forbidden.
    /// </param>
    delegate void applyLegalEntityDataSecurity_CustomRole(DocDataSecurityTemplateAction _action, str _reportId,
                                               str _companyId, str _templateId, str _languageId,
                                               DocDataSecurityManager _dataSecurityManager,
                                               boolean _showForbiddingMsg, DocEventHandlerResult _result)
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>onApplyLegalEntityDataSecurity_CustomRole</Name>
				<Source><![CDATA[
    /// <summary>
    /// Publisher for applying Legal Entity data security constraint for a custom role,
    /// i.e. role which is neither Docentric Power User nor Docentric Template Editor.
    /// </summary>
    /// <param name = "_action">Data security action type</param>
    /// <param name = "_reportId">Report ID</param>
    /// <param name = "_companyId">Company ID</param>
    /// <param name = "_templateId">Template ID</param>
    /// <param name = "_languageId">Language ID</param>
    /// <param name = "_dataSecurityManager">Contains information about the current user roles</param>
    /// <param name = "_showForbiddingMsg">If true, show the forbidding message</param>
    /// <returns>Returns DocEventHandlerResult object instance. If result.booleanResult() == true, the given action is forbidden.</returns>
    public DocEventHandlerResult onApplyLegalEntityDataSecurity_CustomRole(DocDataSecurityTemplateAction _action, str _reportId,
                                                                           str _companyId, str _templateId, str _languageId,
                                                                           DocDataSecurityManager _dataSecurityManager,
                                                                           boolean _showForbiddingMsg)
    {
        DocEventHandlerResult result = new DocEventHandlerResult();
        result.cancelExecution(false);
        result.booleanResult(false);

        this.applyLegalEntityDataSecurity_CustomRole(_action, _reportId, _companyId, _templateId,
            _languageId, _dataSecurityManager, _showForbiddingMsg, result);

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>