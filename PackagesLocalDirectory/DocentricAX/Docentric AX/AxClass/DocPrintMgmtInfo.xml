<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocPrintMgmtInfo</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// This class handles the information about print management modules, documents and reports.
/// Standard dynamically builds a list of supported document types (for example: Sales Invoice, 
/// Purchase Order) for each print management module, depending on the company/localization.
/// As a result, there isn't any convenient table where we can get the direct information about
/// the relationship between the print management modules, document types and reports.
/// </summary>
public class DocPrintMgmtInfo
{
    private DocPrintMgmtInfoTmp infoTable;

    // Maps to store some convenient links between print management modules, document types and SSRS reports.
    private Map documentTypeToModuleMap;    // enum PrintMgmtDocumentType --> enum PrintMgmtNodeType (only nodes for modules)
    private Map srsReportToModuleMap;       // str SRSReport name --> enum PrintMgmtNodeType (only nodes for modules)
    private Map srsReportToDocumentTypeMap; // str SRSReport name --> enum PrintMgmtDocumentType


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Construct and initialize an instance of DocPrintMgmtInfo.
    /// Convenient for scenarios where we manipulate the print mgmt modules, document types
    /// and report names.
    /// </summary>
    /// <param name = "_ignoreMultipleSSRSFormats">When true, only one record for each Document type
    /// is created, even if there are more SSRS formats for the same Document type.</param>
    /// <returns>DocPrintMgmtInfo object that was created and initialized.</returns>
    public static DocPrintMgmtInfo construct(boolean _ignoreMultipleSSRSFormats = false)
    {        
        DocPrintMgmtInfo infoHelper = new DocPrintMgmtInfo(_ignoreMultipleSSRSFormats);
            
        return infoHelper;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialize from PrintMgmtInfoTmp table, populate the Maps for fast retrieval
    /// of document type - module name - report name links without going into database.
    /// </summary>
    /// <param name = "_ignoreMultipleSSRSFormats">
    /// When true, only one record for each Document type is created, even if there 
    /// are more SSRS formats for the same Document type.
    /// </param>
    protected void new(boolean _ignoreMultipleSSRSFormats = false)
    {
        documentTypeToModuleMap = new Map(Types::Enum, Types::Enum);
        srsReportToModuleMap = new Map(Types::String, Types::Enum);
        srsReportToDocumentTypeMap = new Map(Types::String, Types::Enum);
        
        infoTable = DocPrintMgmtInfoTmp::fillTableForAllModules(_ignoreMultipleSSRSFormats);

        while select infoTable
        {
            documentTypeToModuleMap.add(infoTable.DocumentType, infoTable.NodeType);
            if (infoTable.SRSReportName)
            {
                srsReportToModuleMap.add(infoTable.SRSReportName, infoTable.NodeType);
                srsReportToDocumentTypeMap.add(infoTable.SRSReportName, infoTable.DocumentType);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getInfoTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the DocPrintMgmtInfoTmp table. Convenient when we manipulate the Print mgmt modules,
    /// document types and report names.
    /// </summary>
    /// <returns>DocPrintMgmtInfoTmp tmp table</returns>
    public DocPrintMgmtInfoTmp getInfoTable()
    {
        return infoTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getDocumentTypeToModuleMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the Map with PrintMgmtDocumentType - PrintMgmtNodeType pairs
    /// </summary>
    /// <returns>Map with PrintMgmtDocumentType - PrintMgmtNodeType pairs</returns>
    public Map getDocumentTypeToModuleMap()
    {
        return documentTypeToModuleMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSrsReportToModuleMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the Map with SRSReport name - PrintMgmtNodeType pairs
    /// </summary>
    /// <returns>Map with SRSReport name - PrintMgmtNodeType pairs</returns>
    public Map getSrsReportToModuleMap()
    {
        return srsReportToModuleMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSrsReportToDocumentTypeMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the Map with SRSReport name - PrintMgmtDocumentType pairs
    /// </summary>
    /// <returns>Map with SRSReport name - PrintMgmtDocumentType pairs</returns>
    public Map getSrsReportToDocumentTypeMap()
    {
        return srsReportToDocumentTypeMap;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>