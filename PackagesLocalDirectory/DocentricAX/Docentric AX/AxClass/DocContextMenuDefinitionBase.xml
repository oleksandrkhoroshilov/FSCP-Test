<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocContextMenuDefinitionBase</Name>
	<SourceCode>
		<Declaration><![CDATA[
using Microsoft.Dynamics.AX.Platform.Extensibility;

/// <summary>
/// The DocContextMenuDefinitionBase class is a base class used to create a custom 
/// context menu definition for the specified form control.
/// The custom context menu definitions must specify the following export attributes to be discoverable
/// by the system:
///
/// - System.ComponentModel.Composition.ExportAttribute(identifierStr(Dynamics.AX.Application.DocContextMenuDefinitionBase))
/// - System.ComponentModel.Composition.ExportMetadataAttribute((extendedTypeStr(DocContextMenuDefinitionId), %ContextMenuDefinitionId%)
///
/// where %ContextMenuDefinitionId% is the ID returned by the getId method.
/// </summary>
[ExportInterfaceAttribute]
public abstract class DocContextMenuDefinitionBase
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the ID of the context menu definition.
    /// Overload this method to a define unique ID of the custom context menu definition.
    /// </summary>
    /// <returns>The context menu definition ID</returns>
    public abstract DocContextMenuDefinitionId getId() {}

]]></Source>
			</Method>
			<Method>
				<Name>isEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the custom context menu definition is enabled.
    /// If it is enabled, the custom context menu definition is added to 
    /// the existing context menu for the specified form control.
    /// Overload this method to define conditions for enabling/disabling the creation 
    /// of the custom context menu definition for the specified form control.
    /// </summary>
    /// <returns>True if the context menu definition is enabled; otherwise false</returns>
    public abstract boolean isEnabled() {}

]]></Source>
			</Method>
			<Method>
				<Name>getContextMenuOptions</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the custom context menu definition for the specified form control.
    /// Overload this method to create a new custom context menu definition for 
    /// the specified form control.
    /// </summary>
    /// <param name = "_formControl">An instance of the FormControl object</param>
    /// <returns>An instance of the ContextMenu object</returns>
    public abstract ContextMenu getContextMenuOptions(FormControl _formControl) {}

]]></Source>
			</Method>
			<Method>
				<Name>selectedMenuOption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Performs an action specified for the selected menu option (menu item) from the 
    /// context menu definition.
    /// Overload this method to define an action for each context menu option (menu items) 
    /// of the custom context menu definition.
    /// </summary>
    /// <param name = "_selectedOption">Selected menu option (menu item) from the context menu definition</param>
    /// <param name = "_formControl">An instance of the FormControl object</param>
    public abstract void selectedMenuOption(int _selectedOption, FormControl _formControl) {}

]]></Source>
			</Method>
			<Method>
				<Name>addContextMenuOption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Adds a new menu option (menu item) to the specified context menu definition
    /// for the specified form control.
    /// </summary>
    /// <param name = "_contextMenu">An instance of the ContextMenu object</param>
    /// <param name = "_formControl">An instance of the FormControl object</param>
    /// <param name = "_menuOptionLabel">A new menu option (menu item) label</param>
    /// <param name = "_menuOptionId">A new menu option (menu item) ID</param>
    protected void addContextMenuOption(ContextMenu _contextMenu, FormControl _formControl, str _menuOptionLabel, int _menuOptionId)
    {
        // Check if an instance of the ContextMenu object exists
        if (_contextMenu == null)
        {
            return;
        }

        // Get the list of defined context menu options (menu items) from the context menu
        List menuOptions = _contextMenu.ContextMenuOptions();
        if (menuOptions == null)
        {
            menuOptions = new List(Types::Class);
        }

        // Check if a new context menu option (menu item) can be added to the context menu
        if (this.canAddContextMenuOption(_formControl, _menuOptionId))
        {
            // Create an instance of the ContextMenuOption object and add it to the list
            ContextMenuOption option = ContextMenuOption::Create(_menuOptionLabel, _menuOptionId);
            menuOptions.addEnd(option);
        }

        // Add the list of defined context menu options (menu items) to the context menu
        _contextMenu.ContextMenuOptions(menuOptions);
    }

]]></Source>
			</Method>
			<Method>
				<Name>canAddContextMenuOption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether the specified menu option (menu item) can be added to the context menu definition
    /// for the specified form control.
    /// Overload this method to define conditions for when new context menu options (menu items)
    /// can be added to the custom context menu definition for the specified form control.
    /// </summary>
    /// <param name = "_formControl">An instance of the FormControl object</param>
    /// <param name = "_menuOptionId">Menu option (menu item) ID</param>
    /// <returns>True if the specified menu option (menu item) can be added to the context menu definition; otherwise false</returns>
    public abstract boolean canAddContextMenuOption(FormControl _formControl, int _menuOptionId) {}

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>