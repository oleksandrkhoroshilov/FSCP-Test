<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocEmailProcessingParams</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DocEmailProcessingParams
{
    DocEmailContextInfo          contextInformation;
    DocGeneratedReportDocumentId documentId;
    DocAccountRole               accountType = DocAccountRole::NA;
    DocAccountNum                accountNum;
    SysEmailDescriptionType      origin;
    EventInboxId                 eventInboxId;
    EventRuleId                  eventRuleId;
    UserId                       userId;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>contextInformation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the context information.
    /// </summary>
    /// <param name = "_contextInformation">The context information</param>
    /// <returns>The context information</returns>
    public DocEmailContextInfo contextInformation(DocEmailContextInfo _contextInformation = contextInformation)
    {
        contextInformation = _contextInformation;
        return contextInformation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>documentId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the document Id.
    /// </summary>
    /// <param name = "_documentId">The document Id</param>
    /// <returns>The document Id</returns>
    public DocGeneratedReportDocumentId documentId(DocGeneratedReportDocumentId _documentId = documentId)
    {
        documentId = _documentId;
        return documentId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the account type.
    /// </summary>
    /// <param name = "_accountType">The account type</param>
    /// <returns>The account type</returns>
    public DocAccountRole accountType(DocAccountRole _accountType = accountType)
    {
        accountType = _accountType;
        return accountType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>accountNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the account number.
    /// </summary>
    /// <param name = "_accountNum">The account number</param>
    /// <returns>The account number</returns>
    public DocAccountNum accountNum(DocAccountNum _accountNum = accountNum)
    {
        accountNum = _accountNum;
        return accountNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>origin</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the email origin.
    /// </summary>
    /// <param name = "_origin">The email origin</param>
    /// <returns>The email origin</returns>
    public SysEmailDescriptionType origin(SysEmailDescriptionType _origin = origin)
    {
        origin = _origin;
        return origin;
    }

]]></Source>
			</Method>
			<Method>
				<Name>eventInboxId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the event inbox Id.
    /// NOTE: Applicable only for alerts.
    /// </summary>
    /// <param name = "_eventInboxId">The event inbox Id</param>
    /// <returns>The event inbox Id</returns>
    public EventInboxId eventInboxId(EventInboxId _eventInboxId = eventInboxId)
    {
        eventInboxId = _eventInboxId;
        return eventInboxId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>eventRuleId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the event rule Id.
    /// NOTE: Applicable only for alerts.
    /// </summary>
    /// <param name = "_eventRuleId">The event rule Id</param>
    /// <returns>The event rule Id</returns>
    public EventRuleId eventRuleId(EventRuleId _eventRuleId = eventRuleId)
    {
        eventRuleId = _eventRuleId;
        return eventRuleId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>userId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the user ID.
    /// </summary>
    /// <param name = "_userId">User ID</param>
    /// <returns>User ID</returns>
    public UserId userId(UserId _userId = userId)
    {
        userId = _userId;
        return userId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>toString</Name>
				<Source><![CDATA[
    /// <summary>
    /// Concatenates a string from the context information, the document Id and the account number.
    /// </summary>
    /// <returns>A concatenated string</returns>
    public str toString()
    {
        str displayStr = '';

        // Context information
        if (contextInformation)
        {
            displayStr = contextInformation;
        }

        // Document ID
        if (documentId)
        {
            displayStr += (displayStr ? ', ' : '') + strFmt('%1: %2', "@DocentricAX2:Document", documentId);
        }

        // Account number
        if (accountNum)
        {
            displayStr += (displayStr ? ', ' : '') + strFmt('%1: %2', accountType, accountNum);
        }
        
        return displayStr;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>