<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysUserSetup_DC_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class SysUserSetup_DC_Extension is an extension of the form SysUserSetup.
/// </summary>
[ExtensionOf(formStr(SysUserSetup))]
final class SysUserSetup_DC_Extension
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the form.
    /// </summary>
    public void init()
    {
        next init();

        // Form elements visibility and enabled/disabled properties
        DocDataSecurityManager dataSecMng = new DocDataSecurityManager();
        boolean isUserAdmin = dataSecMng.isInRoleSystemAdministrator() || dataSecMng.isInRoleDocentricAdministrator();

        // Enable/disable the 'Change my default printer' command button based on the security setting
        // 'Allow users to set up default printer'. Always enable for admin.
        int controlId = this.controlId(formControlStr(SysUserSetup, UserPrinterSettingsButton_DC));
        FormButtonControl formControlChangeMyDefaultPrinter = this.control(controlId);
        formControlChangeMyDefaultPrinter.enabled(isUserAdmin || DocParameters::find().AllowUserSetDefaultPrinter);
        formControlChangeMyDefaultPrinter.registerOverrideMethod(methodStr(FormMenuButtonControl, clicked), formMethodStr(SysUserSetup, UserPrinterSettingsButton_DC_Clicked_DC), this);

        // Show/hide the 'My favorite printers' command button based on the User printers mode.
        // Always show for admin.
        controlId = this.controlId(formControlStr(SysUserSetup, UserFavoritePrinterButton_DC));
        FormButtonControl formControlMyFavoritePrinters = this.control(controlId);
        formControlMyFavoritePrinters.visible(isUserAdmin || DocPrinterManager::getUserPrintersMode() == DocUserPrinterMode::UserFavoritePrinters);
        formControlMyFavoritePrinters.registerOverrideMethod(methodStr(FormMenuButtonControl, clicked), formMethodStr(SysUserSetup, UserFavoritePrinterButton_DC_Clicked_DC), this);

        // Show/hide the 'My printer selection' combo based on the User printers mode.
        // It is visible in the User favorite printer mode and hidden in User allowed printer mode
        // even if the user is admin.
        controlId = this.controlId(formControlStr(SysUserSetup, PrinterSelection_DC));
        FormControl formControlPrinterSelection = this.control(controlId);
        formControlPrinterSelection.visible(DocPrinterManager::getUserPrintersMode() == DocUserPrinterMode::UserFavoritePrinters);

        // Write out the default printer for the current user.
        this.showUserDefaultPrinter();
    }

]]></Source>
			</Method>
			<Method>
				<Name>showUserDefaultPrinter</Name>
				<Source><![CDATA[
    /// <summary>
    /// Displays the user's default printer.
    /// </summary>
    public void showUserDefaultPrinter()
    {
        str userDefaultPrinter = '';
        if (this.currentUserId)
        {
            userDefaultPrinter = DocPrinterManager::getDefaultPrinterName(this.currentUserId);
        }
        if (!userDefaultPrinter)
        {
            userDefaultPrinter = "@DocentricAX2:DefaultPrinterNotSet";
        }
        FormStringControl formStringCtrl = this.control(this.controlId(formControlStr(SysUserSetup, UserDefaultPrinter_DC)));
        if (formStringCtrl)
        {
            formStringCtrl.text(userDefaultPrinter);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>UserPrinterSettingsButton_DC_Clicked_DC</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the form for the user's default printer.
    /// </summary>
    /// <param name = "_control">Form control</param>
    public void UserPrinterSettingsButton_DC_Clicked_DC(FormControl _control)
    {        
        // We use command button instead of the menu item button 
        // to avoid the security-related BP error. Command button is enabled/disabled
        // in post_init event hanlder, based on the setting in DocParameters.
        // When this command button is clicked, open the user printer setting form, 
        // filtered only for the current user.
        if (this.currentUserId)
        {
            Args args = new Args(formStr(DocUserPrinterSettings));
            args.caller(this);
            args.parm(this.currentUserId);
            FormRun docUserPrinterSettingsForm = classFactory.formRunClass(args);
            docUserPrinterSettingsForm.run();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>UserFavoritePrinterButton_DC_Clicked_DC</Name>
				<Source><![CDATA[
    /// <summary>
    /// Opens the form for the user's favorite printers.
    /// </summary>
    /// <param name = "_control">Form control</param>
    public void UserFavoritePrinterButton_DC_Clicked_DC(FormControl _control)
    {
        if (this.currentUserId)
        {
            Args args = new Args();
            args.caller(this);
            args.parm(this.currentUserId);

            FormRun formRun = new MenuFunction(menuItemDisplayStr(DocUserFavoritePrinter), MenuItemType::Display).create(args);
            formRun.run();
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>