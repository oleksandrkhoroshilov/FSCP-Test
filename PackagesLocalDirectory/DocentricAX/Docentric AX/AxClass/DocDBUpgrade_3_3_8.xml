<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocDBUpgrade_3_3_8</Name>
	<SourceCode>
		<Declaration><![CDATA[
[DocDBUpgrade]
class DocDBUpgrade_3_3_8
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>upgradeTo3_3_8_0</Name>
				<Source><![CDATA[
    /// <summary>
    /// Upgrade database to version 3.3.8.0 procedure
    /// </summary>
    /// <param name = "_fromVersion">Upgrading from version</param>
    /// <param name = "_toVersion">Upgrade to versoin</param>
    /// <returns>True if upgrade was completed</returns>
    [DocDBUpgrade('3.3.8.0')]
    static boolean upgradeTo3_3_8_0(DocDBVersion _fromVersion, DocDBVersion _toVersion)
    {
        str msg = '';

        ttsBegin;

        DocParameters parameters = DocParameters::find();

        // Define default value for report template fonts Azure container
        if (System.String::IsNullOrEmpty(parameters.CustomFontsBlobStorageContainer))
        {
            parameters.selectForUpdate(true);
            parameters.CustomFontsBlobStorageContainer = DocConstant::CustomBlobStorageFontsContainer;
            parameters.update();
            msg += strFmt('Template custom font Azure storage container was set to the value (%1).', parameters.CustomFontsBlobStorageContainer);
        } 

        // Define default value for Font Manager synchronization context
        if (!DocFontManager::exist())
        {
            DocFontManager fontManager = DocFontManager::find();
            msg += '\r\n' + strFmt('Font manager synchronization context set to version ID (%1).', fontManager.VersionId);
        }

        if (System.String::IsNullOrEmpty(msg))
        {
            msg = 'No change in the database.';
        }

        DocUpgradeLog::log(_fromVersion, _toVersion, Exception::Info, msg);

        ttsCommit;

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>