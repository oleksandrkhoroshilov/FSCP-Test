<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocReportSharePointMetadataSettings</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Used for storing report SharePoint metadata settings.
/// </summary>
public class DocReportSharePointMetadataSettings extends DocSharePointMetadataSettings
{
    protected boolean isSavingEnabled;
    protected DocSharePointActionOnError actionOnError;
    protected DocSharePointReportSavingType savingType;
    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmIsSavingEnabled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the flag indicating if saving generated files to SharePoint with metada fields
    /// via Docentric File print destination > Save to SharePoint is enabled.
    /// </summary>
    /// <param name = "_isSavingEnabled">Is saving generated files to SharePoint with metadata fields enabled</param>
    /// <returns>True/False</returns>
    public boolean parmIsSavingEnabled(boolean _isSavingEnabled = isSavingEnabled)
    {
        isSavingEnabled = _isSavingEnabled;
        return isSavingEnabled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmActionOnError</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the action if saving metadata fields alongside the generated file to SharePoint
    /// via Docentric File print destination > Save to SharePoint fail.
    /// </summary>
    /// <param name = "_actionOnError">Action on error</param>
    /// <returns>Action on error</returns>
    public DocSharePointActionOnError parmActionOnError(DocSharePointActionOnError _actionOnError = actionOnError)
    {
        actionOnError = _actionOnError;
        return actionOnError;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSavingType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets SharePoint report saving type.
    /// </summary>
    /// <param name = "_savingType">SharePoint report saving type</param>
    /// <returns>SharePoint report saving type</returns>
    public DocSharePointReportSavingType parmSavingType(DocSharePointReportSavingType _savingType = savingType)
    {
        savingType = _savingType;
        return savingType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of DocReportSharePointMetadataSettings class.
    /// </summary>
    /// <param name = "_docReportSharePointSettings">A DocReportSharePointSettings table buffer</param>
    /// <param name = "_savingType">SharePoint report saving type</param>
    /// <returns>An instance of DocReportSharePointMetadataSettings class</returns>
    public static DocReportSharePointMetadataSettings construct(DocReportSharePointSettings _docReportSharePointSettings, DocSharePointReportSavingType _savingType)
    {
        DocReportSharePointMetadataSettings sharePointMetadataSettings;

        if (_docReportSharePointSettings)
        {
            sharePointMetadataSettings = new DocReportSharePointMetadataSettings();

            sharePointMetadataSettings.parmSharePointSiteUrl(_docReportSharePointSettings.SharePointSiteUrl);
            sharePointMetadataSettings.parmSharePointDocumentLibraryUrl(_docReportSharePointSettings.SharePointDocumentLibraryUrl);
            
            sharePointMetadataSettings.parmSavingType(_savingType);
            switch (_savingType)
            {
                case DocSharePointReportSavingType::Direct:
                    sharePointMetadataSettings.parmIsSavingEnabled(_docReportSharePointSettings.SaveToSharePointIsEnabled);
                    sharePointMetadataSettings.parmActionOnError(_docReportSharePointSettings.SaveToSharePointActionOnError);
                    break;
                case DocSharePointReportSavingType::Archive:
                    sharePointMetadataSettings.parmIsSavingEnabled(_docReportSharePointSettings.SaveToPrintArchiveIsEnabled);
                    sharePointMetadataSettings.parmActionOnError(_docReportSharePointSettings.SaveToPrintArchiveActionOnError);
                    break;
                case DocSharePointReportSavingType::Attachments:
                    sharePointMetadataSettings.parmIsSavingEnabled(_docReportSharePointSettings.SaveToAttachmentsIsEnabled);
                    sharePointMetadataSettings.parmActionOnError(_docReportSharePointSettings.SaveToAttachmentsActionOnError);
                    break;
                default:
                    DocGlobalHelper::handleException(funcName(), strFmt('Unsupported SharePoint saving type (%1)', _savingType));
            }
            
            sharePointMetadataSettings.fillSharePointMetadaFieldMap(_docReportSharePointSettings);
        }

        return sharePointMetadataSettings;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillSharePointMetadaFieldMap</Name>
				<Source><![CDATA[
    /// <summary>
    /// Fills the SharePoint metadata field map [FieldInternalName, DocReportSharePointMetadataField object].
    /// </summary>
    /// <param name = "_docReportSharePointSettings">A DocReportSharePointSettings table buffer</param>
    private void fillSharePointMetadaFieldMap(DocReportSharePointSettings _docReportSharePointSettings)
    {
        DocReportSharePointMetadata spMetadata;

        while select spMetadata
            where spMetadata.SharePointSettingsRecId == _docReportSharePointSettings.RecId
        {
            DocReportSharePointMetadataField spMetadataField = DocReportSharePointMetadataField::construct(spMetadata);
            spMetadataFieldMap.insert(spMetadata.FieldInternalName, spMetadataField);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>