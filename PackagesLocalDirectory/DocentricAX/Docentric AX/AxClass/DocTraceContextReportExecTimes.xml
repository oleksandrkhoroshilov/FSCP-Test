<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocTraceContextReportExecTimes</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class DocTraceContextReportExecTimes is used for tracing the report execution times at report generation.
/// </summary>
public class DocTraceContextReportExecTimes implements IDocTraceContext
{
    private SrsReportRunPrinter srsReportRunPrinter;
    private SrsReportDataContract srsReportDataContract;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>createTraceContextInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a new instance of the DocTraceContextInfo class.
    /// </summary>
    /// <returns>An instance of the DocTraceContextInfo class</returns>
    private DocTraceContextInfo createTraceContextInfo()
    {
        SRSReportExecutionInfo srsReportExecutionInfo = srsReportRunPrinter.parmSrsProxy().parmReportExecutionInfo();

        guid reportRunId = srsReportExecutionInfo.parmReportRunId();

        DocTraceContextInfo traceContextInfo = new DocTraceContextInfo();

        // ReportRunId
        traceContextInfo.addEnd(['ReportRunId', guid2StrWithoutBraces(reportRunId)]);

        DocReportExecutionInfo docReportExecutionInfo = srsReportExecutionInfo.parmReportExecutionInfo_DC();
        if (docReportExecutionInfo)
        {
            // dspClass
            traceContextInfo.addEnd(['dspClass', docReportExecutionInfo.parmDspExecutionTime()]);
            // docGen
            traceContextInfo.addEnd(['docGen', docReportExecutionInfo.getReportDocGenExecutionTime()]);
            // total
            traceContextInfo.addEnd(['total', docReportExecutionInfo.parmTotalExecutionTime()]);
        }

        return traceContextInfo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createTraceMessage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a trace message.
    /// </summary>
    /// <param name = "_message">A trace message</param>
    /// <returns>A trace message</returns>
    private DocMessage createTraceMessage(DocMessage _message)
    {
        SRSReportExecutionInfo srsReportExecutionInfo = srsReportRunPrinter.parmSrsProxy().parmReportExecutionInfo();
        DocReportExecutionInfo docReportExecutionInfo = srsReportExecutionInfo.parmReportExecutionInfo_DC();

        _message += (_message ? ' | ' : '') + (srsReportDataContract ? srsReportDataContract.parmReportName() : "@DocentricAX:Unknown");

        if (docReportExecutionInfo)
        {
            _message += (_message ? ' | ' : '') + strFmt('%1: dspClass (%2 ms), docGen (%3 ms), total (%4 ms)',
                                                            "@DocentricAX4:DocTraceContextReportExecTimes",
                                                            docReportExecutionInfo.parmDspExecutionTime(),
                                                            docReportExecutionInfo.getReportDocGenExecutionTime(),
                                                            docReportExecutionInfo.parmTotalExecutionTime());
        }

        return _message;
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the new instance of DocTraceContextReportExecTimes class.
    /// </summary>
    /// <param name = "_srsReportRunPrinter">An instance of the SrsReportRunPrinter class</param>
    /// <param name = "_srsReportDataContract">An instance of the SrsReportDataContract class</param>
    protected void new(SrsReportRunPrinter _srsReportRunPrinter, SrsReportDataContract _srsReportDataContract)
    {
        srsReportRunPrinter = _srsReportRunPrinter;
        srsReportDataContract = _srsReportDataContract;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the DocTraceContextReportExecTimes class.
    /// </summary>
    /// <param name = "_srsReportRunPrinter">An instance of the SrsReportRunPrinter class</param>
    /// <param name = "_srsReportDataContract">An instance of the SrsReportDataContract class</param>
    /// <returns>An instance of the DocTraceContextReportExecTimes class</returns>
    public static DocTraceContextReportExecTimes construct(SrsReportRunPrinter _srsReportRunPrinter, SrsReportDataContract _srsReportDataContract)
    {
        return new DocTraceContextReportExecTimes(_srsReportRunPrinter, _srsReportDataContract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTraceContextInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the current instance of the DocTraceContextInfo class.
    /// </summary>
    /// <returns>An instance of the DocTraceContextInfo class</returns>
    public DocTraceContextInfo getTraceContextInfo()
    {
        return this.createTraceContextInfo();
    }

]]></Source>
			</Method>
			<Method>
				<Name>getTraceMessage</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the trace message.
    /// </summary>
    /// <param name = "_message">A trace message</param>
    /// <returns>A trace message</returns>
    public DocMessage getTraceMessage(DocMessage _message = '')
    {
        return this.createTraceMessage(_message);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>