<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocEventHandlerCleanEmailsResult</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Event handler result class for cleaning invalid email addresses from provided sections (to, cc, bcc).
/// </summary>
public class DocEventHandlerCleanEmailsResult extends EventHandlerActionResult
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>result</Name>
				<Source><![CDATA[
    /// <summary>
    /// The parm result method for getting/setting the inner result with parameters for sections to clean, warning message creation and if the email sections have already been cleaned.
    /// </summary>
    /// <param name = "_result">The inner result object.</param>
    /// <returns>An instance of the DocCleanEmailsResult class</returns>
    public DocCleanEmailsResult result (DocCleanEmailsResult _result = null)
    {
        if (_result != null)
        {
            this.parmEventHandlerResult().result(_result);
        }

        return this.parmEventHandlerResult().result();
    }

]]></Source>
			</Method>
			<Method>
				<Name>hasResult</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checks whether a result was already passed. Read only as to insure a single response.
    /// </summary>
    /// <returns>True if a result was set, otherwise false.</returns>
    public boolean hasResult()
    {
        return this.parmEventHandlerResult().hasResult();
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a new object of the class. Private to ensure that new objects are made with the single response strategy.
    /// </summary>
    /// <returns>A new instance object of the class.</returns>
    protected static DocEventHandlerCleanEmailsResult construct()
    {
        return new DocEventHandlerCleanEmailsResult();
    }

]]></Source>
			</Method>
			<Method>
				<Name>newSingleResponse</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a new object of the class. Ensures that only a single object of this type holds an inner result object via the attached validator class.
    /// </summary>
    /// <returns>A new instance object of the class.</returns>
    public static DocEventHandlerCleanEmailsResult newSingleResponse()
    {
        return DocEventHandlerCleanEmailsResult::newWithResultValidator(EventHandlerSingleResponseValidator::construct());
    }

]]></Source>
			</Method>
			<Method>
				<Name>newWithResultValidator</Name>
				<Source><![CDATA[
    /// <summary>
    /// Instantiates a new object of the class with an attached validator, needed for checking if there already is an inner result attached.
    /// </summary>
    /// <param name = "_resultValidator">A validator object for the eventHandlerResult class.</param>
    /// <returns>A new instance object of the class with a validator attached.</returns>
    protected static DocEventHandlerCleanEmailsResult newWithResultValidator(IEventHandlerResultValidator _resultValidator)
    {
        DocEventHandlerCleanEmailsResult result = DocEventHandlerCleanEmailsResult::construct();
        
        result.parmEventHandlerResult(EventHandlerResult::newWithResultValidator(_resultValidator));

        return result;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>