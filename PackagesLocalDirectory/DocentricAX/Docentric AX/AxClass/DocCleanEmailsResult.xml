<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocCleanEmailsResult</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Inner result class for the DocEventHandlerCleanEmailsResult class, it holds the parameters for which sections to clean, 
/// whether to show a warning message and if the email sections have already been cleaned.
/// </summary>
public class DocCleanEmailsResult
{
    private boolean cleanEmailTo;
    private boolean cleanEmailCc;
    private boolean cleanEmailBcc;
    private boolean showWarningMsg;
    private boolean isCleaned;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// New methwod with parameters.
    /// </summary>
    /// <param name = "_cleanEmailTo">Whether To field should be cleaned.</param>
    /// <param name = "_cleanEmailCc">Whether CC field should be cleaned.</param>
    /// <param name = "_cleanEmailBcc">Whether BCC field should be cleaned.</param>
    /// <param name = "_showWarningMsg">Whether to show a warning message for the cleaned fields.</param>
    /// <param name = "_isCleaned">Whether the email addresses have already been cleaned. Used for skipping default logic if implementing your own.</param>
    protected void new (boolean _cleanEmailTo = false, boolean _cleanEmailCc = false, boolean _cleanEmailBcc = false, boolean _showWarningMsg = true, boolean _isCleaned = false)
    {
        cleanEmailTo = _cleanEmailTo;
        cleanEmailCc = _cleanEmailCc;
        cleanEmailBcc = _cleanEmailBcc;
        showWarningMsg = _showWarningMsg;
        isCleaned = _isCleaned;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Constructor with parameters.
    /// </summary>
    /// <param name = "_cleanEmailTo">Whether To field should be cleaned.</param>
    /// <param name = "_cleanEmailCc">Whether CC field should be cleaned.</param>
    /// <param name = "_cleanEmailBcc">Whether BCC field should be cleaned.</param>
    /// <param name = "_showWarningMsg">Whether to show a warning message for the cleaned fields.</param>
    /// <param name = "_isCleaned">Whether the email addresses have already been cleaned. Used for skipping default logic if implementing custom logic.</param>
    /// <returns>A new object of type DocCleanEmailsResult.</returns>
    public static DocCleanEmailsResult construct(boolean _cleanEmailTo = false, boolean _cleanEmailCc = false, boolean _cleanEmailBcc = false, boolean _showWarningMsg = true, boolean _isCleaned = false)
    {
        return new DocCleanEmailsResult(_cleanEmailTo, _cleanEmailCc, _cleanEmailBcc, _showWarningMsg, _isCleaned);
    }

]]></Source>
			</Method>
			<Method>
				<Name>cleanEmailTo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the cleanEmailTo parameter value.
    /// </summary>
    /// <returns>True if To field should be cleaned, otherwise false.</returns>
    public boolean cleanEmailTo()
    {
        return cleanEmailTo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cleanEmailCc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the cleanEmailCc parameter value.
    /// </summary>
    /// <returns>True if CC field should be cleaned, otherwise false.</returns>
    public boolean cleanEmailCc()
    {
        return cleanEmailCc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>cleanEmailBcc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the cleanEmailBcc parameter value.
    /// </summary>
    /// <returns>True if BCC field should be cleaned, otherwise false.</returns>
    public boolean cleanEmailBcc()
    {
        return cleanEmailBcc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>showWarningMsg</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the showWarningMsg parameter value.
    /// </summary>
    /// <returns>True if a warning message should be shown for removed invalid email addresses, otherwise false.</returns>
    public boolean showWarningMsg()
    {
        return showWarningMsg;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isCleaned</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the isCleaned parameter value.
    /// </summary>
    /// <returns>True if the email addresses have already been cleaned, otherwise false.</returns>
    public boolean isCleaned()
    {
        return isCleaned;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>