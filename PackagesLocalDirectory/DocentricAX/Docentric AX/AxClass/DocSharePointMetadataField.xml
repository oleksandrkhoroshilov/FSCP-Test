<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocSharePointMetadataField</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Used to store data about SharePoint metadata fields.
/// </summary>
public class DocSharePointMetadataField
{
    private DocSharePointMetadataFieldInternalName fieldInternalName;
    private DocSharePointMetadataFieldName fieldName;
    private DocSharePointMetadataFieldDataType fieldDataType;
    private anytype fieldValue;
    private DocSharePointMetadataFieldIsRequired isRequired;
    private System.Globalization.CultureInfo cultureInfo;
    private System.String[] dateTimeFormats;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmFieldInternalName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the SharePoint metadata field internal name.
    /// </summary>
    /// <param name = "_fieldInternalName">SharePoint metadata field internal name</param>
    /// <returns>SharePoint metadata field internal name</returns>
    public DocSharePointMetadataFieldInternalName parmFieldInternalName(DocSharePointMetadataFieldInternalName _fieldInternalName = fieldInternalName)
    {
        fieldInternalName = _fieldInternalName;
        return fieldInternalName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFieldName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the SharePoint metadata field name.
    /// </summary>
    /// <param name = "_fieldName">SharePoint metadata field name</param>
    /// <returns>SharePoint metadata field name</returns>
    public DocSharePointMetadataFieldInternalName parmFieldName(DocSharePointMetadataFieldInternalName _fieldName = fieldName)
    {
        fieldName = _fieldName;
        return fieldName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFieldDataType</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the SharePoint metadata field data type.
    /// </summary>
    /// <param name = "_fieldDataType">SharePoint metadata field data type</param>
    /// <returns>SharePoint metadata field data type</returns>
    public DocSharePointMetadataFieldDataType parmFieldDataType(DocSharePointMetadataFieldDataType _fieldDataType = fieldDataType)
    {
        fieldDataType = _fieldDataType;
        return fieldDataType;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmFieldValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the SharePoint metadata field value.
    /// </summary>
    /// <param name = "_fieldValue">SharePoint metadata field value</param>
    /// <returns>SharePoint metadata field value</returns>
    public anytype parmFieldValue(anytype _fieldValue = fieldValue)
    {
        fieldValue = _fieldValue;
        return fieldValue;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCultureInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the culture info for field value.
    /// </summary>
    /// <param name = "_cultureInfo">Culture info</param>
    /// <returns>Culture info</returns>
    public System.Globalization.CultureInfo parmCultureInfo(System.Globalization.CultureInfo _cultureInfo = cultureInfo)
    {
        cultureInfo = _cultureInfo;
        return cultureInfo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDateTimeFormats</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the array of possible exact DateTime formats for field value.
    /// </summary>
    /// <param name = "_dateTimeFormats">The array of possible exact DateTime formats</param>
    /// <returns>The array of possible exact DateTime formats</returns>
    public System.String[] parmDateTimeFormats(System.String[] _dateTimeFormats = dateTimeFormats)
    {
        dateTimeFormats = _dateTimeFormats;
        return dateTimeFormats;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmIsRequired</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the flag indicating if SharePoint metadata field is reuired.
    /// </summary>
    /// <param name = "_isRequired">Is SharePoint metadata field required</param>
    /// <returns>True/False</returns>
    public DocSharePointMetadataFieldIsRequired parmIsRequired(DocSharePointMetadataFieldIsRequired _isRequired = isRequired)
    {
        isRequired = _isRequired;
        return isRequired;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Cretaes an instance of DocSharePointMetadataField class.
    /// </summary>
    /// <param name = "_docReportSharePointMetadata">A DocReportSharePointMetadata table buffer</param>
    /// <returns>An instance of DocSharePointMetadataField class</returns>
    public static DocSharePointMetadataField construct(DocReportSharePointMetadata _docReportSharePointMetadata)
    {
        DocSharePointMetadataField docSharePointMetadataField;
        
        if (_docReportSharePointMetadata)
        {
            docSharePointMetadataField = new DocSharePointMetadataField();
            docSharePointMetadataField.parmFieldInternalName(_docReportSharePointMetadata.FieldInternalName);
            docSharePointMetadataField.parmFieldName(_docReportSharePointMetadata.FieldName);
            docSharePointMetadataField.parmFieldDataType(_docReportSharePointMetadata.FieldDataType);
            docSharePointMetadataField.parmIsRequired(_docReportSharePointMetadata.IsRequired);
        }

        return docSharePointMetadataField;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>