<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocPrintReportToPrinterExecutionInfo</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DocPrintReportToPrinterExecutionInfo implements SysPackable
{
    int              numberOfPrintedPages;
    boolean          saveToArchiveSuccess;
    str              printJobSettingsXmlStr;
    str              documentRoutingJobId;
    RecId            printJobHeaderRecId;
    str              resolvedPrinterPath;
    boolean          previewBeforePrintPrintingCanceled;
    boolean          reportDelivered;
    
    // Not packed:
    boolean           isExecutionFailed;


    #define.currentPackVersion(3)
    #localmacro.currentList
        version,
        numberOfPrintedPages,
        printJobSettingsXmlStr,
        documentRoutingJobId,
        saveToArchiveSuccess,
        printJobHeaderRecId,
        resolvedPrinterPath,
        previewBeforePrintPrintingCanceled,
        reportDelivered
    #endMacro
    
    #define.packVersion2(2)
    #localmacro.listVersion2
        version,
        numberOfPrintedPages,
        printJobSettingsXmlStr,
        documentRoutingJobId,
        saveToArchiveSuccess,
        printJobHeaderRecId,
        resolvedPrinterPath
    #endMacro

    #define.packVersion1(1)
    #localmacro.listVersion1
        version,
        numberOfPrintedPages,
        printJobSettingsXmlStr,
        documentRoutingJobId,
        saveToArchiveSuccess,
        printJobHeaderRecId
    #endMacro


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Packs the current object to the packed container.
    /// </summary>
    /// <returns>Packed container</returns>
    public container pack()
    {
        int version = #currentPackVersion;
        return [#currentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmReportDelivered</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the flag indicating if the report is delivered.
    /// </summary>
    /// <param name = "_reportDelivered">Is report delivered</param>
    /// <returns>True/False</returns>
    public boolean parmReportDelivered(boolean _reportDelivered = reportDelivered)
    {
        reportDelivered = _reportDelivered;
        return reportDelivered;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPreviewBeforePrintPrintingCanceled</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the flag indicating if the report should be previewed before the printing will be canceled
    /// </summary>
    /// <param name = "_previewBeforePrintPrintingCanceled">Preview the repport before cancel the printing</param>
    /// <returns>True/False</returns>
    public boolean parmPreviewBeforePrintPrintingCanceled(boolean _previewBeforePrintPrintingCanceled = previewBeforePrintPrintingCanceled)
    {
        previewBeforePrintPrintingCanceled = _previewBeforePrintPrintingCanceled;
        return previewBeforePrintPrintingCanceled;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmNumberOfPrintedPages</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the number of printed pages.
    /// </summary>
    /// <param name = "_numberOfPrintedPages">Number of printed pages</param>
    /// <returns>Number of printed pages</returns>
    public int parmNumberOfPrintedPages(int _numberOfPrintedPages = numberOfPrintedPages)
    {
        numberOfPrintedPages = _numberOfPrintedPages;
        return numberOfPrintedPages;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrintJobSettingsXmlStr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the print job settings as xml string.
    /// </summary>
    /// <param name = "_printJobSettingsXmlStr">Print job settings as xml string</param>
    /// <returns>Print job settings as xml string</returns>
    public str parmPrintJobSettingsXmlStr(str _printJobSettingsXmlStr = printJobSettingsXmlStr)
    {
        printJobSettingsXmlStr = _printJobSettingsXmlStr;
        return printJobSettingsXmlStr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmDocumentRoutingJobId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the document routing job Id.
    /// </summary>
    /// <param name = "_documentRoutingJobId">Document routing job Id</param>
    /// <returns>Document routing job Id</returns>
    public str parmDocumentRoutingJobId(str _documentRoutingJobId = documentRoutingJobId)
    {
        documentRoutingJobId = _documentRoutingJobId;
        return documentRoutingJobId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmSaveToArchiveSuccess</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the flag indicating if the report is successfully saved to archive.
    /// </summary>
    /// <param name = "_saveToArchiveSuccess">Is the report successfully saved to archive</param>
    /// <returns>True/False</returns>
    public boolean parmSaveToArchiveSuccess(boolean _saveToArchiveSuccess = saveToArchiveSuccess)
    {
        saveToArchiveSuccess = _saveToArchiveSuccess;
        return saveToArchiveSuccess;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmArchivePrintJobHeaderRecId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the print job header recId.
    /// </summary>
    /// <param name = "_printJobHeaderRecId">Print job header recId</param>
    /// <returns>Print job header recId</returns>
    public RecId parmArchivePrintJobHeaderRecId(RecId _printJobHeaderRecId = printJobHeaderRecId)
    {
        printJobHeaderRecId = _printJobHeaderRecId;
        return printJobHeaderRecId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmResolvedPrinterPath</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets resalved printer path.
    /// </summary>
    /// <param name = "_resolvedPrinterPath">Resolved printer path</param>
    /// <returns>Resolved printer path</returns>
    public str parmResolvedPrinterPath(str _resolvedPrinterPath = resolvedPrinterPath)
    {
        resolvedPrinterPath = _resolvedPrinterPath;
        return resolvedPrinterPath;
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Unpacks the packed container to the current object.
    /// </summary>
    /// <param name = "_pack">Packed container</param>
    /// <returns>True/False</returns>
    public boolean unpack(container _pack)
    {
        boolean   ret = false;
        int       version;
    
        if (typeOf(conPeek(_pack, 1)) == Types::Integer)
        {
            version = conPeek(_pack, 1);    

            if (version == #packVersion1)
            {
                [#listVersion1] = _pack;
                ret = true;
            }
            else if (version == #packVersion2)
            {
                [#listVersion2] = _pack;
                ret = true;
            }
            else if (version == #currentPackVersion)
            {
                [#currentList] = _pack;
                ret = true;
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>markAsFailedExecution</Name>
				<Source><![CDATA[
    /// <summary>
    /// Mark execution as failed.
    /// </summary>
    /// <returns>This object</returns>
    public DocPrintReportToPrinterExecutionInfo markAsFailedExecution()
    {
        isExecutionFailed = true;
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isExecutionFailed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the info whether the execution failed.
    /// </summary>
    /// <returns>True, if the execution failed</returns>
    public boolean isExecutionFailed()
    {
        return isExecutionFailed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isExecutionSuccessful</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the info whether the execution succeeded.
    /// </summary>
    /// <returns>True, if the execution succeeded</returns>
    public boolean isExecutionSuccessful()
    {
        return !isExecutionFailed;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>