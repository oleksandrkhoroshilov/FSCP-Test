<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocentricFileUploadOnPremControl</Name>
	<SourceCode>
		<Declaration><![CDATA[
[FormControlAttribute("DocentricFileUploadHTM", "resources/html/DocentricFileUploadHTM", classstr(DocentricFileUploadOnPremBuild))]
class DocentricFileUploadOnPremControl extends FormTemplateControl
{
    #define.PropertyName_AllowedFileExtensions("AllowedFileExtensions")
    #define.UploadFileCommandName("UploadFile")
    
    FormProperty fileContentProperty, allowedFileExtensionsProperty;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    public void new(FormBuildControl _build, FormRun _formRun)
    {
        super(_build,_formRun);

        this.setTemplateId('DocentricFileUploadHTM');
        this.setResourceBundleName('resources/html/DocentricFileUploadHTM');

        allowedFileExtensionsProperty = this.addProperty(methodStr(DocentricFileUploadOnPremControl, parmAllowedFileExtensions), Types::String);
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmAllowedFileExtensions</Name>
				<Source><![CDATA[
    [FormPropertyAttribute(FormPropertyKind::Value, #PropertyName_AllowedFileExtensions, true)]
    public str parmAllowedFileExtensions(str _value = allowedFileExtensionsProperty.parmValue())
    {
        if(!prmisdefault(_value))
        {
            allowedFileExtensionsProperty.setValueOrBinding(_value);
        }
        return allowedFileExtensionsProperty.parmValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>uploadFile</Name>
				<Source><![CDATA[
    [FormCommandAttribute(#uploadFileCommandName)]
    private void uploadFile(str _fileName = '', str _fileContent = '')
    {
        Object formRunObj = this.formRun();
        formRunObj.onUploadCompleted(_fileName, _fileContent);
    }

]]></Source>
			</Method>
			<Method>
				<Name>applyBuild</Name>
				<Source><![CDATA[
    public void applyBuild()
    {
        super();
 
        DocentricFileUploadOnPremBuild build = this.build();
        if (build)
        {
            this.parmAllowedFileExtensions(build.parmAllowedFileExtensions());
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>