<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocReportProformaInvoiceDataSource</Name>
	<SourceCode>
		<Declaration><![CDATA[
class DocReportProformaInvoiceDataSource extends DocReportProformaDataSource
{
    CustPaymSched   custPaymSched;
    Map             custPaymSchedLineMap;    // Map(Types::Int64{CustPaymSchedLine.RecId}, Types::Record{CustPaymSchedLine})

    CustTrans       invoiceCustTrans;
    Map             prepaymentCustTransMap;  // Map(Types::Int64{CustTrans.RecId}, Types::Record{CustTrans})


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmCustPaymSched</Name>
				<Source><![CDATA[
    public CustPaymSched parmCustPaymSched(CustPaymSched _custPaymSched = custPaymSched)
    {
        custPaymSched = _custPaymSched;
        return custPaymSched;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmCustPaymSchedLines</Name>
				<Source><![CDATA[
    public Map parmCustPaymSchedLines(Map _custPaymSchedLineMap = custPaymSchedLineMap)
    {
        custPaymSchedLineMap = _custPaymSchedLineMap;

        if (prmIsDefault(_custPaymSchedLineMap)) // Getter is called
        {
            if (custPaymSchedLineMap == null)
            {
                custPaymSchedLineMap = new Map(Types::Int64, Types::Record);
            }
        }

        return custPaymSchedLineMap;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmInvoiceCustTrans</Name>
				<Source><![CDATA[
    public CustTrans parmInvoiceCustTrans(CustTrans _invoiceCustTrans = invoiceCustTrans)
    {
        invoiceCustTrans = _invoiceCustTrans;
        return invoiceCustTrans;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmPrepaymentCustTransLines</Name>
				<Source><![CDATA[
    public Map parmPrepaymentCustTransLines(Map _prepaymentCustTransMap = prepaymentCustTransMap)
    {
        prepaymentCustTransMap = _prepaymentCustTransMap;

        if (prmIsDefault(_prepaymentCustTransMap)) // Getter is called
        {
            if (prepaymentCustTransMap == null)
            {
                prepaymentCustTransMap = new Map(Types::Int64, Types::Record);
            }
        }

        return prepaymentCustTransMap;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>