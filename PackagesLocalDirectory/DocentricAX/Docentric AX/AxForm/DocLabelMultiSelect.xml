<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DocLabelMultiSelect</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DocLabelMultiSelect extends FormRun
{
    FormRun callerFormRun;
    DocReportId callerReportId;
    DocReportTable docReportTable;
    DocLabelLanguage docLabelLanguage;
    DocLabelTable docLabel;
    FormDataSource reportLabelDs, labelLanguageDs, labelDs;
    str callerMenuItemName;

}
]]></Source>
			</Method>
			<Method>
				<Name>checkArgs</Name>
				<Source><![CDATA[
    private void checkArgs()
    {
        if (!element.args())
        {
            DocGlobalHelper::handleException(funcName(), "@DocentricAX2:FormCalledWithoutArguments");
        }
        
        Args args = element.args();
        
        if (!args.caller() || !args.record())
        {
            DocGlobalHelper::handleException(funcName(), "@DocentricAX2:InvalidCaller");
        }
        
        if (!(args.caller() is FormRun))
        {
            DocGlobalHelper::handleException(funcName(), "@DocentricAX2:InvalidCaller");
        }

        callerFormRun = args.caller() as FormRun;

        if (callerFormRun == null)
        {
            DocGlobalHelper::handleException(funcName(), "@DocentricAX2:InvalidCaller");
        }

        if (args.record() is DocReportTable)
        {
            docReportTable = args.record() as DocReportTable;
        }
        else if (args.record() is DocLabelLanguage)
        {
            docLabelLanguage = args.record() as DocLabelLanguage;
        }
        else if (args.record() is DocLabelTable)
        {
            docLabel = args.record() as DocLabelTable;
        }
        else 
        {
            DocGlobalHelper::handleException(funcName(), "@DocentricAX2:InvalidCaller");
        }

        callerMenuItemName = args.menuItemName();

        
        for (int i = 1; i <= callerFormRun.dataSourceCount(); i++)
        {
            if (callerFormRun.dataSource(i).cursor() is DocReportLabel)
            {
                reportLabelDs = callerFormRun.dataSource(i);
                break;
            }
            if (callerFormRun.dataSource(i).cursor() is DocLabelLanguage)
            {
                labelLanguageDs = callerFormRun.dataSource(i);
                break;
            }
            if (callerFormRun.dataSource(i).cursor() is DocLabelTable)
            {
                labelDs = callerFormRun.dataSource(i);
                break;
            }
        }

        // Caller datasource must be DocReportLabel, DocLabelLanguage or DocLabelTable
        if (!reportLabelDs && !labelLanguageDs && !labelDs)
        {
            DocGlobalHelper::handleException(funcName(), 'Invalid caller form datasource');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        element.checkArgs();        

        // We call this form in following scenarios:
        //      - from report setup form, to add the selected labels to the caller report
        //      - from translation by language form, to add the selected labels to the 
        //        caller label
        //      - from translation by label form, to add or delete translations
        //        for the selected languages
        if (docReportTable)
        {
            element.design().caption("@DocentricAX3:AddUserDefinedLabels");
            DocLabelSelectorTmp::fillTableWithUnusedLabelsForReport(DocLabelSelectorTmp, docReportTable.RecId);
            OKButton.text("@DocentricAX3:AddToReport");

            LabelForReportGroup.visible(true);
        }
        else if (docLabelLanguage)
        {
            element.design().caption("@DocentricAX3:AddTranslationsForLabels");
            DocLabelSelectorTmp::fillTableWithUnusedLabelsForLanguage(DocLabelSelectorTmp, docLabelLanguage.LanguageId);
            OKButton.text("@DocentricAX3:AddTranslations");

            LabelForLanguageGroup.visible(true);
        }
        else if (docLabel)
        {
            if (callerMenuItemName == menuItemDisplayStr(DocLabelAddTranslations))
            {
                element.design().caption("@DocentricAX3:AddTranslationsForSelectedLanguages");
                if (labelDs.recordsMarked().lastIndex() <= 1)
                {
                    // Single label selected, list only languages for which this label
                    // doesn't have translations
                    DocLabelSelectorTmp::fillTableWithUnusedLanguagesForLabel(DocLabelSelectorTmp, docLabel.GlobalLabelId);
                }
                else
                {
                    // Multiple labels selected, list all label languages
                    DocLabelSelectorTmp::fillTableWithAllLanguages(DocLabelSelectorTmp);
                }

                OKButton.text("@DocentricAX3:AddTranslations");

                LanguageGroup.visible(true);
            }
            else if (callerMenuItemName == menuItemDisplayStr(DocLabelDeleteTranslations))
            {
                element.design().caption("@DocentricAX3:DeleteTranslationsForSelectedLanguages");
                if (labelDs.recordsMarked().lastIndex() == 1)
                {
                    // Single label selected, list only languages for which this label
                    // has translations
                    DocLabelSelectorTmp::fillTableWithUsedLanguagesForLabel(DocLabelSelectorTmp, docLabel.GlobalLabelId);
                }
                else
                {
                    // Multiple labels selected, list all label languages
                    DocLabelSelectorTmp::fillTableWithAllLanguages(DocLabelSelectorTmp);
                }
                OKButton.text("@DocentricAX3:DeleteTranslations");

                LanguageGroup.visible(true);
            }
        }
        else
        {
            DocGlobalHelper::handleException(funcName(), 'Invalid caller form datasource');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        // Loop through selected temp records and perform the required action
        MultiSelectionHelper helper = MultiSelectionHelper::construct();
        helper.parmDatasource(DocLabelSelectorTmp_ds);

        DocLabelSelectorTmp tmpRecord;
        if (docLabel)
        {
            // Add or delete translations for these labels and multi-selected languages.
            // Iterate through the multi-selected languages, prepare the parameter
            // for calling the UI helper.
            tmpRecord = helper.getFirst();
            Set languagesSet = new Set(Types::String);
            while (tmpRecord.LanguageId)
            {
                languagesSet.add(tmpRecord.LanguageId);
                tmpRecord = helper.getNext();
            }
            
            Args helperArgs = new Args();
            helperArgs.menuItemName(callerMenuItemName);
            helperArgs.caller(callerFormRun);
            helperArgs.record(element.args().record());

            DocUserDefinedLabelUIHelper uiHelper = new DocUserDefinedLabelUIHelper();
            uiHelper.parmArgs(helperArgs);
            uiHelper.parmLanguagesSet(languagesSet);
            uiHelper.handleUIActions();     // DocLabelAddTranslations or DocLabelDeleteTranslations menu item
        }
        else
        {
            tmpRecord = helper.getFirst();
            while (tmpRecord.LabelId)
            {
                try
                {
                    if (docReportTable)
                    {
                        DocReportLabel::insertLabel(docReportTable.RecId, tmpRecord.GlobalLabelId, tmpRecord.LabelId);
                    }
                    else if (docLabelLanguage)
                    {
                        str basedOnSysLabelId = DocLabelTable::findByLabelId(tmpRecord.GlobalLabelId).BasedOnSysLabelId;
                        DocLabelTranslation::addForLabelAndLanguage(tmpRecord.LabelId, docLabelLanguage.LanguageId, '', basedOnSysLabelId);
                    }
                }
                catch
                {
                    if (docReportTable)
                    {
                        DocGlobalHelper::handleError(strFmt("@DocentricAX3:ErrorAddingNewGlobalLabelForReport", tmpRecord.GlobalLabelId, DocReportTable.ReportId));
                    }
                    else if (docLabelLanguage)
                    {
                        DocGlobalHelper::handleError(strFmt("@DocentricAX3:ErrorAddingNewTranslation", docLabelLanguage.LanguageId, tmpRecord.LabelId));
                    }
                }

                tmpRecord = helper.getNext();
            }
        }

        super();
        
        if (docReportTable)
        {
            reportLabelDs.research();
        }
        else if (docLabelLanguage)
        {
            labelLanguageDs.research(true);
        }
        else if (docLabel)
        {
            labelDs.research(true);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DocLabelSelectorTmp</Name>
			<Table>DocLabelSelectorTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Comment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FallbackTranslation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GlobalLabelId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LabelId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageDescription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TranslatedInLanguages</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Translation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseFallbackTranslation</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@DocentricAX3:AddUserDefinedLabels</Caption>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">DropDialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<Type>Grid</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>LabelForReportGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LabelId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>LabelId</DataField>
										<DataSource>DocLabelSelectorTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Translation</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Translation</DataField>
										<DataSource>DocLabelSelectorTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>TranslatedInLanguages</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TranslatedInLanguages</DataField>
										<DataSource>DocLabelSelectorTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Comment</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Comment</DataField>
										<DataSource>DocLabelSelectorTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FallbackTranslation</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>FallbackTranslation</DataField>
										<DataSource>DocLabelSelectorTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>UseFallbackTranslation</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>UseFallbackTranslation</DataField>
										<DataSource>DocLabelSelectorTmp</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>LabelForLanguageGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LabelId1</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>LabelId</DataField>
										<DataSource>DocLabelSelectorTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>FallbackTranslation1</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>FallbackTranslation</DataField>
										<DataSource>DocLabelSelectorTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>UseFallbackTranslation1</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>UseFallbackTranslation</DataField>
										<DataSource>DocLabelSelectorTmp</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>LanguageGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Group</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LanguageId</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>LanguageId</DataField>
										<DataSource>DocLabelSelectorTmp</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>LanguageDescription</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>LanguageDescription</DataField>
										<DataSource>DocLabelSelectorTmp</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<Text>@DocentricAX3:AddToReport</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>