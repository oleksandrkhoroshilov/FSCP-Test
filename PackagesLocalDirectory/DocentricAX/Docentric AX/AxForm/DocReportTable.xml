<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DocReportTable</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;

[Form]
public class DocReportTable extends FormRun implements IDocRefreshable
{
    DocTmpIdRef               dsSrsProviderClassIdRef;
    boolean                   templateDeleted;
    boolean                   areReportsLoadedInitially;
    DocDataSecurityManager    dataSecurityManager;

    Map                       srsReportToModuleMap;
    Map                       srsReportToDocumentTypeMap;
    Set                       nodeTypesAllowedForUser;


}
]]></Source>
			</Method>
			<Method>
				<Name>fillSrsDsProviderClassesCombo</Name>
				<Source><![CDATA[
    public void fillSrsDsProviderClassesCombo()
    {
        dsSrsProviderClassIdRef.clear();
        dsSrsProviderClassIdRef = DocReportingSetupHelper::buildSrsDataSourceProviderClassIdRef();
    }

]]></Source>
			</Method>
			<Method>
				<Name>activeDocReportTableActionsNoRecords</Name>
				<Source><![CDATA[
    public void activeDocReportTableActionsNoRecords()
    {
        if (DocReportTable.RecId != 0)
        {
            return;
        }

        // Disable particular controls in case that there is no report.
        DocReportTemplateNew.enabled(false);
        MaintainLabelButtonGroup.enabled(false);
        DocReportEmailTemplateNew.enabled(false);

        // Disable Reload system button on Templates tab if there is no master record
        ReloadSystemTemplatesActionsButtons.enabled(false);
        
        // Change the background color of the Validation group.
        element.changeValidationGroupBackgroundColor();
    }

]]></Source>
			</Method>
			<Method>
				<Name>activeDocReportTableActions</Name>
				<Source><![CDATA[
    public void activeDocReportTableActions()
    {
        // Set ER Data model to the related ER Model mapping model.
        ERDataModel.value(DocReportTable.ERModelMapping ? DocReportTable.ERDataModelTable().RecId : 0);
        DocReportTable_ds.object(fieldNum(DocReportTable, ERModelMapping)).mandatory(ERDataModel.value());
        
        // Change the background color of the Validation group.
        element.changeValidationGroupBackgroundColor();

        // Enable the Configurable business documents menu item for SSRS reports.
        // Note that it won't be visible anyway, if CBD is not enabled (DocParameters::find().EnableCbdDs == false).
        DocReportDsCBD.enabled(DocReportTable.ReportUsageType == DocReportUsageType::ClassicSSRS);
        
        // Enable buttons for adding templates and labels in case that were disabled
        // which occurrs in the situation when there is no report listed in the report setup form.
        DocReportTemplateNew.enabled(true);
        MaintainLabelButtonGroup.enabled(true);
        DocReportEmailTemplateNew.enabled(true);

        // Enable Reload system button on Templates tab in case it was disabled
        ReloadSystemTemplatesActionsButtons.enabled(true);

        // Enable the link to the Print Management setup form if the report is PrintMgmt report
        // and the user has privilege to access the corresponging parameters form
        DocPrintMgmtButton.enabled(srsReportToModuleMap.exists(DocReportTable.SRSReportName)
                                    && nodeTypesAllowedForUser.in(srsReportToModuleMap.lookup(DocReportTable.SRSReportName)));

        // Invoke directly executeQuery() method of the child datasources
        // because their join link type is Passive.
        DocReportTemplate_ds.executeQuery();
        DocReportLabel_ds.executeQuery();
        DocReportEmailTemplate_ds.executeQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>activeDocReportTemplateActions</Name>
				<Source><![CDATA[
    public void activeDocReportTemplateActions()
    {
        if (DocReportTemplate.IsDefaultTemplate)
        {
            SetDefaultTemplateButton.enabled(false);
        }
        else
        {
            SetDefaultTemplateButton.enabled(true);
        }

        boolean isTemplateFileAttached = DocReportTemplate.isFileAttached();
        DetachTemplateFileButton.enabled(isTemplateFileAttached);
        DownloadTemplateButton.enabled(isTemplateFileAttached);
    }

]]></Source>
			</Method>
			<Method>
				<Name>hideShowCbdFunctionality</Name>
				<Source><![CDATA[
    public void hideShowCbdFunctionality()
    {
        boolean isCbdVisible = DocParameters::find().EnableCbdDs;

        // Hide/Show the Configurable business documents menu item.
        DocReportDsCBD.visible(isCbdVisible);
        // Hide/Show the DataSourceType column in the Templates grid.
        ListOverview_DataSourceType.visible(isCbdVisible);
        // Hide/Show the Recheck DS type button on the Templates grid.
        ValidateTemplateDSTypeButton.visible(isCbdVisible);
    }

]]></Source>
			</Method>
			<Method>
				<Name>initForm</Name>
				<Source><![CDATA[
    private void initForm()
    {
        #SysSystemDefinedButtons

        // Hide the Attach button.
        FormCommandButtonControl button = this.control(this.controlId(#SystemDefinedAttachButton)) as FormCommandButtonControl;
        if (button)
        {
            button.visible(false);
        }

        // Init the form when it is opened from the Print destination settings form.
        this.initFormWhenCalledFromPrintDestForm();

        // Instance security manager.
        dataSecurityManager = new DocDataSecurityManager();

        // Check data security and hide Template tools if needed.
        if (!dataSecurityManager.checkDataSecurityConstraints(DocDataSecurityTemplateAction::TemplateTools))
        {
            ManageTemplatesButtonGroup.visible(false);
            UtilitiesButtonGroup.visible(false);
        }

        // Hide/Show the Configurable business documents functionality.
        this.hideShowCbdFunctionality();

        // Hide pre-release features if they are not enabled.
        DocFeaturePreview::applyFeaturePreviewToFormRun(this); 
        
        this.activeDocReportTableActionsNoRecords();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initFormWhenCalledFromPrintDestForm</Name>
				<Source><![CDATA[
    private void initFormWhenCalledFromPrintDestForm()
    {
        // Check if the form is opened from the Print destination settings form.
        if (element.args() && element.args().caller() && element.args().callerName() == formStr(SRSPrintDestinationSettingsForm))
        {
            DocReportId reportId = element.args().caller().getReportId();
            PrintMgmtDocumentType reportType = element.args().caller().getReportType();
            boolean reportTypeProvided = element.args().caller().isReportTypeProvided();

            if (reportId)
            {
                // If the report is known, set the range to this report.
                DocReportTable_ds.queryBuildDataSource().addRange(fieldNum(DocReportTable, ReportId)).value(queryValue(reportId));
            }
            else if (reportTypeProvided)
            {
                // If the PrintMgmtDocumentType is known, set the range to the corresponding reports.
                DocReportTable_ds.queryBuildDataSource().addRange(fieldNum(DocReportTable, ReportId))
                                                        .value(DocPrintMgmtHelper::getSrsReportNamesQueryValues(reportType));
            }

            element.viewEditModeHelper().setViewEditMode(ViewEditMode::View);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>enablePrintMgmtPerModuleButtons</Name>
				<Source><![CDATA[
    private void enablePrintMgmtPerModuleButtons()
    {
        // Enable/Disable Print Management per module buttons
        PrintMgmtAccountsPayable.enabled(nodeTypesAllowedForUser.in(PrintMgmtNodeType::Purch));
        PrintMgmtAccountsReceivable.enabled(nodeTypesAllowedForUser.in(PrintMgmtNodeType::Sales));
        PrintMgmtInventoryManagement.enabled(nodeTypesAllowedForUser.in(PrintMgmtNodeType::Invent));
        PrintMgmtProjectManagement.enabled(nodeTypesAllowedForUser.in(PrintMgmtNodeType::Project));
        PrintMgmtTransportationManagement.enabled(nodeTypesAllowedForUser.in(PrintMgmtNodeType::TMS));
        PrintMgmtWarehouseManagement.enabled(nodeTypesAllowedForUser.in(PrintMgmtNodeType::WHS));

        // If no module-related menu item is enabled, then also disable the menu button
        DocPrintMgmtPerModuleMenuButton.enabled(
            PrintMgmtAccountsPayable.enabled() ||
            PrintMgmtAccountsReceivable.enabled() ||
            PrintMgmtInventoryManagement.enabled() ||
            PrintMgmtProjectManagement.enabled() ||
            PrintMgmtTransportationManagement.enabled() ||
            PrintMgmtWarehouseManagement.enabled()
            );
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
        
        // Populate the PrintMgmtReportFormat table for the current company.
        DocPrintMgmtHelper::populatePrintMgmtReportFormat();

        this.initForm();
        this.fillSrsDsProviderClassesCombo();

        this.viewEditModeHelper().EditModeSwitched += eventhandler(this.viewEditModeHandler);
        this.viewEditModeHelper().ViewModeSwitched += eventhandler(this.viewEditModeHandler);
        this.viewEditModeHandler();

        // Init the maps with report - print mgmt module links
        DocPrintMgmtInfo infoHelper = DocPrintMgmtInfo::construct();
        srsReportToModuleMap = infoHelper.getSrsReportToModuleMap();
        srsReportToDocumentTypeMap = infoHelper.getSrsReportToDocumentTypeMap();

        nodeTypesAllowedForUser = DocPrintMgmtHelper::getNodeTypesAllowedForUser();

        // Offer to reload system templates.
        DocReportTable reports;
        select firstonly RecId from reports;
        if (reports.RecId == 0)
        {
            if (Box::yesNo("@DocentricAX:ReloadAllSystemTemplatesConfirm", DialogButton::Yes) == DialogButton::Yes)
            {
                MenuFunction mf = new MenuFunction(menuItemActionStr(DocReloadAllSystemTemplates), MenuItemType::Action);
                Args args = new Args();
                args.caller(this);
                mf.run(args);
                // This boolean is used to prevent refreshing query after setting position to first invalid report record.
                areReportsLoadedInitially = true;
            }
        }

        this.enablePrintMgmtPerModuleButtons();
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    public int task(int _p1)
    {
        int ret;
        #Task

        ret = super(_p1);

        if (_p1 == #taskEditRecord)
        {
            DocReportTable_IsActiveSRS.viewEditMode(ViewEditMode::Edit);
        }
        else if (_p1 == #taskDoneEditRecord)
        {
            DocReportTable_IsActiveSRS.viewEditMode(ViewEditMode::View);
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>viewEditModeHandler</Name>
				<Source><![CDATA[
    private void viewEditModeHandler()
    {
        boolean isEditMode = this.viewEditModeHelper().isInEditMode();
        SelectDefaultDSPClass.enabled(isEditMode);
        
        DocReportTable_IsActiveSRS.viewEditMode(isEditMode ? ViewEditMode::Edit : ViewEditMode::View);

        // Change the background color of the Validation group.
        element.changeValidationGroupBackgroundColor();
    }

]]></Source>
			</Method>
			<Method>
				<Name>changeValidationGroupBackgroundColor</Name>
				<Source><![CDATA[
    /// <summary>
    /// Changes the backgroud color of the Validation group.
    /// </summary>
    private void changeValidationGroupBackgroundColor()
    {
        // Change the background color of the Validation group.
        if (DocReportTable.IsValid == DocIsReportValid::Invalid)
        {
            IsValid.colorScheme(FormColorScheme::RGB);
            IsValid.backgroundColor(0xFDE7E9);  // red color from infolog error

            ReportValidationResult.visible(true);  // show the button for opening the Validation result form
        }
        else
        {
            // Restore the bacground color to the default color (different for view and edit mode)
            IsValid.colorScheme(FormColorScheme::RGB);
            IsValid.backgroundColor(element.viewEditModeHelper().isInEditMode() ? 0xFAF9F8 : 0xFFFFFF);

            ReportValidationResult.visible(false);   // hide the button for opening the Validation result form
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializePrintManagementSetupContextForCurrentDocument</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the <c>PrintMgmtSetupContext</c> object.
    /// </summary>
    /// <returns>The newly initialized <c>PrintMgmtSetupContext</c> object.</returns>
    public PrintMgmtSetupContext initializePrintManagementSetupContextForCurrentDocument()
    {
        PrintMgmtSetupContext setupContext = new PrintMgmtSetupContext();
        setupContext.parmCaller(element);
        setupContext.parmReferencedTableBuffer(null);

        DocPrintMgmtHelper::initPrintMgmtSetupContextForNode(setupContext, 
                                                             srsReportToModuleMap.lookup(DocReportTable.SRSReportName),
                                                             true,
                                                             DocPrintMgmtHelper::getPrintMgmtDocumentTypes(DocReportTable.SRSReportName));

        return setupContext;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSolutionVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the latest version of <c>ERSolutionVersionTable</c> record for the selected <c>ERModelMapping</c> value.
    /// The returned latest version depends on RunDraft flag in <c>ERSolutionTable</c>:
    ///     - if RunDraft is False, the latest version in status Completed or Shared is returned
    ///     - if RunDraft is True, the latest version in status Draft is returned
    ///     
    /// NOTE: This method is required by jumpRef method on ERModelMapping field. 
    ///       The method signature is copied from the form ERModelMappingTable.
    /// </summary>
    /// <returns>The latest version of <c>ERSolutionVersionTable</c> record.</returns>
    public ERSolutionVersionTable getSolutionVersion()
    {
        ERSolutionVersionTable erSolutionVersionTable;

        if (DocReportTable.ERModelMapping)
        {
            ERModelMappingTable erModelMappingTable = ERModelMappingTable::find(DocReportTable.ERModelMapping);
            if (erModelMappingTable)
            {
                ERSolutionTable erSolutionTable = erModelMappingTable.ERSolutionTable();
                if (erSolutionTable)
                {
                    erSolutionVersionTable = erSolutionTable.getLatestVersion(!erSolutionTable.RunDraft);
                }
            }
        }
        return erSolutionVersionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getModelMappingVersionTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the latest version of <c>ERModelMappingVersionTable</c> record for the selected <c>ERModelMapping</c> value.
    /// 
    /// NOTE: This method is required by jumpRef method on ERModelMapping field.
    ///       The method signature is copied from the form ERModelMappingTable.
    /// </summary>
    /// <returns>The latest version of <c>ERModelMappingVersionTable</c> record.</returns>
    public ERModelMappingVersionTable getModelMappingVersionTable()
    {
        ERModelMappingVersionTable erModelMappingVersionTable;

        if (DocReportTable.ERModelMapping)
        {
            ERModelMappingTable erModelMappingTable = ERModelMappingTable::find(DocReportTable.ERModelMapping);
            if (erModelMappingTable)
            {
                erModelMappingVersionTable = erModelMappingTable.getLatestVersion();
            }
        }
        return erModelMappingVersionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>refreshCallerDataSourceAndPosition</Name>
				<Source><![CDATA[
    /// <summary>
    /// Refreshes the form data and retains the current record position.
    /// </summary>
    /// <param name = "_record">Desired record to display</param>
    public void refreshCallerDataSourceAndPosition(Common _record = null)
    {
        if (_record != null)
        {
            FormDataSource formDataSource = FormDataUtil::getFormDataSource(_record);
            if(formDataSource)
            {
                formDataSource.research(true);
            }
        }
        else
        {
            DocReportTable_ds.research(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>templateEnableDisable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables/Disables marked report templates.
    /// </summary>
    /// <param name = "_enable">True/False</param>
    private void templateEnableDisable(boolean _enable)
    {
        if (!dataSecurityManager.checkDataSecurityConstraints(DocDataSecurityTemplateAction::EnableDisable, 
                                                                DocReportTable.ReportId,
                                                                DocReportTemplate.TemplateId, 
                                                                DocReportTemplate.CompanyId, 
                                                                DocReportTemplate.LanguageID, 
                                                                true))
        {
            return;
        }

        DocReportTemplate selectedTemplate;
        for (selectedTemplate = DocReportTemplate_ds.getFirst(true) ? DocReportTemplate_ds.getFirst(true) : DocReportTemplate_ds.cursor();
             selectedTemplate;
             selectedTemplate = DocReportTemplate_ds.getNext())
        {
            if (!dataSecurityManager.checkDataSecurityConstraints(DocDataSecurityTemplateAction::EnableDisable, 
                                                                    DocReportTable.ReportId,
                                                                    selectedTemplate.TemplateId, 
                                                                    selectedTemplate.CompanyId, 
                                                                    selectedTemplate.LanguageID, 
                                                                    true))
            {
                break;
            }

            DocReportTemplate::enableTemplate(selectedTemplate.RecId, _enable);
        }

        DocReportTemplate_ds.research(true);
    }

]]></Source>
			</Method>
			<Method>
				<Name>emailTemplateEnableDisable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Enables/Disables marked email templates.
    /// </summary>
    /// <param name = "_enable">True/False</param>
    private void emailTemplateEnableDisable(boolean _enable)
    {
        DocReportEmailTemplate selectedEmailTemplate;
        for (selectedEmailTemplate = DocReportEmailTemplate_ds.getFirst(true) ? DocReportEmailTemplate_ds.getFirst(true) : DocReportEmailTemplate_ds.cursor();
             selectedEmailTemplate;
             selectedEmailTemplate = DocReportEmailTemplate_ds.getNext())
        {
            DocReportEmailTemplate::enableEmailTemplate(selectedEmailTemplate.RecId, _enable);
        }
        DocReportEmailTemplate_ds.research(true);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>DocReportTable</Name>
				<Methods>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        public void executeQuery()
        {
            // Skip super so as to avoid repositiong away from first invalid report record.
            if (!areReportsLoadedInitially)
            {
                super();
            }

            // Resetting boolean so executeQuery may work properly on successive calls.
            areReportsLoadedInitially = false;

            // Refresh DS provider classes combo boxes.
            element.fillSrsDsProviderClassesCombo();

            element.activeDocReportTableActionsNoRecords();
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;
        
            ret = super();
        
            element.activeDocReportTableActions();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>hasDefaultDSPClassLabel</Name>
						<Source><![CDATA[
        public display str hasDefaultDSPClassLabel()
        {
            if (DocReportTable.hasDefaultDSPClass())
            {
                return "@DocentricAX:DefaultDSP";
            }
            else
            {
                return "@DocentricAX:CustomDSP";
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initialized the datasource.
        /// </summary>
        public void init()
        {
            super();

            // Set initial sort order to prevent unexpected behaviour when user filters the data
            this.queryBuildDataSource().addSortField(fieldNum(DocReportTable, ReportId), SortOrder::Ascending);
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>DataSourceProviderClassName</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            /// <summary>
            /// Calls lookup control.
            /// </summary>
            /// <param name = "_formControl">Form control</param>
            /// <param name = "_filterStr">Filter string</param>
            public void lookup(FormControl _formControl, str _filterStr)
            {
                DocSysTableLookup docSysTableLookup = DocSysTableLookup::newParameters(tableNum(DocTmpIdRef), _formControl);

                Query query = new Query();
                QueryBuildDataSource qbds = query.addDataSource(tablenum(DocTmpIdRef));
                qbds.addSortField(fieldnum(DocTmpIdRef, Name));

                docSysTableLookup.addLookupfield(fieldnum(DocTmpIdRef, Name), true);
                docSysTableLookup.setLabel("@SYS24724"); // Class name

                docSysTableLookup.addLookupfield(fieldnum(DocTmpIdRef, HelpTxt));
                docSysTableLookup.setLabel("@SYS7576"); // Description
            
                docSysTableLookup.parmQuery(query);
                // BP Deviation Documented
                docSysTableLookup.parmTmpBuffer(dsSrsProviderClassIdRef);

                docSysTableLookup.performFormLookup();

                // Set position to the selected DSP class in the lookup form
                docSysTableLookup.datasource().formRun().args().lookupField(fieldNum(DocTmpIdRef, Name));
                docSysTableLookup.datasource().formRun().args().lookupValue(_formControl.valueStr());
                docSysTableLookup.datasource().research(false);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>ERModelMapping</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            /// <summary>
            /// Calls lookup control.
            /// </summary>
            /// <param name = "_formReferenceControl">Form reference control</param>
            /// <returns>A selected record from lookup control</returns>
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                SysReferenceTableLookup lookup = SysReferenceTableLookup::newParameters(tableNum(ERModelMappingTable), _formReferenceControl);

                Query query = new Query();
                QueryBuildDataSource ds = query.addDataSource(tableNum(ERModelMappingTable));
                if (ERDataModel.value())
                {
                    ds.addRange(fieldNum(ERModelMappingTable, DataModel)).value(queryValue(ERDataModel.value()));
                }
                ds.addRange(fieldNum(ERModelMappingTable, Direction)).value(queryValue(ModelMappingDirection::ToModel));
                ds.addRange(fieldNum(ERModelMappingTable, IsDeleted)).value(queryValue(NoYes::No));

                lookup.parmQuery(query);
                lookup.addLookupfield(fieldNum(ERModelMappingTable, Name));
                lookup.addLookupfield(fieldNum(ERModelMappingTable, Description));
                return lookup.performFormLookup();
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            /// <summary>
            /// Opens a referenced form that contains data for the field.
            /// </summary>
            public void jumpRef()
            {
                ERModelMappingTable erModelMappingTable = ERModelMappingTable::find(DocReportTable.ERModelMapping);

                Args args = new Args();
                args.record(erModelMappingTable);
                args.caller(element);

                // This call requires methods getSolutionVersion and getModelMappingVersionTable defined on this form
                new MenuFunction(menuItemDisplayStr(ERModelMappingDesigner), MenuItemType::Display).run(args);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
			<DataSource>
				<Name>DocReportTemplate</Name>
				<Methods>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret;

            ret = super();

            element.activeDocReportTemplateActions();

            if (templateDeleted)
            {
                DocReportTemplate_ds.research(true);
                templateDeleted = false;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        public void delete()
        {
            super();

            templateDeleted = true;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>DocReportTableDeleteSrsReport</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            DocReportTable selectedReportTable;
            DocReportTemplate template;
            boolean selectedTemplatesStoredOnAzure, deleteTemplateFilesOnAzure, deleteReport;
            boolean selectedTemplatesStoredOnFileSystem, deleteTemplateFilesOnFileSystem;

            Set selectedReportSet = new Set(Types::Int64);
            selectedTemplatesStoredOnAzure = false;
            for (selectedReportTable = DocReportTable_ds.getFirst(true) ? DocReportTable_ds.getFirst(true) : DocReportTable_ds.cursor();
            selectedReportTable;
            selectedReportTable = DocReportTable_ds.getNext())
            {
                selectedReportSet.add(selectedReportTable.RecId);

                select firstonly RecId from template
                where template.Report == selectedReportTable.RecId &&
                      template.CurrentStorageType == DocTemplateStorageType::AzureBlobStorage &&
                      template.FileNameAzure != '';
                if (template.RecId != 0)
                {
                    selectedTemplatesStoredOnAzure = true;
                }
                select firstonly RecId from template
                where template.Report == selectedReportTable.RecId &&
                      template.CurrentStorageType == DocTemplateStorageType::FileSystem &&
                      template.FileNameFs != '';
                if (template.RecId != 0)
                {
                    selectedTemplatesStoredOnFileSystem = true;
                }
            }

            int numberOfSelectedReports = selectedReportSet.elements();
            if (numberOfSelectedReports == 0)
            {
                DocGlobalHelper::handleWarning("@DocentricAX:NoReportIsSelected", true, '', true);
            }

            // Ask for confirmation.
            if (numberOfSelectedReports > 1)
            {
                deleteReport = Box::confirm("@DocentricAX:DeleteRecordsWarning");
            }
            else
            {
                deleteReport = Box::confirm(strFmt("@DocentricAX:DeleteSingleRecord", DocLabelHelper::getLabelForTable(tableNum(DocReportTemplate))));
            }

            if (!deleteReport)
            {
                return;
            }

            if (selectedTemplatesStoredOnAzure)
            {
                deleteTemplateFilesOnAzure = Box::confirm("@DocentricAX:DeleteTemplateFilesConfirm");
            }
            
            if (selectedTemplatesStoredOnFileSystem)
            {
                deleteTemplateFilesOnFileSystem = Box::confirm("@DocentricAX:DeleteTemplateFilesConfirmFs");
            }

            DocReportTable::deleteReports(selectedReportSet, deleteTemplateFilesOnAzure, deleteTemplateFilesOnFileSystem);

            DocReportTable_ds.research(true);

            if (DocReportTable.RecId == 0)
            {
                // If this was the last report in the setup, refresh some form controls.
                element.activeDocReportTableActionsNoRecords();
                DocReportTemplate_ds.research();
                DocReportLabel_ds.research();
                DocReportEmailTemplate_ds.research();
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValidateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            DocReportTable      selectedReportTable;
            container           selectedReportContainer;
            int                 validatedReportCount, invalidReportCount;

            super();

            selectedReportContainer = conNull();
            for (selectedReportTable = DocReportTable_ds.getFirst(true) ? DocReportTable_ds.getFirst(true) : DocReportTable_ds.cursor();
            selectedReportTable;
            selectedReportTable = DocReportTable_ds.getNext())
            {
                selectedReportContainer = selectedReportContainer + [selectedReportTable.RecId];
            }

            if (selectedReportContainer == conNull())
            {
                DocGlobalHelper::handleWarning("@DocentricAX:NoReportIsSelected", true, '', true);
            }

            [validatedReportCount, invalidReportCount] = DocReportTable::validateReports(selectedReportContainer);

            DocReportTable_ds.research(true);

            str msg = strFmt("@DocentricAX:ValidatedReportCount", validatedReportCount) + ', ' +
                      strFmt("@DocentricAX:ValidReportCount", validatedReportCount - invalidReportCount) + ', ' +
                      strFmt("@DocentricAX:InvalidReportCount", invalidReportCount) + '. ' +
                      (invalidReportCount > 0 ? "@DocentricAX4:AdditionalInvalidReportInformation" : '');

            if (invalidReportCount > 0)
            {
                DocGlobalHelper::handleWarning(msg);
            }
            else
            {
                DocGlobalHelper::handleInfo(msg);
            }

            if (validatedReportCount == 1 && invalidReportCount == 1)
            {
                // Research the data source.
                DocReportTable_ds.research(true);
                
                // Switch the form to details view.
                element.viewOptionHelper().setViewOption(FormViewOption::Details);
                
                // Open the General tab to show the validation result.
                General.activatePage();
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DocPrintMgmtButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            if (nodeTypesAllowedForUser.in(srsReportToModuleMap.lookup(DocReportTable.SRSReportName)))
            {
                PrintMgmtSetupContext setupContext = element.initializePrintManagementSetupContextForCurrentDocument();
                PrintMgmt::launchSetup(setupContext);
            }
            else
            {
                // Should not happen, we disable button if user doesn't have privilege for the related module.
                DocGlobalHelper::handleError('Print management setup for this report is not allowed for current user.');
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PrintMgmtAccountsPayable</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            super();

            PrintMgmtSetupContext setupContext = new PrintMgmtSetupContext();

            setupContext.addHierarchyContext(PrintMgmtHierarchyType::Purch, PrintMgmtNodeType::Purch);
            setupContext.parmCaller(element);
            PrintMgmt::launchSetup(setupContext);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PrintMgmtAccountsReceivable</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {            
            super();
    
            PrintMgmtSetupContext setupContext = new PrintMgmtSetupContext();
        
            List inventDocs = new List(Types::Enum);
            inventDocs.addEnd(PrintMgmtDocumentType::InventPickList);

            setupContext.addHierarchyContext(PrintMgmtHierarchyType::Sales, PrintMgmtNodeType::Sales);
            setupContext.addHierarchyContext(PrintMgmtHierarchyType::Invent, PrintMgmtNodeType::Invent, inventDocs);
            setupContext.parmCaller(element);
            setupContext.parmReferencedTableBuffer(null);

            PrintMgmt::launchSetup(setupContext);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PrintMgmtInventoryManagement</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            PrintMgmtSetupContext setupContext = new PrintMgmtSetupContext();

            setupContext.addHierarchyContext(PrintMgmtHierarchyType::Invent, PrintMgmtNodeType::Invent);
            setupContext.parmCaller(element);
            setupContext.parmReferencedTableBuffer(null);
            PrintMgmt::launchSetup(setupContext);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PrintMgmtProjectManagement</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            PrintMgmtSetupContext setupContext = new PrintMgmtSetupContext();

            setupContext.addHierarchyContext(PrintMgmtHierarchyType::Project, PrintMgmtNodeType::Project);
            setupContext.parmCaller(element);
            PrintMgmt::launchSetup(setupContext);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PrintMgmtTransportationManagement</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            PrintMgmtSetupContext setupContext = new PrintMgmtSetupContext();

            setupContext.addHierarchyContext(PrintMgmtHierarchyType::TMS, PrintMgmtNodeType::TMS);
            setupContext.parmCaller(element);
            setupContext.parmReferencedTableBuffer(null);
            PrintMgmt::launchSetup(setupContext);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>PrintMgmtWarehouseManagement</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            PrintMgmtSetupContext setupContext = new PrintMgmtSetupContext();

            setupContext.addHierarchyContext(PrintMgmtHierarchyType::WHS, PrintMgmtNodeType::WHS);
            setupContext.parmCaller(element);
            setupContext.parmReferencedTableBuffer(null);
            PrintMgmt::launchSetup(setupContext);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DocReloadAllSystemTemplates</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (DocReportTable.RecId != 0)
            {
                // Ask for confirmation only if there are reports in Docentric report setup.
                if (!Box::confirm("@DocentricAX2:ReloadSystemTemplatesAllConfirm"))
                {
                    Box::info("@DocentricAX:NoteReloadSystemTemplates");
                    return;
                }
            }

            super();

            DocReportTable_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DocReloadAllSystemTemplatesForSelectedReports</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (!Box::confirm("@DocentricAX2:ReloadAllSystemTemplatesForSelectedReportsConfirm"))
            {
                return;
            }
            
            super();

            DocReportTable_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DocLoadNewReports</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (DocReportTable.RecId != 0)
            {
                // Ask for confirmation only if there are reports in Docentric report setup.
                if (!Box::confirm("@DocentricAX2:LoadNewReportsConfirm"))
                {
                    return;
                }
            }

            super();

            DocReportTable_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DocLoadNewSystemTemplatesForSelectedReports</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (!Box::confirm("@DocentricAX2:LoadNewSystemTemplatesForSelectedReportsConfirm"))
            {
                return;
            }
            
            super();

            DocReportTable_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DocAddReportsForPrintMgmtDocumentType</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            if (DocReportTable.RecId != 0)
            {
                // Ask for confirmation only if there are reports in Docentric report setup.
                if (!Box::confirm("@DocentricAX2:AddReportForPrintMgmtDocumentTypeConfirm"))
                {
                    return;
                }
            }
    
            super();
            
            DocReportTable_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SelectDefaultDSPClass</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        public void clicked()
        {
            super();

            DocReportTable.DataSourceProviderClassName = classStr(DocDataSourceProviderSrsReporting);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DataSourceProvider_DataSourceProviderClassName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean     ret;
            ClassName   newClassName, oldClassName;

            newClassName = '';
            if (this.text())
            {
                newClassName = this.text();
                if (className2Id(newClassName) == 0)
                {
                    DocGlobalHelper::handleError(strFmt("@DocentricAX:ClassNotExist", newClassName));
                    return false;
                }
            }
            else
            {
                DocGlobalHelper::handleError("@DocentricAX:DspClassIsMandatory");
                return false;
            }

            oldClassName = DocReportTable.DataSourceProviderClassName;
            DocReportTable.DataSourceProviderClassName = newClassName;

            if (!DocReportTable.validateDsProviderClass())
            {
                DocGlobalHelper::handleError(strFmt("@DocentricAX:DspClassInvalid", newClassName));
                DocReportTable.DataSourceProviderClassName = oldClassName;
                return false;
            }

            ret = super();

            if (!DocReportTable.hasDefaultDSPClass() && DocReportTable.IncludeSystemFieldsInDSSRS)
            {
                DocReportTable.IncludeSystemFieldsInDSSRS = false;
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ERDataModel</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();
    
            // Reset ER Model mapping, if ER Data model was changed
            DocReportTable.ERModelMapping = 0;

            // If ER Data model is set, the ER Model mapping field has to be mandatory
            DocReportTable_ds.object(fieldNum(DocReportTable, ERModelMapping)).mandatory(ERDataModel.value());

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            ERSolutionVersionTable erSolutionVersionTable;

            ERDataModelTable erDataModelTable = ERDataModelTable::find(ERDataModel.value());
            if (erDataModelTable)
            {
                ERSolutionTable erSolutionTable = ERSolutionTable::find(erDataModelTable.Solution);
                if (erSolutionTable)
                {
                    // If RunDraft is False, the latest version in status Completed or Shared is returned
                    // otherwise the latest version in status Draft is returned
                    erSolutionVersionTable = erSolutionTable.getLatestVersion(!erSolutionTable.RunDraft);
                }
            }

            Args args = new Args();
            args.record(erSolutionVersionTable);
    
            new MenuFunction(menuItemDisplayStr(ERDataModelDesigner), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DocReportTable_ERModelMapping</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            // Set ER Data model to the related ER Model mapping model
            ERDataModel.value(DocReportTable.ERDataModelTable().RecId);
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DisplayFields_LabelId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            if (DocReportLabel.LabelName == '')
            {
                DocReportLabel.LabelName = DocReportLabel.LabelId;
            }

            DocReportLabel_ds.research(true);
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EmailTemplateDelete</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Deletes selected email templates.
        /// </summary>
        public void clicked()
        {
            boolean deleteEmailTemplate;
            DocReportEmailTemplate selectedEmailTemplate;
            
            // Ask if the template file should be remove is well.
            int numberOfSelectedTemplates = 0;
            for (selectedEmailTemplate = DocReportEmailTemplate_ds.getFirst(true) ? DocReportEmailTemplate_ds.getFirst(true) : DocReportEmailTemplate_ds.cursor();
                 selectedEmailTemplate;
                 selectedEmailTemplate = DocReportEmailTemplate_ds.getNext())
            {
                numberOfSelectedTemplates++;
            }

            // Ask for confirmation.
            if (numberOfSelectedTemplates > 1)
            {
                deleteEmailTemplate = Box::confirm("@DocentricAX:DeleteRecordsWarning");
            }
            else
            {
                deleteEmailTemplate = Box::confirm(strFmt("@DocentricAX:DeleteSingleRecord", DocLabelHelper::getLabelForTable(tableNum(DocReportEmailTemplate))));
            }

            if (!deleteEmailTemplate)
            {
                return;
            }

            for (selectedEmailTemplate = DocReportEmailTemplate_ds.getFirst(true) ? DocReportEmailTemplate_ds.getFirst(true) : DocReportEmailTemplate_ds.cursor();
                 selectedEmailTemplate;
                 selectedEmailTemplate = DocReportEmailTemplate_ds.getNext())
            {
                ttsbegin;
                selectedEmailTemplate.selectForUpdate(true);
                selectedEmailTemplate.delete();
                ttscommit;
            }
            DocReportEmailTemplate_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EmailTemplateSetDefault</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Sets a selected report email template as default.
        /// </summary>
        public void clicked()
        {
            DocReportEmailTemplate::setDefaultEmailTemplate(DocReportEmailTemplate.RecId);
            DocReportEmailTemplate_ds.research(true);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EmailTemplateEnable</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enables selected email templates.
        /// </summary>
        public void clicked()
        {
            element.emailTemplateEnableDisable(true);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EmailTemplateDisable</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Disables selected email templates.
        /// </summary>
        public void clicked()
        {
            element.emailTemplateEnableDisable(false);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DeleteTemplateButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Deletes selected report templates.
        /// </summary>
        public void clicked()
        {
            boolean deleteTemplate;
            DocReportTemplate selectedTemplate;
            
            // Ask if the template file should be remove is well.
            boolean selectedTemplatesStoredOnAzure = false;
            boolean selectedTemplatesStoredOnFileSystem = false;
            int numberOfSelectedTemplates = 0;
            for (selectedTemplate = DocReportTemplate_ds.getFirst(true) ? DocReportTemplate_ds.getFirst(true) : DocReportTemplate_ds.cursor();
            selectedTemplate;
            selectedTemplate = DocReportTemplate_ds.getNext())
            {
                numberOfSelectedTemplates++;
                if (selectedTemplate.CurrentStorageType == DocTemplateStorageType::AzureBlobStorage &&
                    selectedTemplate.FileNameAzure != '')
                {
                    selectedTemplatesStoredOnAzure = true;
                }
                if (selectedTemplate.CurrentStorageType == DocTemplateStorageType::FileSystem &&
                    selectedTemplate.FileNameFs != '')
                {
                    selectedTemplatesStoredOnFileSystem = true;
                }
            }

            // Ask for confirmation.
            if (numberOfSelectedTemplates > 1)
            {
                deleteTemplate = Box::confirm("@DocentricAX:DeleteRecordsWarning");
            }
            else
            {
                deleteTemplate = Box::confirm(strFmt("@DocentricAX:DeleteSingleRecord", DocLabelHelper::getLabelForTable(tableNum(DocReportTemplate))));
            }

            if (!deleteTemplate)
            {
                return;
            }

            boolean deleteTemplateFilesOnAzure = false;
            if (selectedTemplatesStoredOnAzure)
            {
                deleteTemplateFilesOnAzure = Box::confirm("@DocentricAX:DeleteTemplateFilesConfirmation");
            }
            boolean deleteTemplateFilesOnFileSystem = false;
            if (selectedTemplatesStoredOnFileSystem)
            {
                deleteTemplateFilesOnFileSystem = Box::confirm("@DocentricAX:DeleteTemplateFilesConfirmationFs");
            }

            for (selectedTemplate = DocReportTemplate_ds.getFirst(true) ? DocReportTemplate_ds.getFirst(true) : DocReportTemplate_ds.cursor();
            selectedTemplate;
            selectedTemplate = DocReportTemplate_ds.getNext())
            {
                DocReportTemplate::deleteTemplate(dataSecurityManager, selectedTemplate.RecId, deleteTemplateFilesOnAzure, deleteTemplateFilesOnFileSystem);
            }

            DocReportTemplate_ds.research(true);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SetDefaultTemplateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Sets a selected report template as default.
        /// </summary>
        public void clicked()
        {
            if (!dataSecurityManager.checkDataSecurityConstraints(DocDataSecurityTemplateAction::SetDefault, DocReportTable.ReportId,
                                                                  DocReportTemplate.TemplateId, DocReportTemplate.CompanyId, DocReportTemplate.LanguageID, true))
            {
                return;
            }

            DocReportTemplate::setDefaultTemplate(DocReportTemplate.RecId);
            DocReportTemplate_ds.research(true);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DetachTemplateFileButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Detaches attached template file from the selected report template.
        /// </summary>
        public void clicked()
        {
            if (!dataSecurityManager.checkDataSecurityConstraints(DocDataSecurityTemplateAction::Detach, DocReportTable.ReportId,
                                                                  DocReportTemplate.TemplateId, DocReportTemplate.CompanyId, DocReportTemplate.LanguageID, true))
            {
                return;
            }

            if (Box::confirm(strFmt("@DocentricAX:DetachTemplateFileConfirm", DocReportTemplate.fileName())))
            {
                DocReportTemplate::detachTemplateFile(DocReportTemplate.RecId);

                DocReportTemplate_ds.research(true);
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DownloadTemplateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Downloads a template file for the selected report template.
        /// </summary>
        public void clicked()
        {
            if (!dataSecurityManager.checkDataSecurityConstraints(DocDataSecurityTemplateAction::Download, DocReportTable.ReportId,
                                                                  DocReportTemplate.TemplateId, DocReportTemplate.CompanyId, DocReportTemplate.LanguageID, true))
            {
                return;
            }

            DocReportingSetupHelper::downloadTemplate(DocReportTemplate.RecId);
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReloadAllButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Reload all system templates for the current report.
        /// </summary>
        public void clicked()
        {
            if (DocReportTable.RecId == 0)
            {
                return;
            }

            if (!dataSecurityManager.checkDataSecurityConstraints(DocDataSecurityTemplateAction::ReloadSystem, DocReportTable.ReportId))
            {
                return;
            }

            if (DocReportTable.hasAnyCustomizedSystemTemplate())
            {
                if (!Box::confirm("@DocentricAX:CurrentReportReloadSystemTemplatesConfirm"))
                {
                    Box::info("@DocentricAX:NoteReloadSystemTemplates");
                    return;
                }
            }
            else
            {
                if (!Box::confirm("@DocentricAX2:ReloadAllForReportConfirm"))
                {
                    return;
                }
            }

            Set selectedReportSet = new Set(Types::String);
            selectedReportSet.add(DocReportTable.ReportId);

            try
            {
                int reloadedSystemTemplatesCount, invalidReportCount, validatedReportCount;
                DocReportTable firstInvalidReportRecord;

                // Reload all system templates for the current report. No info message is returned as the user sees the change.
                [reloadedSystemTemplatesCount, invalidReportCount, firstInvalidReportRecord, validatedReportCount] =
                    DocReportingSetupHelper::reloadSystemTemplatesForReportsV2(selectedReportSet, false, false);

                DocReportTable_ds.research(true);

                if (invalidReportCount > 0)
                {
                    // Warn user of invalid report.
                    if (invalidReportCount == 1 && validatedReportCount == 1)
                    {
                        Box::warning(strFmt("@DocentricAX4:SingleInvalidReportsWarning", firstInvalidReportRecord.ReportId));
                    }
                }
            }
            catch
            {
                DocGlobalHelper::handleError("@DocentricAX2:ErrorReloadingSystemTemplates");
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>LoadNewButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Reloads only new system templates for the current report.
        /// </summary>
        public void clicked()
        {
            if (DocReportTable.RecId == 0)
            {
                return;
            }

            if (!dataSecurityManager.checkDataSecurityConstraints(DocDataSecurityTemplateAction::ReloadSystem, DocReportTable.ReportId))
            {
                return;
            }

            if (!Box::confirm("@DocentricAX2:LoadNewForReportConfirm"))
            {
                return;
            }

            Set selectedReportSet = new Set(Types::String);
            selectedReportSet.add(DocReportTable.ReportId);
            
            try
            {
                int reloadedSystemTemplatesCount, invalidReportCount, validatedReportCount;
                DocReportTable firstInvalidReportRecord;

                // Reload only new system templates for the current report. If there are no new templates, the warning message is displayed
                [reloadedSystemTemplatesCount, invalidReportCount, firstInvalidReportRecord, validatedReportCount] =
                    DocReportingSetupHelper::reloadSystemTemplatesForReportsV2(selectedReportSet, true, false);
                
                if (reloadedSystemTemplatesCount == 0)
                {
                    DocGlobalHelper::handleWarning("@DocentricAX2:NoNewSystemTemplatesInAOT");
                }

                DocReportTable_ds.research(true);

                if (invalidReportCount > 0)
                {
                    // Warn user of invalid report.
                    Box::warning(strFmt("@DocentricAX4:SingleInvalidReportsWarning", firstInvalidReportRecord.ReportId));
                }
            }
            catch
            {
                DocGlobalHelper::handleError("@DocentricAX2:ErrorReloadingSystemTemplates");
            }

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EnableTemplateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Enables selected report templates.
        /// </summary>
        public void clicked()
        {
            element.templateEnableDisable(true);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DisableTemplateButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Disables selected report templates.
        /// </summary>
        public void clicked()
        {
            element.templateEnableDisable(false);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ValidateTemplateDSTypeButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validates a template datasource for selected report templates.
        /// </summary>
        public void clicked()
        {
            if (!dataSecurityManager.checkDataSecurityConstraints(DocDataSecurityTemplateAction::SetDataSourceType, DocReportTable.ReportId,
                                                                  DocReportTemplate.TemplateId, DocReportTemplate.CompanyId, DocReportTemplate.LanguageID, true))
            {
                return;
            }

            DocReportTemplate selectedTemplate;
            for (selectedTemplate = DocReportTemplate_ds.getFirst(true) ? DocReportTemplate_ds.getFirst(true) : DocReportTemplate_ds.cursor();
                 selectedTemplate;
                 selectedTemplate = DocReportTemplate_ds.getNext())
            {
                if (!dataSecurityManager.checkDataSecurityConstraints(DocDataSecurityTemplateAction::SetDataSourceType, DocReportTable.ReportId,
                                                                      selectedTemplate.TemplateId, selectedTemplate.CompanyId, selectedTemplate.LanguageID, true))
                {
                    break;
                }
                
                boolean templateDsTypeUpdated = DocReportingSetupHelper::recheckTemplateDataSourceType(selectedTemplate.RecId, true);
                if (templateDsTypeUpdated)
                {
                    DocTemplateDataSourceType templateDsTypeOld = selectedTemplate.DataSourceType;
                    selectedTemplate.reread();
                    str templateIdMsg = selectedTemplate.TemplateId + (selectedTemplate.CompanyId ? ', ' + selectedTemplate.CompanyId : '') + (selectedTemplate.LanguageId ? ', ' + selectedTemplate.LanguageId : '');
                    DocGlobalHelper::handleWarning(strFmt("@DocentricAX3:RecheckTemplateDsTypeWarning", templateIdMsg, templateDsTypeOld, selectedTemplate.DataSourceType));
                }
                else
                {
                    str templateIdMsg = selectedTemplate.TemplateId + (selectedTemplate.CompanyId ? ', ' + selectedTemplate.CompanyId : '') + (selectedTemplate.LanguageId ? ', ' + selectedTemplate.LanguageId : '');
                    DocGlobalHelper::handleInfo(strFmt("@DocentricAX3:RecheckTemplateDsTypeInfo", templateIdMsg, selectedTemplate.DataSourceType));
                }
            }

            DocReportTemplate_ds.research(true);

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ListOverview_signatureAppearanceTemplate</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens a referenced form that contains data for the field.
        /// </summary>
        public void jumpRef()
        {
            DocElectronicSignatureAppearance::jumpRef(element, DocReportTemplate.signatureAppearanceTemplate());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DocReportTable</Name>
			<Table>DocReportTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ArchivingEmailAttachmentsOption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ArchivingReportParamsOption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ArchivingReportsOption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AsciiControlCharactersHandling</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataSourceProviderClassName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailAccountDisplayName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailBounceToAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailDeliveryReceiptCondition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailEmailingMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailMsgPriority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailReadReceiptAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailReplyToAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ERModelDataToIncludeInDS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ERModelMapping</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GenerateXmlDsWithReportRun</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GenerateXmlDsWithReportRunMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GenerateXmlDsWithReportRunSettings</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeAllDisplayMethodsInDS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeCompanyLogoInDS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeDocuBrandingInDSSRS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeHiddenParamsInDS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeReportDefinedDispMethodsInDS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeReportDefinedFieldsInDS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeSystemFieldsInDSSRS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsActiveSRS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>IsValid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>LastValidationDatetime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdfDocumentAuthor</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdfDocumentKeywords</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdfDocumentSubject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PdfDocumentTitle</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportDefaultCaption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportDescription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportUsageType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RestrictForNewPrinters</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SRSOnlyReportName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SRSReportDesignName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SRSReportName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuppressRDPExecution</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseDocentricPreviewerForSrs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseDocentricPreviewForSrs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseOnlyWithPrintDestinations</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ValidationErrorList</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DocReportTemplate</Name>
			<Table>DocReportTemplate</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Comment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CurrentStorageType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataSourceType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileNameAot</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileNameAzure</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileNameFs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileNameSp</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDefaultTemplate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsEnabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalStorageResourceName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalStorageType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Report</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SignatureAppearanceId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SignatureAppearanceOverride</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StorageAzureContainer</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StorageFileSystemFolderPath</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StorageResourceName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StorageSharePointFolderPath</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StorageSharePointSiteUrl</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tags</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TemplateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Title</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>DocReportTable</JoinSource>
			<LinkType>Passive</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DocReportLabel</Name>
			<Table>DocReportLabel</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>LabelId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LabelName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Report</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>DocReportTable</JoinSource>
			<LinkType>Passive</LinkType>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DocReportEmailTemplate</Name>
			<Table>DocReportEmailTemplate</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Comment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailTemplateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>HtmlBody</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsDefaultTemplate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsEnabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSenderAddressEnabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSenderNameEnabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsSubjectEnabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Report</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SenderAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SenderName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Subject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tags</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Title</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>DocReportTable</JoinSource>
			<LinkType>Passive</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@DocentricAX:DocentricAXReports</Caption>
		<DataSource xmlns="">DocReportTable</DataSource>
		<DefaultAction xmlns="">MainGridDefaultAction</DefaultAction>
		<Pattern xmlns="">DetailsMaster</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">DetailsFormMaster</Style>
		<TitleDataSource xmlns="">DocReportTable</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ApplicationBar</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ActionPane</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>MaintainButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormDropDialogButtonControl">
								<Name>DocReportTableAddSrsReport</Name>
								<HelpText>@DocentricAX:CreateNewSrsReportDesc</HelpText>
								<Type>DropDialogButton</Type>
								<FormControlExtension
									i:nil="true" />
								<DataSource>DocReportTable</DataSource>
								<MenuItemName>DocReportTableAddSrsReport</MenuItemName>
								<MultiSelect>Yes</MultiSelect>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>DocReportTableDeleteSrsReport</Name>
								<NeededPermission>Delete</NeededPermission>
								<Type>CommandButton</Type>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Delete</NormalImage>
								<SaveRecord>No</SaveRecord>
								<Text>@DocentricAX:Delete</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ValidateButton</Name>
								<HelpText>@DocentricAX:ValidateDesc</HelpText>
								<NeededPermission>Update</NeededPermission>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Checkmark</NormalImage>
								<Text>@DocentricAX:Validate</Text>
							</AxFormControl>
						</Controls>
						<DataSource>DocReportTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>SettingsActionPane</Name>
						<Type>ActionPaneTab</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>DataSourceButtonGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportDsGenerationOptions</Name>
										<HelpText>@DocentricAX:GenerationOptionsDesc</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportDsGenerationOptions</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportDdsp</Name>
										<HelpText>@DocentricAX3:SampleDDSPHelp</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportDdsp</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportDsCBD</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HelpText>@DocentricAX3:CBDHelp</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportDsCBD</MenuItemName>
									</AxFormControl>
								</Controls>
								<Caption>@DocentricAX:DataSource</Caption>
								<DataSource>DocReportTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>PlaceholdersButtonGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportUserDefinedPlaceholder</Name>
										<HelpText>@DocentricAX3:UserDefinedPlaceholdersHelp</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportUserDefinedPlaceholder</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportPlaceholderList</Name>
										<AllowEdit>No</AllowEdit>
										<HelpText>@DocentricAX2:PlaceholderListHelp</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportPlaceholderList</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<Caption>@DocentricAX2:ViewPlaceholders</Caption>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>PrintDestinationsButtonGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportEmailingSettings</Name>
										<HelpText>@DocentricAX:SetupEmailingSettingsReport</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportEmailingSettings</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportPreviewSettings</Name>
										<HelpText>@DocentricAX:PreviewReportDesc</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportPreviewSettings</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportPrintArchiveSettings</Name>
										<HelpText>@DocentricAX2:ReportPrintArchiveSettingsDesc</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportPrintArchiveSettings</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocRestrictedPrinterByReport</Name>
										<HelpText>@DocentricAX3:RestrictedPrintersOnReportSetupHelp</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>DocReportTable</DataSource>
										<MenuItemName>DocRestrictedPrinterByReport</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@DocentricAX3:RestrictedPrinters</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportSharePointSettings</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>DocReportTable</DataSource>
										<MenuItemName>DocReportSharePointSettings</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<Caption>@DocentricAX:PrintDestinations</Caption>
								<DataSource>DocReportTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>PdfGenerationButtonGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportPdfSecuritySettings</Name>
										<HelpText>@DocentricAX3:PDFSecuritySettingsHelp</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportPdfSecuritySettings</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportPdfDocumentProperties</Name>
										<HelpText>@DocentricAX3:PDFDocumentPropertiesHelp</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportPdfDocumentProperties</MenuItemName>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<Caption>@DocentricAX3:DocumentGeneration</Caption>
								<DataSource>DocReportTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>PrintManagementButtonGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>DocPrintMgmtButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<ElementPosition>1431655764</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<HelpText>@DocentricAX3:PrintManagementButtonHelp</HelpText>
										<LeftMode>AutoRight</LeftMode>
										<Type>Button</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@SYS54502</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>DocPrintMgmtPerModuleMenuButton</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>MenuButton</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>PrintMgmtAccountsPayable</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ConfigurationKey>LogisticsBasic</ConfigurationKey>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<LeftMode>AutoRight</LeftMode>
												<NeededPermission>Delete</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Text>@DocentricAX3:PrintMgmtAccountsPayable</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>PrintMgmtAccountsReceivable</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ConfigurationKey>LedgerBasic</ConfigurationKey>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<LeftMode>AutoRight</LeftMode>
												<NeededPermission>Delete</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Text>@DocentricAX3:PrintMgmtAccountsReceivable</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>PrintMgmtInventoryManagement</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Delete</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Text>@DocentricAX3:PrintMgmtInventoryManagement</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>PrintMgmtProjectManagement</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<NeededPermission>Delete</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Text>@DocentricAX3:PrintMgmtProjectManagement</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>PrintMgmtTransportationManagement</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<LeftMode>AutoRight</LeftMode>
												<NeededPermission>Delete</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Text>@DocentricAX3:PrintMgmtTransportationManagement</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>PrintMgmtWarehouseManagement</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<ElementPosition>1431655764</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<HeightMode>Auto</HeightMode>
												<LeftMode>AutoRight</LeftMode>
												<NeededPermission>Delete</NeededPermission>
												<Type>Button</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<WidthMode>Auto</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<MultiSelect>Yes</MultiSelect>
												<Text>@DocentricAX3:PrintMgmtWarehouseManagement</Text>
											</AxFormControl>
										</Controls>
										<MultiSelect>Yes</MultiSelect>
										<Text>@DocentricAX3:PrintMgmtPerModule</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocPrintMgmtUtils</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocPrintMgmtUtils</MenuItemName>
									</AxFormControl>
								</Controls>
								<Caption>@DocentricAX3:PrintManagement</Caption>
								<DataSource>DocReportTable</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@DocentricAX:Settings</Caption>
						<DataSource>DocReportTable</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneTabControl">
						<Name>ToolsActionPane</Name>
						<Type>ActionPaneTab</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>SystemTemplatesButtonGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReloadAllSystemTemplates</Name>
										<HelpText>@DocentricAX2:ReloadAllHelp</HelpText>
										<NeededPermission>Delete</NeededPermission>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReloadAllSystemTemplates</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReloadAllSystemTemplatesForSelectedReports</Name>
										<HelpText>@DocentricAX2:ReloadAllSystemTemplatesForSelectedReportsHelp</HelpText>
										<NeededPermission>Delete</NeededPermission>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReloadAllSystemTemplatesForSelectedReports</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocLoadNewReports</Name>
										<HelpText>@DocentricAX2:LoadNewReportsHelp</HelpText>
										<NeededPermission>Delete</NeededPermission>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocLoadNewReports</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocLoadNewSystemTemplatesForSelectedReports</Name>
										<HelpText>@DocentricAX2:LoadNewSystemTemplatesForSelectedReportsHelp</HelpText>
										<NeededPermission>Delete</NeededPermission>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocLoadNewSystemTemplatesForSelectedReports</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<Caption>@DocentricAX:SystemTemplates</Caption>
								<DataSource>DocReportTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ImportExportButtonGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportImportSetupData</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportImportSetupData</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportExportSetupData</Name>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportExportSetupData</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<Caption>@DocentricAX:ImportExport</Caption>
								<DataSource>DocReportTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ManageReportsButtonGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportUpdateSettings</Name>
										<HelpText>@DocentricAX:UpdateReportSettingsInBulk</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>DocReportTable</DataSource>
										<MenuItemName>DocReportUpdateSettings</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocAddReportsForPrintMgmtDocumentType</Name>
										<HelpText>@DocentricAX2:AddReportForPrintMgmtDocumentTypeHelp</HelpText>
										<NeededPermission>Create</NeededPermission>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocAddReportsForPrintMgmtDocumentType</MenuItemName>
										<MenuItemType>Action</MenuItemType>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<Caption>@DocentricAX:ManageReports</Caption>
								<DataSource>DocReportTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>ManageTemplatesButtonGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportUploadTemplates</Name>
										<HelpText>@DocentricAX:UploadReportTemplatesDesc</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportUploadTemplates</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportDownloadTemplates</Name>
										<HelpText>@DocentricAX:DownloadTemplatesDesc</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportDownloadTemplates</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>DocReportUpdateTemplateStorage</Name>
										<HelpText>@DocentricAX:UpdateStorageSettingsDesc</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<MenuItemName>DocReportUpdateTemplateStorage</MenuItemName>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
									</AxFormControl>
								</Controls>
								<Caption>@DocentricAX:ManageTemplates</Caption>
								<DataSource>DocReportTable</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>UtilitiesButtonGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormMenuButtonControl">
										<Name>ManageAzureContainers</Name>
										<Type>MenuButton</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>DocAzureContainerCreation</Name>
												<Type>MenuFunctionButton</Type>
												<FormControlExtension
													i:nil="true" />
												<MenuItemName>DocAzureContainerCreation</MenuItemName>
												<MultiSelect>Yes</MultiSelect>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>DocAzureContainerDeletion</Name>
												<Type>MenuFunctionButton</Type>
												<FormControlExtension
													i:nil="true" />
												<MenuItemName>DocAzureContainerDeletion</MenuItemName>
												<MultiSelect>Yes</MultiSelect>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormMenuFunctionButtonControl">
												<Name>DocAzureBlobDeletion</Name>
												<Type>MenuFunctionButton</Type>
												<FormControlExtension
													i:nil="true" />
												<MenuItemName>DocAzureBlobDeletion</MenuItemName>
												<MultiSelect>Yes</MultiSelect>
											</AxFormControl>
										</Controls>
										<MultiSelect>Yes</MultiSelect>
										<Text>@DocentricAX:ManageAzureStorage</Text>
									</AxFormControl>
								</Controls>
								<Caption>@DocentricAX:Utilities</Caption>
							</AxFormControl>
						</Controls>
						<Caption>@DocentricAX:Tools</Caption>
						<DataSource>DocReportTable</DataSource>
					</AxFormControl>
				</Controls>
				<AlignChild>No</AlignChild>
				<AlignChildren>No</AlignChildren>
				<DataSource>DocReportTable</DataSource>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>NavigationList</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>NavigationListQuickFilterControl</Name>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>ListStyleGrid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>ReportNavigationList_SRSOnlyReportName</Value>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>ListStyleGrid</Name>
						<AllowEdit>No</AllowEdit>
						<Type>Grid</Type>
						<WidthMode>SizeToContent</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>ReportNavigationList</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReportNavigationList_SRSOnlyReportName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SRSOnlyReportName</DataField>
										<DataSource>DocReportTable</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReportNavigationList_SRSReportDesignName</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SRSReportDesignName</DataField>
										<DataSource>DocReportTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataGroup>NavigationList</DataGroup>
								<DataSource>DocReportTable</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>DocReportTable</DataSource>
						<MultiSelect>No</MultiSelect>
						<ShowRowLabels>No</ShowRowLabels>
						<Style>List</Style>
					</AxFormControl>
				</Controls>
				<FrameType>None</FrameType>
				<Style>SidePanel</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>Tab</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>DetailsPanel</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>HeaderGroup</Name>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocReportTable_ReportId</Name>
										<Skip>Yes</Skip>
										<Type>String</Type>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<DataField>ReportId</DataField>
										<DataSource>DocReportTable</DataSource>
										<ShowLabel>No</ShowLabel>
										<Style>TitleField</Style>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ReportStatus</Name>
										<ExtendedStyle>entityStatus</ExtendedStyle>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>DocReportTable_IsActiveSRS</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>CheckBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>IsActiveSRS</DataField>
												<DataSource>DocReportTable</DataSource>
											</AxFormControl>
										</Controls>
										<ArrangeMethod>HorizontalRight</ArrangeMethod>
										<Breakable>No</Breakable>
										<FrameType>None</FrameType>
										<ViewEditMode>View</ViewEditMode>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>DetailTitleContainer</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormTabControl">
								<Name>HeaderTab</Name>
								<Type>Tab</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>General</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Pattern>FieldsFieldGroups</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>GeneralGroup</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormReferenceGroupControl">
														<Name>GeneralGroup_ReportGroup</Name>
														<Type>ReferenceGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls />
														<DataSource>DocReportTable</DataSource>
														<ReferenceField>ReportGroup</ReferenceField>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>GeneralGroup_ReportDescription</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>ReportDescription</DataField>
														<DataSource>DocReportTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>GeneralGroup_SRSOnlyReportName</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>SRSOnlyReportName</DataField>
														<DataSource>DocReportTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>GeneralGroup_SRSReportDesignName</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>SRSReportDesignName</DataField>
														<DataSource>DocReportTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormStringControl">
														<Name>GeneralGroup_ReportDefaultCaption</Name>
														<Type>String</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>ReportDefaultCaption</DataField>
														<DataSource>DocReportTable</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormCheckBoxControl">
														<Name>GeneralGroup_UseOnlyWithPrintDestinations</Name>
														<Type>CheckBox</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>UseOnlyWithPrintDestinations</DataField>
														<DataSource>DocReportTable</DataSource>
													</AxFormControl>
												</Controls>
												<DataGroup>General</DataGroup>
												<DataSource>DocReportTable</DataSource>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>ValidityGroupIsValid</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormComboBoxControl">
														<Name>IsValid</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<Type>ComboBox</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>IsValid</DataField>
														<DataSource>DocReportTable</DataSource>
														<Items />
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>ReportValidationResult</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ExtendedStyle>button_inlineImageOnly</ExtendedStyle>
														<Type>MenuFunctionButton</Type>
														<FormControlExtension
															i:nil="true" />
														<ButtonDisplay>ImageOnly</ButtonDisplay>
														<MenuItemName>DocReportValidationResult</MenuItemName>
														<NormalImage>View</NormalImage>
													</AxFormControl>
												</Controls>
												<ArrangeMethod>HorizontalLeft</ArrangeMethod>
												<Breakable>No</Breakable>
												<DataSource>DocReportTable</DataSource>
												<FrameType>None</FrameType>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>ValidityGroupLastValidationDatetime</Name>
												<Type>Group</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormDateTimeControl">
														<Name>LastValidationDatetime</Name>
														<Type>DateTime</Type>
														<FormControlExtension
															i:nil="true" />
														<DataField>LastValidationDatetime</DataField>
														<DataSource>DocReportTable</DataSource>
													</AxFormControl>
												</Controls>
											</AxFormControl>
										</Controls>
										<ColumnsMode>Fill</ColumnsMode>
										<Caption>@DocentricAX:General</Caption>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>DSP</Name>
										<ElementPosition>1073741822</ElementPosition>
										<FilterExpression>%1</FilterExpression>
										<HeightMode>Auto</HeightMode>
										<Pattern>ToolbarFields</Pattern>
										<PatternVersion>1.1</PatternVersion>
										<Type>TabPage</Type>
										<VerticalSpacing>-1</VerticalSpacing>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneControl">
												<Name>DSPActionPane</Name>
												<Type>ActionPane</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>DSPButtonGroup</Name>
														<Type>ButtonGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>SelectDefaultDSPClass</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<HelpText>@DocentricAX:SelectDefaultDSPDesc</HelpText>
																<NeededPermission>Update</NeededPermission>
																<Type>Button</Type>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextOnly</ButtonDisplay>
																<Style>Standard</Style>
																<Text>@DocentricAX:SelectDefaultDSP</Text>
															</AxFormControl>
														</Controls>
													</AxFormControl>
												</Controls>
												<Style>Strip</Style>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGroupControl">
												<Name>DSPGroup</Name>
												<Pattern>FieldsFieldGroups</Pattern>
												<PatternVersion>1.1</PatternVersion>
												<Type>Group</Type>
												<WidthMode>SizeToAvailable</WidthMode>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>DataSourceProvider</Name>
														<Type>Group</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>DataSourceProvider_DataSourceProviderClassName</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>DataSourceProviderClassName</DataField>
																<DataSource>DocReportTable</DataSource>
																<Label>@DocentricAX:DataSourceProviderClass</Label>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>DataSourceProvider_hasDefaultDSPClass</Name>
																<ExtendedStyle>informationalField</ExtendedStyle>
																<Skip>Yes</Skip>
																<Type>ComboBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<CacheDataMethod>Yes</CacheDataMethod>
																<DataMethod>hasDefaultDSPClass</DataMethod>
																<DataSource>DocReportTable</DataSource>
																<FastTabSummary>Yes</FastTabSummary>
																<Items />
															</AxFormControl>
														</Controls>
														<DataSource>DocReportTable</DataSource>
														<FrameType>None</FrameType>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>ERProvider</Name>
														<Type>Group</Type>
														<Visible>No</Visible>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormReferenceGroupControl">
																<Name>ERDataModel</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<HelpText>@DocentricAX3:ERDataModelIDHelp</HelpText>
																<Type>ReferenceGroup</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls />
																<ExtendedDataType>ERDataModelID</ExtendedDataType>
																<Label>@DocentricAX3:ERDataModel</Label>
																<ReplacementFieldGroup>Name</ReplacementFieldGroup>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormReferenceGroupControl">
																<Name>DocReportTable_ERModelMapping</Name>
																<Type>ReferenceGroup</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls />
																<DataSource>DocReportTable</DataSource>
																<ReferenceField>ERModelMapping</ReferenceField>
															</AxFormControl>
														</Controls>
														<DataSource>DocReportTable</DataSource>
														<FrameType>None</FrameType>
													</AxFormControl>
												</Controls>
												<ColumnsMode>Fill</ColumnsMode>
												<FrameType>None</FrameType>
											</AxFormControl>
										</Controls>
										<Caption>@DocentricAX3:DataSource</Caption>
										<DataSource>DocReportTable</DataSource>
										<Scrollbars>Auto</Scrollbars>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>CustomLabels</Name>
										<Pattern>ToolbarList</Pattern>
										<PatternVersion>1.2</PatternVersion>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneControl">
												<Name>LabelActionStrip</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ActionPane</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>MaintainLabelButtonGroup</Name>
														<AutoDeclaration>Yes</AutoDeclaration>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Left>0</Left>
														<Type>ButtonGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<WidthMode>SizeToAvailable</WidthMode>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>NewLabel</Name>
																<ElementPosition>858993458</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HelpText>@DocentricAX3:NewD365FOLabelHelp</HelpText>
																<NeededPermission>Update</NeededPermission>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>New</Command>
																<MultiSelect>Yes</MultiSelect>
																<NormalImage>Add</NormalImage>
																<Primary>Yes</Primary>
																<ShowShortCut>No</ShowShortCut>
																<Text>@DocentricAX:Add</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>DeleteLabel</Name>
																<ElementPosition>1717986916</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<NeededPermission>Update</NeededPermission>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>SizeToAvailable</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>DeleteRecord</Command>
																<MultiSelect>Yes</MultiSelect>
																<NormalImage>Delete</NormalImage>
																<Primary>Yes</Primary>
																<SaveRecord>No</SaveRecord>
																<ShowShortCut>No</ShowShortCut>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormDropDialogButtonControl">
																<Name>DocAddUserLabel</Name>
																<HelpText>@DocentricAX3:AddUDLabelHelp</HelpText>
																<Type>DropDialogButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataSource>DocReportTable</DataSource>
																<MenuItemName>DocLabelMultiSelect</MenuItemName>
																<NeedsRecord>Yes</NeedsRecord>
																<Text>@DocentricAX3:AddUDLabel</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormMenuFunctionButtonControl">
																<Name>ViewTranslations</Name>
																<HelpText>@DocentricAX3:ViewTranslationsHelp</HelpText>
																<Type>MenuFunctionButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataSource>DocReportLabel</DataSource>
																<FormViewOption>Details</FormViewOption>
																<MenuItemName>DocLabelTable</MenuItemName>
																<MultiSelect>Yes</MultiSelect>
																<Text>@DocentricAX3:ViewTranslations</Text>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>Vertical</ArrangeMethod>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>DocReportLabel</DataSource>
												<Style>Strip</Style>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>CustomLabelGrid</Name>
												<Type>Grid</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>DisplayFields</Name>
														<Type>Group</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>DisplayFields_LabelName</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>LabelName</DataField>
																<DataSource>DocReportLabel</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>DisplayFields_LabelId</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>LabelId</DataField>
																<DataSource>DocReportLabel</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>DisplayFields_labelType</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<CacheDataMethod>Yes</CacheDataMethod>
																<DataMethod>labelType</DataMethod>
																<DataSource>DocReportLabel</DataSource>
															</AxFormControl>
														</Controls>
														<DataGroup>DisplayFields</DataGroup>
														<DataSource>DocReportLabel</DataSource>
													</AxFormControl>
												</Controls>
												<DataSource>DocReportLabel</DataSource>
											</AxFormControl>
										</Controls>
										<Caption>@DocentricAX:CustomLabels</Caption>
										<DataSource>DocReportLabel</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>EmailTemplates</Name>
										<Pattern>ToolbarList</Pattern>
										<PatternVersion>1.2</PatternVersion>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneControl">
												<Name>EmailTemplateActionStrip</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ActionPane</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>EmailTemplateMaintainButtonGroup</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Left>0</Left>
														<Type>ButtonGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormMenuFunctionButtonControl">
																<Name>DocReportEmailTemplateNew</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<Type>MenuFunctionButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<CopyCallerQuery>Yes</CopyCallerQuery>
																<MenuItemName>DocReportEmailTemplate</MenuItemName>
																<NormalImage>Add</NormalImage>
																<OpenMode>New</OpenMode>
																<Text>@DocentricAX:Add</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormMenuFunctionButtonControl">
																<Name>DocReportEmailTemplateEdit</Name>
																<Type>MenuFunctionButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<CopyCallerQuery>Yes</CopyCallerQuery>
																<DataSource>DocReportEmailTemplate</DataSource>
																<MenuItemName>DocReportEmailTemplate</MenuItemName>
																<NeedsRecord>Yes</NeedsRecord>
																<NormalImage>Edit</NormalImage>
																<OpenMode>Edit</OpenMode>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>EmailTemplateDelete</Name>
																<ElementPosition>1717986916</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<NeededPermission>Manual</NeededPermission>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<Command>Delete</Command>
																<MultiSelect>Yes</MultiSelect>
																<NeedsRecord>Yes</NeedsRecord>
																<NormalImage>Delete</NormalImage>
																<Primary>Yes</Primary>
																<SaveRecord>No</SaveRecord>
																<ShowShortCut>No</ShowShortCut>
																<Text>@DocentricAX:Delete</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormMenuFunctionButtonControl">
																<Name>DocReportEmailTemplateBodyEdit</Name>
																<HelpText>@DocentricAX3:EmailTemplateBodyEditHelp</HelpText>
																<Type>MenuFunctionButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<CopyCallerQuery>Yes</CopyCallerQuery>
																<DataSource>DocReportEmailTemplate</DataSource>
																<MenuItemName>DocReportEmailTemplateBody</MenuItemName>
																<NeedsRecord>Yes</NeedsRecord>
																<NormalImage>Draft</NormalImage>
															</AxFormControl>
														</Controls>
														<DataSource>DocReportEmailTemplate</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>EmailTemplateSpecialActionsButtonGroup</Name>
														<Type>ButtonGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>EmailTemplateSetDefault</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<HelpText>@DocentricAX3:EmailTemplateSetDefaultHelp</HelpText>
																<NeededPermission>Manual</NeededPermission>
																<Type>Button</Type>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<MultiSelect>No</MultiSelect>
																<NeedsRecord>Yes</NeedsRecord>
																<NormalImage>FieldCorrect</NormalImage>
																<Text>@DocentricAX:SetDefault</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormMenuButtonControl">
																<Name>EmailTemplateEnableDisable</Name>
																<HelpText>@DocentricAX:EnableDisableDesc</HelpText>
																<Type>MenuButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>EmailTemplateEnable</Name>
																		<HelpText>@DocentricAX:EnableTemplateDesc</HelpText>
																		<NeededPermission>Manual</NeededPermission>
																		<Type>Button</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<MultiSelect>Yes</MultiSelect>
																		<NeedsRecord>Yes</NeedsRecord>
																		<Text>@DocentricAX:EnableTemplate</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>EmailTemplateDisable</Name>
																		<HelpText>@DocentricAX:DisableTemplateDesc</HelpText>
																		<NeededPermission>Manual</NeededPermission>
																		<Type>Button</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<MultiSelect>Yes</MultiSelect>
																		<NeedsRecord>Yes</NeedsRecord>
																		<Text>@DocentricAX:DisableTemplate</Text>
																	</AxFormControl>
																</Controls>
																<MultiSelect>Yes</MultiSelect>
																<NeedsRecord>Yes</NeedsRecord>
																<Text>@DocentricAX:EnableDisable</Text>
															</AxFormControl>
														</Controls>
														<DataSource>DocReportEmailTemplate</DataSource>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>DocReportEmailTemplate</DataSource>
												<Style>Strip</Style>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>EmailTemplateGrid</Name>
												<Type>Grid</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>Overview</Name>
														<Type>Group</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>Overview_EmailTemplateId</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>EmailTemplateId</DataField>
																<DataSource>DocReportEmailTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>Overview_CompanyId</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>CompanyId</DataField>
																<DataSource>DocReportEmailTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>Overview_LanguageID</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>LanguageID</DataField>
																<DataSource>DocReportEmailTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>Overview_hasBody</Name>
																<Type>ComboBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>hasBody</DataMethod>
																<DataSource>DocReportEmailTemplate</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCheckBoxControl">
																<Name>Overview_IsDefaultTemplate</Name>
																<Type>CheckBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>IsDefaultTemplate</DataField>
																<DataSource>DocReportEmailTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCheckBoxControl">
																<Name>Overview_IsEnabled</Name>
																<HelpText>@DocentricAX3:IsEmailTemplateEnabledHelp</HelpText>
																<Type>CheckBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>IsEnabled</DataField>
																<DataSource>DocReportEmailTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>Overview_Title</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Title</DataField>
																<DataSource>DocReportEmailTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>Overview_Subject</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Subject</DataField>
																<DataSource>DocReportEmailTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCheckBoxControl">
																<Name>Overview_IsSubjectEnabled</Name>
																<Type>CheckBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>IsSubjectEnabled</DataField>
																<DataSource>DocReportEmailTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>Overview_SenderAddress</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>SenderAddress</DataField>
																<DataSource>DocReportEmailTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCheckBoxControl">
																<Name>Overview_IsSenderAddressEnabled</Name>
																<Type>CheckBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>IsSenderAddressEnabled</DataField>
																<DataSource>DocReportEmailTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>Overview_SenderName</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>SenderName</DataField>
																<DataSource>DocReportEmailTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCheckBoxControl">
																<Name>Overview_IsSenderNameEnabled</Name>
																<Type>CheckBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>IsSenderNameEnabled</DataField>
																<DataSource>DocReportEmailTemplate</DataSource>
															</AxFormControl>
														</Controls>
														<DataGroup>Overview</DataGroup>
														<DataSource>DocReportEmailTemplate</DataSource>
													</AxFormControl>
												</Controls>
												<DataSource>DocReportEmailTemplate</DataSource>
												<DefaultAction>DocReportEmailTemplateEdit</DefaultAction>
											</AxFormControl>
										</Controls>
										<Caption>@DocentricAX3:EmailTemplatesTabPageCaption</Caption>
										<DataSource>DocReportEmailTemplate</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormTabPageControl">
										<Name>Templates</Name>
										<Pattern>ToolbarList</Pattern>
										<PatternVersion>1.2</PatternVersion>
										<Type>TabPage</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormActionPaneControl">
												<Name>TemplateActionStrip</Name>
												<ElementPosition>1073741822</ElementPosition>
												<FilterExpression>%1</FilterExpression>
												<Type>ActionPane</Type>
												<VerticalSpacing>-1</VerticalSpacing>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>MaintainTemplateButtonGroup</Name>
														<ElementPosition>1073741822</ElementPosition>
														<FilterExpression>%1</FilterExpression>
														<Left>0</Left>
														<Type>ButtonGroup</Type>
														<VerticalSpacing>-1</VerticalSpacing>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormMenuFunctionButtonControl">
																<Name>DocReportTemplateNew</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<Type>MenuFunctionButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<CopyCallerQuery>Yes</CopyCallerQuery>
																<MenuItemName>DocReportTemplate</MenuItemName>
																<NormalImage>Add</NormalImage>
																<OpenMode>New</OpenMode>
																<Text>@DocentricAX:Add</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormMenuFunctionButtonControl">
																<Name>DocReportTemplateEdit</Name>
																<Type>MenuFunctionButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<CopyCallerQuery>Yes</CopyCallerQuery>
																<DataSource>DocReportTemplate</DataSource>
																<MenuItemName>DocReportTemplate</MenuItemName>
																<NeedsRecord>Yes</NeedsRecord>
																<NormalImage>Edit</NormalImage>
																<OpenMode>Edit</OpenMode>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCommandButtonControl">
																<Name>DeleteTemplateButton</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<ElementPosition>1717986916</ElementPosition>
																<FilterExpression>%1</FilterExpression>
																<HeightMode>Auto</HeightMode>
																<NeededPermission>Update</NeededPermission>
																<Type>CommandButton</Type>
																<VerticalSpacing>-1</VerticalSpacing>
																<WidthMode>Auto</WidthMode>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<MultiSelect>Yes</MultiSelect>
																<NeedsRecord>Yes</NeedsRecord>
																<NormalImage>Delete</NormalImage>
																<Primary>Yes</Primary>
																<SaveRecord>No</SaveRecord>
																<ShowShortCut>No</ShowShortCut>
																<Text>@DocentricAX:Delete</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>SetDefaultTemplateButton</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<HelpText>@DocentricAX:SetDefaultDesc</HelpText>
																<NeededPermission>Update</NeededPermission>
																<Type>Button</Type>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<MultiSelect>No</MultiSelect>
																<NeedsRecord>Yes</NeedsRecord>
																<NormalImage>FieldCorrect</NormalImage>
																<Text>@DocentricAX:SetDefault</Text>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>Vertical</ArrangeMethod>
														<DataSource>DocReportTemplate</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>TemplateFileButtonGroup</Name>
														<Type>ButtonGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormMenuButtonControl">
																<Name>TemplateActionsButtons</Name>
																<HelpText>@DocentricAX:TemplateFileActionsDesc</HelpText>
																<Type>MenuButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormMenuFunctionButtonControl">
																		<Name>AttachTemplateFileButton</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<Type>MenuFunctionButton</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<CopyCallerQuery>Yes</CopyCallerQuery>
																		<MenuItemName>DocReportTemplateFile</MenuItemName>
																		<NeedsRecord>Yes</NeedsRecord>
																		<OpenMode>Edit</OpenMode>
																		<Text>@DocentricAX:AttachTemplateFile</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>DetachTemplateFileButton</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<NeedsRecord>Yes</NeedsRecord>
																		<Text>@DocentricAX:Detach</Text>
																	</AxFormControl>
																</Controls>
																<NeedsRecord>Yes</NeedsRecord>
																<Text>@DocentricAX:TemplateFile</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>DownloadTemplateButton</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<HelpText>@DocentricAX:DownloadTemplateDesc</HelpText>
																<NeededPermission>Update</NeededPermission>
																<Type>Button</Type>
																<FormControlExtension
																	i:nil="true" />
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<NeedsRecord>Yes</NeedsRecord>
																<NormalImage>Download</NormalImage>
																<Text>@DocentricAX:DownloadTemplate</Text>
															</AxFormControl>
														</Controls>
														<DataSource>DocReportTemplate</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>SpecialActionsButtonGroup</Name>
														<Type>ButtonGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormMenuButtonControl">
																<Name>ReloadSystemTemplatesActionsButtons</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<HelpText>@DocentricAX:ReloadSystemTemplatesDesc</HelpText>
																<Type>MenuButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>ReloadAllButton</Name>
																		<HelpText>@DocentricAX2:ReloadAllForReportHelp</HelpText>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<MultiSelect>Yes</MultiSelect>
																		<Text>@DocentricAX2:ReloadAllForReport</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>LoadNewButton</Name>
																		<HelpText>@DocentricAX2:LoadNewForReportHelp</HelpText>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<MultiSelect>Yes</MultiSelect>
																		<Text>@DocentricAX2:LoadNewForReport</Text>
																	</AxFormControl>
																</Controls>
																<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
																<MultiSelect>Yes</MultiSelect>
																<NormalImage>Refresh</NormalImage>
																<Text>@DocentricAX:ReloadSystemTemplates</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormMenuButtonControl">
																<Name>EnableDisableMenuButton</Name>
																<HelpText>@DocentricAX:EnableDisableDesc</HelpText>
																<Type>MenuButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<Controls>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>EnableTemplateButton</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<HelpText>@DocentricAX:EnableTemplateDesc</HelpText>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<MultiSelect>Yes</MultiSelect>
																		<NeedsRecord>Yes</NeedsRecord>
																		<Text>@DocentricAX:EnableTemplate</Text>
																	</AxFormControl>
																	<AxFormControl xmlns=""
																		i:type="AxFormButtonControl">
																		<Name>DisableTemplateButton</Name>
																		<AutoDeclaration>Yes</AutoDeclaration>
																		<HelpText>@DocentricAX:DisableTemplateDesc</HelpText>
																		<NeededPermission>Update</NeededPermission>
																		<Type>Button</Type>
																		<FormControlExtension
																			i:nil="true" />
																		<ButtonDisplay>TextOnly</ButtonDisplay>
																		<MultiSelect>Yes</MultiSelect>
																		<NeedsRecord>Yes</NeedsRecord>
																		<Text>@DocentricAX:DisableTemplate</Text>
																	</AxFormControl>
																</Controls>
																<MultiSelect>Yes</MultiSelect>
																<NeedsRecord>Yes</NeedsRecord>
																<Text>@DocentricAX:EnableDisable</Text>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormButtonControl">
																<Name>ValidateTemplateDSTypeButton</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<HelpText>@DocentricAX3:RecheckDSTypeHelp</HelpText>
																<NeededPermission>Update</NeededPermission>
																<Type>Button</Type>
																<FormControlExtension
																	i:nil="true" />
																<MultiSelect>Yes</MultiSelect>
																<NeedsRecord>Yes</NeedsRecord>
																<Text>@DocentricAX3:RecheckDSType</Text>
															</AxFormControl>
														</Controls>
														<ArrangeMethod>Vertical</ArrangeMethod>
														<DataSource>DocReportTemplate</DataSource>
													</AxFormControl>
													<AxFormControl xmlns=""
														i:type="AxFormButtonGroupControl">
														<Name>PreviewTemplateFileButtonGroup</Name>
														<Type>ButtonGroup</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormDropDialogButtonControl">
																<Name>PreviewTemplate</Name>
																<HelpText>@DocentricAX3:PreviewTemplateHelp</HelpText>
																<Type>DropDialogButton</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataSource>DocReportTemplate</DataSource>
																<MenuItemName>DocReportTemplatePreview</MenuItemName>
																<NeedsRecord>Yes</NeedsRecord>
																<NormalImage>Generate</NormalImage>
																<Text>@DocentricAX3:PreviewTemplate</Text>
															</AxFormControl>
														</Controls>
													</AxFormControl>
												</Controls>
												<AlignChild>No</AlignChild>
												<AlignChildren>No</AlignChildren>
												<ArrangeMethod>Vertical</ArrangeMethod>
												<DataSource>DocReportTemplate</DataSource>
												<Style>Strip</Style>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormGridControl">
												<Name>TemplateGrid</Name>
												<Type>Grid</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormGroupControl">
														<Name>ListOverview</Name>
														<Type>Group</Type>
														<FormControlExtension
															i:nil="true" />
														<Controls>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ListOverview_TemplateId</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>TemplateId</DataField>
																<DataSource>DocReportTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ListOverview_CompanyId</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>CompanyId</DataField>
																<DataSource>DocReportTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ListOverview_LanguageID</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>LanguageID</DataField>
																<DataSource>DocReportTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCheckBoxControl">
																<Name>ListOverview_IsDefaultTemplate</Name>
																<Type>CheckBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>IsDefaultTemplate</DataField>
																<DataSource>DocReportTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormCheckBoxControl">
																<Name>ListOverview_IsEnabled</Name>
																<Type>CheckBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>IsEnabled</DataField>
																<DataSource>DocReportTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>ListOverview_DataSourceType</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<Type>ComboBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>DataSourceType</DataField>
																<DataSource>DocReportTemplate</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>ListOverview_isFileAttached</Name>
																<Type>ComboBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<CacheDataMethod>Yes</CacheDataMethod>
																<DataMethod>isFileAttached</DataMethod>
																<DataSource>DocReportTemplate</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ListOverview_fileName</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<CacheDataMethod>Yes</CacheDataMethod>
																<DataMethod>fileName</DataMethod>
																<DataSource>DocReportTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ListOverview_Title</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>Title</DataField>
																<DataSource>DocReportTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>ListOverview_CurrentStorageType</Name>
																<Type>ComboBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>CurrentStorageType</DataField>
																<DataSource>DocReportTemplate</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>ListOverview_customizationLevel</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<Type>ComboBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<CacheDataMethod>Yes</CacheDataMethod>
																<DataMethod>customizationLevel</DataMethod>
																<DataSource>DocReportTemplate</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ListOverview_OriginalStorageResourceName</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataField>OriginalStorageResourceName</DataField>
																<DataSource>DocReportTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ListOverview_azureBlobStoragePath</Name>
																<AutoDeclaration>Yes</AutoDeclaration>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<CacheDataMethod>Yes</CacheDataMethod>
																<DataMethod>azureBlobStoragePath</DataMethod>
																<DataSource>DocReportTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ListOverview_spHostName</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<CacheDataMethod>Yes</CacheDataMethod>
																<DataMethod>spHostName</DataMethod>
																<DataSource>DocReportTemplate</DataSource>
																<Label>@DocentricAX:SharePointHost</Label>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ListOverview_spSiteName</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<CacheDataMethod>Yes</CacheDataMethod>
																<DataMethod>spSiteName</DataMethod>
																<DataSource>DocReportTemplate</DataSource>
																<Label>@DocentricAX:SharePointSite</Label>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ListOverview_spFolderPath</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<CacheDataMethod>Yes</CacheDataMethod>
																<DataMethod>spFolderPath</DataMethod>
																<DataSource>DocReportTemplate</DataSource>
																<Label>@DocentricAX:SharePointFolderPath</Label>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ListOverview_fileSystemFullFilename</Name>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<CacheDataMethod>Yes</CacheDataMethod>
																<DataMethod>fileSystemFullFilename</DataMethod>
																<DataSource>DocReportTemplate</DataSource>
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormComboBoxControl">
																<Name>ListOverview_signatureSettingsStatus</Name>
																<HelpText>@DocentricAX3:PDFSignatureSettingsStatusHelp</HelpText>
																<Type>ComboBox</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>signatureSettingsStatus</DataMethod>
																<DataSource>DocReportTemplate</DataSource>
																<Items />
															</AxFormControl>
															<AxFormControl xmlns=""
																i:type="AxFormStringControl">
																<Name>ListOverview_signatureAppearanceTemplate</Name>
																<HelpText>@DocentricAX3:ReportTemplateSignatureAppearanceTemplateHelp</HelpText>
																<Type>String</Type>
																<FormControlExtension
																	i:nil="true" />
																<DataMethod>signatureAppearanceTemplate</DataMethod>
																<DataSource>DocReportTemplate</DataSource>
																<Label>@DocentricAX3:ReportTemplateSignatureAppearanceTemplate</Label>
															</AxFormControl>
														</Controls>
														<DataGroup>ListOverview</DataGroup>
														<DataSource>DocReportTemplate</DataSource>
													</AxFormControl>
												</Controls>
												<DataSource>DocReportTemplate</DataSource>
												<DefaultAction>DocReportTemplateEdit</DefaultAction>
											</AxFormControl>
										</Controls>
										<Caption>@DocentricAX:Templates</Caption>
										<DataSource>DocReportTemplate</DataSource>
									</AxFormControl>
								</Controls>
								<Style>FastTabs</Style>
							</AxFormControl>
						</Controls>
						<PanelStyle>Details</PanelStyle>
						<Style>DetailsFormDetails</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GridPanel</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CustomFilterGroup</Name>
								<Pattern>CustomAndQuickFilters</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl>
										<Name>QuickFilterControl</Name>
										<FormControlExtension>
											<Name>QuickFilterControl</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>targetControlName</Name>
													<Type>String</Type>
													<Value>ReportsGrid</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>placeholderText</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>defaultColumnName</Name>
													<Type>String</Type>
													<Value>ReportListOverview_ReportId</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalLeft</ArrangeMethod>
								<FrameType>None</FrameType>
								<Style>CustomFilter</Style>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>ReportsGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormGroupControl">
										<Name>ReportListOverview</Name>
										<Type>Group</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReportListOverview_ReportId</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>ReportId</DataField>
												<DataSource>DocReportTable</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormReferenceGroupControl">
												<Name>ReportListOverview_ReportGroup</Name>
												<Type>ReferenceGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls />
												<DataSource>DocReportTable</DataSource>
												<ReferenceField>ReportGroup</ReferenceField>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormStringControl">
												<Name>ReportListOverview_ReportDescription</Name>
												<Type>String</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>ReportDescription</DataField>
												<DataSource>DocReportTable</DataSource>
												<DisplayHeight>1</DisplayHeight>
												<DisplayHeightMode>Fixed</DisplayHeightMode>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>ReportListOverview_IsActiveSRS</Name>
												<Type>CheckBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>IsActiveSRS</DataField>
												<DataSource>DocReportTable</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>ReportListOverview_UseDocentricPreviewForSrs</Name>
												<HelpText>@DocentricAX:UseDocentricScreenPrintDestDesc</HelpText>
												<Type>CheckBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>UseDocentricPreviewForSrs</DataField>
												<DataSource>DocReportTable</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>ReportListOverview_UseDocentricPreviewerForSrs</Name>
												<HelpText>@DocentricAX:UseDocentricViewerDesc</HelpText>
												<Type>CheckBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>UseDocentricPreviewerForSrs</DataField>
												<DataSource>DocReportTable</DataSource>
												<Label>@DocentricAX:ForPreviewUseDocentricViewer</Label>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCheckBoxControl">
												<Name>ReportListOverview_UseOnlyWithPrintDestinations</Name>
												<Type>CheckBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>UseOnlyWithPrintDestinations</DataField>
												<DataSource>DocReportTable</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>ReportListOverview_IsValid</Name>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<DataField>IsValid</DataField>
												<DataSource>DocReportTable</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormComboBoxControl">
												<Name>ReportListOverview_hasDefaultDSPClass</Name>
												<Type>ComboBox</Type>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>hasDefaultDSPClass</DataMethod>
												<DataSource>DocReportTable</DataSource>
												<Items />
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormIntegerControl">
												<Name>ReportListOverview_numberOfTemplates</Name>
												<Type>Integer</Type>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>numberOfTemplates</DataMethod>
												<DataSource>DocReportTable</DataSource>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormIntegerControl">
												<Name>ReportListOverview_numberOfLabels</Name>
												<Type>Integer</Type>
												<FormControlExtension
													i:nil="true" />
												<CacheDataMethod>Yes</CacheDataMethod>
												<DataMethod>numberOfLabels</DataMethod>
												<DataSource>DocReportTable</DataSource>
											</AxFormControl>
										</Controls>
										<DataGroup>ListOverview</DataGroup>
										<DataSource>DocReportTable</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>DocReportTable</DataSource>
								<DefaultAction>MainGridDefaultAction</DefaultAction>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>MainGridDefaultAction</Name>
								<Type>CommandButton</Type>
								<Visible>No</Visible>
								<FormControlExtension
									i:nil="true" />
								<Command>DetailsView</Command>
							</AxFormControl>
						</Controls>
						<PanelStyle>Grid</PanelStyle>
						<Style>DetailsFormGrid</Style>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>Vertical</ArrangeMethod>
				<ShowTabs>No</ShowTabs>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>