<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DocReportExportSetupData</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DocReportExportSetupData extends FormRun
{
    FormDataSource  callerReportFormDataSource;

}
]]></Source>
			</Method>
			<Method>
				<Name>getSelectedReports</Name>
				<Source><![CDATA[
    private container getSelectedReports()
    {
        DocReportTable      reportTable;
        container           selectedReportContainer;
    
        selectedReportContainer = conNull();
        for (reportTable = callerReportFormDataSource.getFirst(true) ? callerReportFormDataSource.getFirst(true) : callerReportFormDataSource.cursor();
             reportTable;
             reportTable = callerReportFormDataSource.getNext())
        {
            selectedReportContainer = selectedReportContainer + [reportTable.ReportId];
        }
        
        return selectedReportContainer;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    public void closeOk()
    {
        if (this.validateExportingFilename())
        {
            str exportingFileName = XmlExportingFilename.text();
            int exportedReportCount = DocReportTable::exportSelectedReportsMetadataToXmlFile(this.getSelectedReports(), exportingFileName, true);
            if (exportedReportCount > 0)
            {
                super();
                DocGlobalHelper::handleInfo(strFmt("@DocentricAX:ReportExportSuccess", exportedReportCount, exportingFileName));
            }
            else
            {
                DocGlobalHelper::handleWarning("@DocentricAX:NoReportExported");
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
    
        str errMsg = 'The form can be open from the DocReportTable form only';

        if (this.args() == null)
        {
            DocGlobalHelper::handleException(funcName(), errMsg);
        }
    
        FormRun callerFormRun = this.args().caller();
        if (!callerFormRun)
        {
            DocGlobalHelper::handleException(funcName(), errMsg);
        }
    
        callerReportFormDataSource = callerFormRun.dataSource(1);
        if (callerReportFormDataSource.table() != tableNum(DocReportTable))
        {
            DocGlobalHelper::handleException(funcName(), errMsg);
        }

        // Set the default values.
        str exportingFilename = DocConstant::ReportExportFilename + DocConstantFile::FilenameUndescore +
                                System.DateTime::Now.ToString('yyyy-MM-dd') +
                                DocConstantFile::FileExtensionDelimiter + DocConstantFile::FileExtXml;

        XmlExportingFilename.text(exportingFilename);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateExportingFilename</Name>
				<Source><![CDATA[
    public boolean validateExportingFilename()
    {
        str exportingFilename = XmlExportingFilename.text();

        if (exportingFilename == '')
        {
            return false;
        }

        if (!DocFileMngHelper::isValidOnlyFilename(exportingFilename))
        {
            DocGlobalHelper::handleWarning(strFmt("@DocentricAX:InvalidSpecifiedFilename", exportingFilename));
            return false;
        }
    
        return true;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>XmlExportingFilename</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            Filename    currentSelectedFilepath, currentSelectedFileName, currentSelectedFileType;
            Filename    newExportingFilename;

            [currentSelectedFileName, currentSelectedFileType, currentSelectedFilepath] = Docu::splitFilename(this.text());

            if (currentSelectedFileName != '')
            {
                newExportingFilename = currentSelectedFileName + DocConstantFile::FileExtensionDelimiter + DocConstantFile::FileExtXml;
                this.text(newExportingFilename);
            }
            else
            {
                this.text('');
            }

            boolean ret = super();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@DocentricAX:ExportReportSetup</Caption>
		<DefaultAction xmlns="">OKButton</DefaultAction>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<ViewEditMode xmlns="">Edit</ViewEditMode>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>Instructions</Name>
				<ElementPosition>1073741823</ElementPosition>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<FilterExpression>%1</FilterExpression>
				<Type>StaticText</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<DisplayHeight>2</DisplayHeight>
				<DisplayHeightMode>Fixed</DisplayHeightMode>
				<DisplayLength>80</DisplayLength>
				<DisplayLengthMode>Fixed</DisplayLengthMode>
				<Text>@DocentricAX:ExportSetupDataInstructions</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GeneralInstructionsGroup</Name>
				<Pattern>FillText</Pattern>
				<PatternVersion>UX7 1.0</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStaticTextControl">
						<Name>GeneralInstructions</Name>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>StaticText</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Text>@DocentricAX:ExportIntructions</Text>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>XmlExportingFilenameGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>XmlExportingFilename</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@DocentricAX:ExportingReportSetupData</HelpText>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>Filename</ExtendedDataType>
								<Label>@DocentricAX:ReportSetupDataFilename</Label>
								<Mandatory>Yes</Mandatory>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CancelButton</Name>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>