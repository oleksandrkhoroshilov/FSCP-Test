<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DocReportTableAddSrsReport</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DocReportTableAddSrsReport extends FormRun
{
    DocTmpIdRef srsReportIdRef, srsReportDesignNameIdRef;
}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        if (!this.args())
        {
            DocGlobalHelper::handleException(this.name(), 'This form can be open only from DocReportTable form');
        }
    
        if (this.args().dataset() != tableNum(DocReportTable))
        {
            DocGlobalHelper::handleException(this.name(), 'This form can be open only from DocReportTable form');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateNewRecord</Name>
				<Source><![CDATA[
    public boolean validateNewRecord()
    {
        boolean                 isValid;
        Description255          selectedSrsReportName, selectedSrsReportDesignName;
        str                     selectedSrsReport;
        DocTmpIdRef             srsReportDesignNameIdRefExists;
    
        isValid = true;
    
        selectedSrsReportName = SrsReportName.valueStr();
        selectedSrsReportDesignName = SrsReportDesignName.valueStr();
        selectedSrsReport = '';
    
        if (!selectedSrsReportName)
        {
            isValid = false;
            DocGlobalHelper::handleWarning("@DocentricAX:SrsReportNameIsNotSelected");
        }
        else
        {
            // Check if exists selected Srs report.
            if (!DocReportingSetupHelper::existsSrsReport(selectedSrsReportName))
            {
                isValid = false;
                DocGlobalHelper::handleWarning(strFmt("@DocentricAX:SrsReportNotExistInAot", selectedSrsReportName));
            }
            else
            {
                if (selectedSrsReportDesignName)
                {
                    srsReportDesignNameIdRef = DocReportingSetupHelper::buildAotSrsReportDesignNameIdRef(SRSReportName.valueStr());
    
                    srsReportDesignNameIdRefExists.setTmpData(srsReportDesignNameIdRef);
    
                    select firstonly srsReportDesignNameIdRefExists
                    where srsReportDesignNameIdRefExists.Name == selectedSrsReportDesignName;
    
                    if (!srsReportDesignNameIdRefExists)
                    {
                        isValid = false;
                        DocGlobalHelper::handleWarning(strFmt("@DocentricAX:SrsReportDesignNotExist", selectedSrsReportDesignName, selectedSrsReportName));
                    }
                    else
                    {
                        selectedSrsReport = selectedSrsReportName + '.' + selectedSrsReportDesignName;
                    }
                }
                else
                {
                    isValid = false;
                    DocGlobalHelper::handleWarning("@DocentricAX:SrsReportDesignNotSelected");
                }
            }
        }
    
        if (selectedSrsReport)
        {
            // Check if selected Srs report is already overriden.
            if (DocReportTable::existsReportId(selectedSrsReport))
            {
                isValid = false;
                DocGlobalHelper::handleWarning(strFmt("@DocentricAX:SrsReportAlreadyRegistered", selectedSrsReport));
            }
        }
    
        return isValid;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>SrsReportName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Calls lookup control.
        /// </summary>
        public void lookup()
        {
            if (!srsReportIdRef)
            {
                srsReportIdRef = DocReportingSetupHelper::buildAotSrsReportNameIdRef();
            }

            DocSysTableLookup docSysTableLookup = DocSysTableLookup::newParameters(tableNum(DocTmpIdRef), this);

            Query query = new Query();
            QueryBuildDataSource qbds = query.addDataSource(tablenum(DocTmpIdRef));
            qbds.addSortField(fieldnum(DocTmpIdRef, Name));

            docSysTableLookup.addLookupfield(fieldnum(DocTmpIdRef, Name), true);
            docSysTableLookup.setLabel("@DocentricAX:SrsReportName"); // SRS report name
        
            docSysTableLookup.addLookupfield(fieldnum(DocTmpIdRef, HelpTxt));
            docSysTableLookup.setLabel("@DocentricAX:Description"); // Description
            
            docSysTableLookup.parmQuery(query);
            // BP Deviation Documented
            docSysTableLookup.parmTmpBuffer(srsReportIdRef);

            docSysTableLookup.performFormLookup();

            // Set position to the selected SRS report name in the lookup form
            docSysTableLookup.datasource().formRun().args().lookupField(fieldNum(DocTmpIdRef, Name));
            docSysTableLookup.datasource().formRun().args().lookupValue(this.valueStr());
            docSysTableLookup.datasource().research(false);
        }

]]></Source>
					</Method>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Called when the value in the control is modified.
        /// </summary>
        /// <returns>True/False</returns>
        public boolean modified()
        {
            boolean ret;
        
            ret = super();
        
            SRSReportDesignName.text('');
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>SrsReportDesignName</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Calls lookup control.
        /// </summary>
        public void lookup()
        {
            if (!SRSReportName.valueStr())
            {
                return;
            }            

            srsReportDesignNameIdRef = DocReportingSetupHelper::buildAotSrsReportDesignNameIdRef(SRSReportName.valueStr());

            DocSysTableLookup docSysTableLookup = DocSysTableLookup::newParameters(tableNum(DocTmpIdRef), this);

            Query query = new Query();
            QueryBuildDataSource qbds = query.addDataSource(tablenum(DocTmpIdRef));
            qbds.addSortField(fieldnum(DocTmpIdRef, Name));

            docSysTableLookup.addLookupfield(fieldnum(DocTmpIdRef, Name), true);
            docSysTableLookup.setLabel("@DocentricAX:SrsReportDesignName"); // SRS report design name
        
            docSysTableLookup.addLookupfield(fieldnum(DocTmpIdRef, HelpTxt));
            docSysTableLookup.setLabel("@DocentricAX:Description"); // Description
            
            docSysTableLookup.parmQuery(query);
            // BP Deviation Documented
            docSysTableLookup.parmTmpBuffer(srsReportDesignNameIdRef);

            docSysTableLookup.performFormLookup();

            // Set position to the selected SRS report design name in the lookup form
            docSysTableLookup.datasource().formRun().args().lookupField(fieldNum(DocTmpIdRef, Name));
            docSysTableLookup.datasource().formRun().args().lookupValue(this.valueStr());
            docSysTableLookup.datasource().research(false);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {
            FormDataSource   docReportTableDs;
            RecId            insertedReportRecId;
            str              selectedSrsReport;
            #Task
        
            if (!element.validateNewRecord())
            {
                DocGlobalHelper::handleError("@DocentricAX:ReportCannotBeCreated", true, '', true);
            }
        
            selectedSrsReport = SrsReportName.valueStr() + '.' + SrsReportDesignName.valueStr();
            insertedReportRecId = DocReportTable::insertSrsReport(selectedSrsReport);
        
            if (element.args().callerFormControl())
            {
                docReportTableDs = element.args().callerFormControl().dataSourceObject();
                if (docReportTableDs)
                {
                    docReportTableDs.research();
                    
                    // Navigate to the new record.
                    if (docReportTableDs.positionToRecordByValue(fieldNum(DocReportTable, RecId), int642str(insertedReportRecId)))
                    {
                        FormRun callerFormRun = element.args().caller();
                        if (callerFormRun)
                        {
                            // Switch the form to details view and edit mode
                            callerFormRun.task(#taskSwitchToDetailsView);
                            if (!callerFormRun.viewEditModeHelper().isInEditMode())
                            {
                                callerFormRun.viewEditModeHelper().setViewEditMode(ViewEditMode::Edit);
                            }
                        }
                    }
                }
            }
        
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@DocentricAX:RegisterSrsAsDocentricReport</Caption>
		<DefaultAction xmlns="">OKButton</DefaultAction>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<WindowResize xmlns="">Fixed</WindowResize>
		<WindowType xmlns="">Popup</WindowType>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SrsReportName</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>DocReportSRSName</ExtendedDataType>
						<LookupButton>Always</LookupButton>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>SrsReportDesignName</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>DocReportSRSDesignName</ExtendedDataType>
						<LookupButton>Always</LookupButton>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>