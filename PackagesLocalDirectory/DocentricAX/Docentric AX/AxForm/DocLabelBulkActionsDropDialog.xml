<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DocLabelBulkActionsDropDialog</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DocLabelBulkActionsDropDialog extends FormRun
{
    FormRun callerFormRun;
    Args args;
    str selectedLanguageId;
    str selectedReportId;

}
]]></Source>
			</Method>
			<Method>
				<Name>checkArgs</Name>
				<Source><![CDATA[
    private void checkArgs()
    {
        if (!element.args())
        {
            DocGlobalHelper::handleException(funcName(), "@DocentricAX2:FormCalledWithoutArguments");
        }
        
        args = element.args();
        
        if (!args.caller() || !args.record() || !args.menuItemName()) 
        {
            DocGlobalHelper::handleException(funcName(), "@DocentricAX2:InvalidCaller");
        }
        
        if (!(args.caller() is FormRun))
        {
            DocGlobalHelper::handleException(funcName(), "@DocentricAX2:InvalidCaller");
        }

        callerFormRun = args.caller() as FormRun;

        if (callerFormRun == null)
        {
            DocGlobalHelper::handleException(funcName(), 'Invalid mehtod call: caller must be form');
        }

        if (!((args.record() is DocLabelTable) && (args.menuItemName() != menuItemDisplayStr(DocLabelSetTranslationDescription)))
            &&
            (!((args.record() is DocLabelTranslation) && (args.menuItemName() == menuItemDisplayStr(DocLabelSetTranslationDescription)))))
        {
            DocGlobalHelper::handleException(funcName(), 'Invalid mehtod call: wrong caller record type');
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initControls</Name>
				<Source><![CDATA[
    private void initControls()
    {
        switch (args.menuItemName())
        {
            case menuItemDisplayStr(DocLabelAddTranslations):
                element.design().caption("@DocentricAX3:AddTranslationsForLanguage");
                
                LabelId.visible(false);
                Description.visible(false);
                LanguageId.visible(true);
                ReportId.visible(false);

                break;

            case menuItemDisplayStr(DocLabelDeleteTranslations):
                element.design().caption("@DocentricAX3:DeleteTranslationsForLanguage");
                
                LabelId.visible(false);
                Description.visible(false);
                LanguageId.visible(true);
                ReportId.visible(false);

                break;

            case menuItemDisplayStr(DocLabelAddToReport):
                element.design().caption("@DocentricAX3:AddLabelsToReport");
                
                LabelId.visible(false);
                Description.visible(false);
                LanguageId.visible(false);
                ReportId.visible(true);

                break;

            case menuItemDisplayStr(DocLabelSetTranslationDescription):
                element.design().caption("@DocentricAX3:SetDescription");
                
                LabelId.visible(false);
                Description.visible(true);
                LanguageId.visible(false);
                ReportId.visible(false);

                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();

        element.checkArgs();

        element.initControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>executeAction</Name>
				<Source><![CDATA[
    public void executeAction()
    {
        Args helperArgs = new Args();
        helperArgs.menuItemName(args.menuItemName());
        helperArgs.caller(callerFormRun);
        helperArgs.record(args.record());

        DocUserDefinedLabelUIHelper uiHelper = new DocUserDefinedLabelUIHelper();
        uiHelper.parmArgs(helperArgs);
        uiHelper.parmLanguageId(selectedLanguageId);
        uiHelper.parmReportId(selectedReportId);
        uiHelper.parmDescription(Description.text());
        uiHelper.handleUIActions();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>LanguageId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            DocLabelLanguage::lookupLanguage(this);
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
        
            ret = super();

            selectedLanguageId = this.text();
            if (!DocLabelLanguage::findByLanguageId(selectedLanguageId)) 
            {
                ret = ret && checkFailed(strFmt("@DocentricAX3:InvalidLabelLanguage", selectedLanguageId));
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ReportId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        public void lookup()
        {
            SysTableLookup          sysTableLookup;
            Query                   query;
            QueryBuildDataSource    qbds;

            query = new Query();

            qbds = query.addDataSource(tableNum(DocReportTable));
            qbds.addOrderByField(fieldNum(DocReportTable, ReportId));

            sysTableLookup = SysTableLookup::newParameters(tableNum(DocReportTable), this);
            sysTableLookup.addLookupfield(fieldNum(DocReportTable, ReportId));

            sysTableLookup.parmQuery(query);
            sysTableLookup.performFormLookup();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validate</Name>
						<Source><![CDATA[
        public boolean validate()
        {
            boolean ret;
        
            ret = super();

            selectedReportId = ReportId.text();
            if (!DocReportTable::findReportId(selectedReportId))
            {
                ret = ret && checkFailed(strFmt("@DocentricAX3:InvalidReportId", selectedReportId));
            }
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OKButton</Name>
				<Type>CommandButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void clicked()
        {                                       
            if (args.menuItemName() == menuItemDisplayStr(DocLabelAddTranslations)
                || args.menuItemName() == menuItemDisplayStr(DocLabelDeleteTranslations))
            {
                if (selectedLanguageId == '')
                {
                    DocGlobalHelper::handleError("@DocentricAX3:LanguageIdEmpty");
                    return;
                }
 
                if (!DocLabelLanguage::findByLanguageId(selectedLanguageId))
                {
                    return;
                }
            }

            if (args.menuItemName() == menuItemDisplayStr(DocLabelAddToReport))
            {
                if (selectedReportId == '')
                {
                    DocGlobalHelper::handleError("@DocentricAX3:ReportIdEmpty");
                    return;
                }
                
                if (!DocReportTable::findReportId(selectedReportId))
                {
                    return;
                }
            }
           
            element.executeAction();

            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@DocentricAX3:AddTranslationsForLanguage</Caption>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">DropDialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>LabelId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>DocReportLabelId</ExtendedDataType>
						<Mandatory>Yes</Mandatory>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>Description</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DisplayLength>100</DisplayLength>
						<DisplayLengthMode>Fixed</DisplayLengthMode>
						<ExtendedDataType>DocLabelDescription</ExtendedDataType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>LanguageId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>LanguageIdAll</ExtendedDataType>
						<LookupButton>Always</LookupButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>ReportId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>DocReportId</ExtendedDataType>
						<LookupButton>Always</LookupButton>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>