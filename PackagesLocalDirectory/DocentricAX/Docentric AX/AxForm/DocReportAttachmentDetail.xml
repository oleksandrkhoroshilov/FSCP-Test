<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DocReportAttachmentDetail</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DocReportAttachmentDetail extends FormRun
{
    private Common callerRecord;
    private str callerFormName;
    private CompanyInfo companyInfo;
    private DataAreaId  initialCompanyId = '';
    private boolean creating = false;
    private boolean showGlobalAttachmentSetting = false;
    #Task


}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the form.
    /// </summary>
    public void init()
    {
        #SysSystemDefinedButtons
        #define.ctrlBuildAdd('ctrlAdd')

        FormRun callerForm = element.args().caller();
        callerFormName = callerForm ? callerForm.name() : '';

        callerRecord = element.args().record();
        element.fillCtrlAdd();

        // Allow setting Global flag only if the caller form is legal entity or our form with global attachments.
        showGlobalAttachmentSetting = (element.args().parmEnumType() == enumNum(DocShowGlobalAttachmentSetting) && element.args().parmEnum()) || 
                                            (callerFormName == formStr(DocReportGlobalAttachment));

        super();

        // Toggles preview pane based on last user setting.
        DocDocuRefHelper::initDocumentPreviewBasedOnSysLastValue(this);

        if (!callerRecord)
        {
            DocGlobalHelper::handleException(funcName(), Error::missingFormActiveBuffer(element.name()));
        }

        // Hide Attach button
        FormCommandButtonControl button = this.control(this.controlId(#SystemDefinedAttachButton)) as FormCommandButtonControl;
        if (button)
        {
            button.visible(false);
        }

        companyInfo = element.args().record() as CompanyInfo;
        if (companyInfo)
        {
            // Get the company record for which this form was called
            initialCompanyId = companyInfo.DataArea;
        }             

        // Caller form specifics
        if ((callerFormName == formStr(DocReportGlobalAttachment)) || (callerFormName == 'DocReportAttachmentRules'))  // DocReportAttachmentRules is in DocentricAXExtension model
        {
            DocGlobalHelper::assert(companyInfo != null);
        }
        else if (callerFormName == formStr(DocuView) || callerFormName == formStr(DocuAttachment))
        {
            FormDataSource callerFormDS = callerForm.dataSource(tableStr(DocuRef));
            
            DocGlobalHelper::assert(callerFormDS != null);

            // Set permissions
            DocuRef_ds.allowCreate(callerFormDS.allowCreate());
            DocuRef_ds.allowEdit(callerFormDS.allowEdit());
            DocuRef_ds.allowDelete(callerFormDS.allowDelete());
        }
        else
        {
            DocGlobalHelper::handleException(funcName(), 'The form can be opened only from (Docentric global) attachments form');
        }

        // Set form caption
        this.setFormCaption(callerFormName, callerRecord);

        // Enable/Disable the New button depending on permissions
        ctrlAdd.enabled(DocuRef_ds.allowCreate());

        // Enable/Disable the UpdateAttachments button
        UpdateAttachments.enabled(DocuRef_ds.allowCreate());

        // Show/Hide the IsGlobalAttachment_DC field depending on the showGlobalAttachmentSetting flag
        DocuRef_ds.object(fieldNum(DocuRef, IsGlobalAttachment_DC)).visible(showGlobalAttachmentSetting);
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillCtrlAdd</Name>
				<Source><![CDATA[
    /// <summary>
    /// Populates the ctrlAdd menu button control with new Add menu item buttons for each document type.
    /// </summary>
    private void fillCtrlAdd()
    {
        #SysSystemDefinedButtons
        #define.ctrlBuildAdd('ctrlAdd')
    
        FormBuildMenuButtonControl  menuCtrl = this.form().design().control(#ctrlBuildAdd);
        DocuType docuTypeAdd;

        while select @TypeId, ActionClassId from docuTypeAdd index TypeIdx
        {
            if (DocuEvent::doCheckSkipDocuType(docuTypeAdd))
            {
                continue;
            }
  
            FormBuildFunctionButtonControl itemButtonCtrl = menuCtrl.addControl(FormControlType::MenuFunctionButton, DocuAction::MenuItemPrefix + docuTypeAdd.TypeId);
            
            itemButtonCtrl.menuItemType(MenuItemType::Action);
            itemButtonCtrl.menuItemName(menuItemActionStr(DocuActionNew));
            itemButtonCtrl.text(docuTypeAdd.TypeId);
            itemButtonCtrl.multiSelect(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setFormCaption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the form caption depending on the specified caller form.
    /// </summary>
    /// <param name = "_callerFormName">A caller form name</param>
    /// <param name = "_callerRecord">A caller record buffer</param>
    private void setFormCaption(str _callerFormName, Common _callerRecord)
    {
        switch (_callerFormName)
        {
            case formStr(DocReportGlobalAttachment):
            case 'DocReportAttachmentRules':  // DocReportAttachmentRules is in DocentricAXExtension model
                element.design().caption("@DocentricAX2:GlobalAttachmentsForLegalEntity");
                break;

            case formStr(DocuView):
            case formStr(DocuAttachment):
                DictTable dictTable = new DictTable(_callerRecord.TableId);
                FieldId fieldId = dictTable.titleField1(true);
            
                str parentRecordLabel = dictTable.label();
                if (fieldId)
                {
                    DictField dictField = new DictField(_callerRecord.TableId, fieldId);
                    parentRecordLabel += strFmt(' - %1', dictField.label() ? dictField.label() : dictField.name());
                }

                element.design().caption(strFmt("@SYS:AttachmentsFor", parentRecordLabel));
                break;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setDocuViewBlockClearFlag</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the blockClear_DC flag to prevent clearing the data in the DocuView form.
    /// </summary>
    private void setDocuViewBlockClearFlag()
    {
        // Prevent clearing the data in the DocuView form
        if (Docu::Instance() && Docu::Instance().docuView() && Docu::Instance().docuView().object())
        {
            Docu::Instance().docuView().object().parmBlockClear_DC(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    /// <summary>
    /// Closes the form.
    /// </summary>
    public void close()
    {
        FormRun callerFormRun = element.args().caller();
        
        super();
        
        callerFormRun.task(#taskRefresh);
    }

]]></Source>
			</Method>
			<Method>
				<Name>task</Name>
				<Source><![CDATA[
    /// <summary>
    /// Executes the specified task.
    /// </summary>
    /// <param name = "_p1">Task Id</param>
    /// <returns>Positive number if task was executed; otherwise 0</returns>
    public int task(int _p1)
    {
        int ret;
    
        // Prevent creating new blank records with Alt+N
        if (_p1 == #taskNew)
        {
            return 0;
        }

        ret = super(_p1);

        return ret;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>DocuRef</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes the data source.
        /// </summary>
        public void init()
        {
            super();

            QueryBuildDataSource qbds = this.query().dataSourceTable(tableNum(DocuRef));

            // Filter only by the company and ref table for which the form was called
            QueryBuildRange qbrRefCompanyId = qbds.addRange(fieldNum(DocuRef, RefCompanyId));
            qbrRefCompanyId.value(queryValue(callerRecord.DataAreaId));
            qbrRefCompanyId.status(RangeStatus::Locked);

            QueryBuildRange qbrRefTableId = qbds.addRange(fieldNum(DocuRef, RefTableId));
            qbrRefTableId.value(queryValue(DocuRef::GetRootTableID(callerRecord.TableId)));
            qbrRefTableId.status(RangeStatus::Locked);

            qbds.addDynalink(fieldNum(DocuRef, RefRecId), callerRecord, fieldNum(Common, RecId));
            
            if (callerFormName == formStr(DocReportGlobalAttachment))
            {
                QueryBuildRange qbrIsGlobalAttachment_DC = qbds.addRange(fieldNum(DocuRef, IsGlobalAttachment_DC));
                qbrIsGlobalAttachment_DC.value(queryValue(NoYes::Yes));
                qbrIsGlobalAttachment_DC.status(RangeStatus::Locked);
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>initValue</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes field values with default values in a new record.
        /// </summary>
        public void initValue()
        {
            DocuOptionView optionView = new DocuOptionView();
            
            optionView.getLast();
            docuRef.TypeId = optionView.parmDefaultTypeId();
            
            docuRef.RefCompanyId    = (companyInfo ? companyInfo.DataArea : callerRecord.DataAreaId);
            docuRef.RefTableId      = callerRecord.TableId;
            docuRef.RefRecId        = callerRecord.RecId;

            super();

            creating = true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>linkActive</Name>
						<Source><![CDATA[
        /// <summary>
        /// Called when the record is changed through dynalink.
        /// </summary>
        public void linkActive()
        {
            super();
            
            if (companyInfo)
            {
                // Prevent changing data when the company is changed through dynalink
                if (companyInfo.DataArea == initialCompanyId)
                {
                    docuRef_ds.allowCreate(isTableUserEnabled(docuRef_ds.table(), AccessType::Add));
                    docuRef_ds.allowDelete(isTableUserEnabled(docuRef_ds.table(), AccessType::Delete));
                    docuRef_ds.allowEdit  (isTableUserEnabled(docuRef_ds.table(), AccessType::Edit));
                }
                else
                {
                    docuRef_ds.allowCreate(false);
                    docuRef_ds.allowDelete(false);
                    docuRef_ds.allowEdit(false);
                }
            }

            ctrlAdd.enabled(docuRef_ds.allowCreate());

            // Used for refreshing Document preview window on dynalink record change.
            DocDocuRefHelper::findAndShowDocumentForPreview(this.formRun());
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes the query.
        /// </summary>
        public void executeQuery()
        { 
            super();
            
            if (creating)
            {
                // Move to the created record
                this.last();
                creating = false;
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Called when the DocuRef form data source is activated.
        /// </summary>
        /// <returns>Always returns 1.</returns>
        public int active()
        {
            int ret;
        
            ret = super();

            // Used for refreshing Document preview window on DocuRef datasource activation.
            DocDocuRefHelper::findAndShowDocumentForPreview(this.formRun());
        
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>CategoryId_DC</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            /// <summary>
            /// Calls a lookup form.
            /// </summary>
            /// <param name = "_formControl">Form cotnrol</param>
            /// <param name = "_filterStr">Filter string</param>
            public void lookup(FormControl _formControl, str _filterStr)
            {
                // Prevent clearing the data in the DocuView form
                element.setDocuViewBlockClearFlag();

                super(_formControl, _filterStr);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            /// <summary>
            /// Jumps to the referenced form.
            /// </summary>
            public void jumpRef()
            {
                // Prevent clearing the data in the DocuView form
                element.setDocuViewBlockClearFlag();

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>LanguageId_DC</DataField>
						<Methods>
							<Method>
								<Name>lookup</Name>
								<Source><![CDATA[
            /// <summary>
            /// Calls a lookup form.
            /// </summary>
            /// <param name = "_formControl">Form cotnrol</param>
            /// <param name = "_filterStr">Filter string</param>
            public void lookup(FormControl _formControl, str _filterStr)
            {
                // Prevent clearing the data in the DocuView form
                element.setDocuViewBlockClearFlag();

                super(_formControl, _filterStr);
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            /// <summary>
            /// Jumps to the referenced form.
            /// </summary>
            public void jumpRef()
            {
                // Prevent clearing the data in the DocuView form
                element.setDocuViewBlockClearFlag();

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>Name</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            /// <summary>
            /// Opens a referenced form that contains data for the field.
            /// </summary>
            public void jumpRef()
            {
                if (Docu::Instance() && Docu::Instance().isDocuViewSet())
                {
                    Docu::Instance().clearDocuView();
                }

                Args args = new Args();
                args.lookupRecord(DocuRef);
                args.parmEnum(showGlobalAttachmentSetting);
                args.parmEnumType(enumNum(DocShowGlobalAttachmentSetting));

                new MenuFunction(menuItemDisplayStr(DocuView), MenuItemType::Display).run(args);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
					<Field>
						<DataField>TypeId</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            /// <summary>
            /// Jumps to the referenced form.
            /// </summary>
            public void jumpRef()
            {
                // Prevent clearing the data in the DocuView form
                element.setDocuViewBlockClearFlag();

                super();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ctrlAdd</Name>
				<Type>MenuButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Called when a button is clicked.
        /// </summary>
        public void clicked()
        {
            DocGlobalHelper::assert(docuRef_ds.allowCreate());
    
            super();

            docuRef_ds.last();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>OpenAttachment</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the selected document on the DocuRef form.
        /// </summary>
        public void clicked()
        {
            DocuRef_ds.object(fieldNum(DocuRef, Name)).jumpRef();
            super();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DownloadFiles</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Downloads selected file attachments.
        /// </summary>
        public void clicked()
        {
            super();
            DocReportAttachmentHelper::download(DocuRef_ds, DocDownloadAttachmentType::SeparateFiles);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DownloadZIP</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Downloads selected attachments as a Zip file.
        /// </summary>
        public void clicked()
        {
            super();
            DocReportAttachmentHelper::download(DocuRef_ds, DocDownloadAttachmentType::ZipFile);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DownloadMergedPDF</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Downloads selected attachments as a merged PDF file.
        /// </summary>
        public void clicked()
        {
            super();
            DocReportAttachmentHelper::download(DocuRef_ds, DocDownloadAttachmentType::MergedPDF);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UpdateAttachments</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the form for update attachments in bulk.
        /// </summary>
        public void clicked()
        {
            Args args = new Args();
            args.name(formStr(DocReportAttachmentUpdateSettings));
            args.caller(element);
            args.record(DocuRef_ds.cursor());
            args.parmEnum(showGlobalAttachmentSetting);
            args.parmEnumType(enumNum(DocShowGlobalAttachmentSetting));

            FormRun formRun = classFactory.formRunClass(args);
            formRun.init();
            formRun.run();
            formRun.wait();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ToggleDocumentPreview</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Called when the ToggleDocumentPreview button is clicked.
        /// </summary>
        public void clicked()
        {
            super();

            DocDocuRefHelper::toggleDocumentPreview(this.formRun());
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AttachmentTypeFilter</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// Changes the selection of the AttachmentTypeFilter comboBox.
        /// </summary>
        /// <returns>Integer number of the selected value.</returns>
        public int selectionChange()
        {
            int ret;
        
            ret = super();
            
            QueryBuildRange qbrActionClassId = SysQuery::findOrCreateRange(DocuType_ds.queryBuildDataSource(), fieldNum(DocuType, ActionClassId));

            List validActionClassIdsList = DocReportAttachmentHelper::getActionClassesByAttachmentType(this.selection());

            // For each action class that is a valid action class for the input
            // DocuTypeGroup, add it to the query range.
            ListEnumerator listEnumerator = validActionClassIdsList.getEnumerator();
            str qbrValue = '';
            while (listEnumerator.moveNext())
            {
                qbrValue += (qbrValue ? ',' : '') + int642Str(listEnumerator.current());
            }
            qbrActionClassId.value(qbrValue);

            DocuRef_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AttachmentStatusFilter</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>selectionChange</Name>
						<Source><![CDATA[
        /// <summary>
        /// Called when the selection is changed.
        /// </summary>
        /// <returns>Integer number of the selected value.</returns>
        public int selectionChange()
        {
            int ret;
    
            ret = super();
  
            QueryBuildDataSource qbds = DocuRef_ds.queryBuildDataSource();
            date currentDate = DocGlobalHelper::getCurrentUsersCurrentDate();

            qbds.clearRange(fieldNum(DocuRef, ActiveFrom_DC));
            qbds.clearRange(fieldNum(DocuRef, ActiveTo_DC));
        
            switch (this.selection())
            {
                case DocReportAttachmentFilterValue::ActiveAttachments:
                    qbds.addRange(fieldNum(DocuRef, ActiveFrom_DC)).value(strFmt('((%1.%2 <= %3) && ((%1.%4 == %5) || (%1.%4 >= %3)))', 
                        qbds.name(), 
                        fieldStr(DocuRef, ActiveFrom_DC),
                        date2StrXpp(currentDate), 
                        fieldStr(DocuRef, ActiveTo_DC),
                        date2StrXpp(dateNull())));
                    break;
                case DocReportAttachmentFilterValue::InactiveAttachments:
                    qbds.addRange(fieldNum(DocuRef, ActiveFrom_DC)).value(strFmt('((%1.%2 > %3) || ((%1.%4 != %5) && (%1.%4 < %3)))',
                        qbds.name(), 
                        fieldStr(DocuRef, ActiveFrom_DC),
                        date2StrXpp(currentDate),
                        fieldStr(DocuRef, ActiveTo_DC),
                        date2StrXpp(dateNull())));
                    break;
            }

            DocuRef_ds.executeQuery();
  
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>UrlPreview</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        /// <summary>
        /// JumpRef ovveride for UrlPreview text box. Used for redirecting URLs.
        /// </summary>
        public void jumpRef()
        {
            str url = this.valueStr();
            if (url != '')
            {
                if (DocumentFileHelper::checkUrl(url))
                {
                    Browser br = new Browser();
                    br.navigate(url, true, true);
                }
                else
                {
                    DocGlobalHelper::handleError("@SYS327425");
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DocuRef</Name>
			<Table>DocuRef</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActiveFrom_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActiveTo_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ActualCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Author</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CategoryId_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ContactPersonId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DefaultAttachment</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocumentId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EncyclopediaItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InterCompanySkipUpdate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsGlobalAttachment_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsJustification</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LanguageId_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Notes</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Party</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefCompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RefTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Restriction</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmEMailEntryID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmEMailStoreID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>smmTable</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Tags_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValueRecId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<Index>RefIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DocuValue</Name>
			<Table>DocuValue</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AccessInformation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>File</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MCRDocuSubject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OriginalFileName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Path</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>StorageProviderId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Type</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>DocuRef</JoinSource>
			<LinkType>OuterJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DocuType</Name>
			<Table>DocuType</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActionClassId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ArchivePath</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DocuStructureType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FilePlace</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileRemovalConfirmation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FolderPath</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Host</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Name</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Parameters</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RemoveOption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Site</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>DocuRef</JoinSource>
			<LinkType>ExistJoin</LinkType>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@DocentricAX2:DocentricAttachments</Caption>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">Custom</Pattern>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>AppBar</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>NewDeleteGroup</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>ctrlAdd</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1207959549</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
								<MultiSelect>Yes</MultiSelect>
								<NormalImage>New</NormalImage>
								<Primary>Yes</Primary>
								<Text>@SYS22575</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCommandButtonControl">
								<Name>DeleteButton</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>Auto</HeightMode>
								<Type>CommandButton</Type>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Command>DeleteRecord</Command>
								<MultiSelect>Yes</MultiSelect>
							</AxFormControl>
						</Controls>
						<DataSource>DocuRef</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ButtonGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1610612733</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Left>0</Left>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>Open</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>715827880</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<Type>MenuFunctionButton</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>DocuActionOpen</MenuItemName>
								<MenuItemType>Action</MenuItemType>
								<NormalImage>Go</NormalImage>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>OpenAttachmentGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>OpenAttachment</Name>
								<HelpText>@DocentricAX4:OpenAttachmentHelpText</HelpText>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<NormalImage>Link</NormalImage>
								<Text>@DocentricAX4:OpenAttachment</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>DownloadButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuButtonControl">
								<Name>DownloadMenuButton</Name>
								<HelpText>@DocentricAX3:DownloadButtonHelp</HelpText>
								<Type>MenuButton</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>DownloadFiles</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>Auto</HeightMode>
										<HelpText>@DocentricAX3:FilesHelp</HelpText>
										<Type>Button</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@DocentricAX3:Files</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>DownloadZIP</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>Auto</HeightMode>
										<HelpText>@DocentricAX3:ZipHelp</HelpText>
										<Type>Button</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@DocentricAX3:Zip</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>DownloadMergedPDF</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>Auto</HeightMode>
										<HelpText>@DocentricAX3:MergedPdfHelp</HelpText>
										<Type>Button</Type>
										<WidthMode>Auto</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@DocentricAX3:MergedPDF</Text>
									</AxFormControl>
								</Controls>
								<MultiSelect>Yes</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<NormalImage>Download</NormalImage>
								<Text>@DocentricAX:DownloadTemplate</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>UpdateButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>UpdateAttachments</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>Auto</HeightMode>
								<HelpText>@DocentricAX3:DocUpdateAttachmentsFormHelp</HelpText>
								<NeededPermission>Update</NeededPermission>
								<Type>Button</Type>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<MultiSelect>Yes</MultiSelect>
								<NeedsRecord>Yes</NeedsRecord>
								<Text>@DocentricAX3:DocUpdateAttachmentsCaption</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>ToggleDocumentPreviewButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ToggleDocumentPreview</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@DocentricAX4:ToggleAttachmentPreviewHelpText</HelpText>
								<Type>Button</Type>
								<FormControlExtension
									i:nil="true" />
								<Text>@DocentricAX3:ShowDocumentPreview</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<Pattern>CustomFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilter</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
									<Value>Overview_GroupId</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>AttachmentTypeFilter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<HelpText>@DocentricAX4:AttachmentTypeFilterHelp</HelpText>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<EnumType>DocAttachmentType</EnumType>
						<Label>@DocentricAX3:ShowByType</Label>
						<Items />
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormComboBoxControl">
						<Name>AttachmentStatusFilter</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<HelpText>@DocentricAX2:AttachmentFilterValueHelp</HelpText>
						<Type>ComboBox</Type>
						<FormControlExtension
							i:nil="true" />
						<EnumType>DocReportAttachmentFilterValue</EnumType>
						<Items />
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>GridAndPreviewGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Grid</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DocuRef</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocuRef_Name</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Name</DataField>
										<DataSource>DocuRef</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocuRef_TypeId</Name>
										<AllowEdit>No</AllowEdit>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>TypeId</DataField>
										<DataSource>DocuRef</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocuRef_CategoryId_DC</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>CategoryId_DC</DataField>
										<DataSource>DocuRef</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocuRef_LanguageId_DC</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>LanguageId_DC</DataField>
										<DataSource>DocuRef</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocuRef_Tags_DC</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Tags_DC</DataField>
										<DataSource>DocuRef</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>DocuRef_Restriction</Name>
										<HelpText>@DocentricAX3:DocuViewRestrictionHelp</HelpText>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Restriction</DataField>
										<DataSource>DocuRef</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocuRef_Notes</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Notes</DataField>
										<DataSource>DocuRef</DataSource>
										<DisplayHeight>1</DisplayHeight>
										<DisplayHeightMode>Fixed</DisplayHeightMode>
										<MultiLine>Yes</MultiLine>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>DocuRef_isValueAttached</Name>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>isValueAttached</DataMethod>
										<DataSource>DocuRef</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>IsGlobalAttachment_DC</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>IsGlobalAttachment_DC</DataField>
										<DataSource>DocuRef</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>DocuRef</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DocuValue</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocuValue_OriginalFileName</Name>
										<AllowEdit>No</AllowEdit>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>OriginalFileName</DataField>
										<DataSource>DocuValue</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>DocuValue_FileType</Name>
										<AllowEdit>No</AllowEdit>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>FileType</DataField>
										<DataSource>DocuValue</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>DocuValue</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DocuRefActive</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>DocuRef_DC_Extension_active_DC</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataMethod>DocuRef_DC_Extension.active_DC</DataMethod>
										<DataSource>DocuRef</DataSource>
										<Items />
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>DocuRef_ActiveFrom_DC</Name>
										<Type>Date</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActiveFrom_DC</DataField>
										<DataSource>DocuRef</DataSource>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormDateControl">
										<Name>DocuRef_ActiveTo_DC</Name>
										<Type>Date</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ActiveTo_DC</DataField>
										<DataSource>DocuRef</DataSource>
									</AxFormControl>
								</Controls>
								<DataSource>DocuRef</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>DocuRef</DataSource>
						<Style>Tabular</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>DocumentPreviewGroup</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<HeightMode>SizeToAvailable</HeightMode>
						<Type>Group</Type>
						<Visible>No</Visible>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DocDocumentViewerGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl>
										<Name>DocDocumentViewer</Name>
										<HeightMode>SizeToAvailable</HeightMode>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension>
											<Name>DocDocumentViewer</Name>
											<ExtensionComponents />
											<ExtensionProperties>
												<AxFormControlExtensionProperty>
													<Name>dataSource</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>parmDocuManagementOptionsClassName</Name>
													<Type>String</Type>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>disableDelete</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
												<AxFormControlExtensionProperty>
													<Name>disableUpload</Name>
													<Type>Enum</Type>
													<TypeName>boolean</TypeName>
													<Value>False</Value>
												</AxFormControlExtensionProperty>
											</ExtensionProperties>
										</FormControlExtension>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>TextPreviewGroup</Name>
								<HeightMode>SizeToAvailable</HeightMode>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>NotePreview</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>String</Type>
										<Visible>No</Visible>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MultiLine>Yes</MultiLine>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>UrlPreview</Name>
										<AllowEdit>No</AllowEdit>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>String</Type>
										<Visible>No</Visible>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<MultiLine>Yes</MultiLine>
										<ShowLabel>No</ShowLabel>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStaticTextControl">
										<Name>insufficientPrivilegeStaticText</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HeightMode>SizeToAvailable</HeightMode>
										<Type>StaticText</Type>
										<Visible>No</Visible>
										<WidthMode>SizeToAvailable</WidthMode>
										<FormControlExtension
											i:nil="true" />
										<Text>@DocentricAX4:InsufficientPermissionsForPreview</Text>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<Caption>@DocentricAX4:AttachmentPreview</Caption>
					</AxFormControl>
				</Controls>
				<Columns>2</Columns>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>