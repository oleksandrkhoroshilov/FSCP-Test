<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DocPrintMgmtUtilsFieldGroupSelector</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DocPrintMgmtUtilsFieldGroupSelector extends FormRun
{
    private TmpPropertySelection tmpTable;
    private FormRun callerFormRun;
    private Map fieldGroupsMap;

}
]]></Source>
			</Method>
			<Method>
				<Name>run</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called when the form runs.
    /// </summary>
    public void run()
    {
        super();

        // Mark all datasource record matching the visible field group
        // in the caller form.
        while select tmpTable where tmpTable.Selected == NoYes::Yes
        {
            FieldGroups_ds.positionToRecord(tmpTable);
            FieldGroups_ds.mark(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called when button Ok is clicked.
    /// </summary>
    public void closeOk()
    {
        super();
        
        // Prepare the Map with field group names and visibility.
        // First clear all visibility values, then set only the values
        // for visible groups (keys).
        MapEnumerator me = fieldGroupsMap.getEnumerator();
        while (me.moveNext())
        {
            // Clear each value.
            fieldGroupsMap.add(me.currentKey(), false);
        }

        // Iterate through marked field groups and set the corresponding
        // values in the Map.
        Array markedRecords = FieldGroups_ds.recordsMarked();
        for (int i = 1; i <= markedRecords.lastIndex(); i++)
        {
            FieldGroups_ds.setPosition(markedRecords.value(i));
            TmpPropertySelection currentRecord = FieldGroups_ds.cursor();
            fieldGroupsMap.add(strFmt('%1.%2', currentRecord.Property, currentRecord.Criteria), true);
        }

        // We made sure in the datasource init that the caller
        // is correct form. Call its method to set the requested
        // visibility of field groups.
        callerFormRun.setFieldGroupsVisibility(false, fieldGroupsMap);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>FieldGroups</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes the data source.
        /// </summary>
        public void init()
        {
            super();           

            if (element.args() && element.args().caller() && element.args().caller() is FormRun)
            {
                callerFormRun = element.args().caller();
            }
            else
            {
                DocGlobalHelper::handleError('Invalid form caller');
            }

            // Trick to initialize the tmpTable buffer reference.
            delete_from tmpTable;

            if (callerFormRun.name() == formStr(DocPrintMgmtUtils))
            {
                // Get the field groups names and visibility from the caller form
                // and present them in the grid.
                fieldGroupsMap = callerFormRun.getFieldGroups();
                MapEnumerator me = fieldGroupsMap.getEnumerator();
                while (me.moveNext())
                {
                    // TmpPropertySelection table has index on Property field, so we will
                    // populate it with index that matches the order of field group appearance
                    // in the form. That's how we will get the field groups in this lookup
                    // in the same order as on the caller form, otherwise they would be 
                    // sorted alphabetically by the field group name (field Criteria).
                    str fieldGroupNameWithPrefix = me.currentKey(); // Key is Field group name with prefix 01., 02., etc. to guarantee the sorting
                    tmpTable.clear();
                    tmpTable.Property = subStr(fieldGroupNameWithPrefix, 1, 2); // index, used for sorting
                    tmpTable.Criteria = subStr(fieldGroupNameWithPrefix, 4, strLen(fieldGroupNameWithPrefix) - 3);  // Field group name without prefix
                    tmpTable.Selected = me.currentValue();  // Field group visibility
                    tmpTable.insert();
                }

                FieldGroups.setTmpData(tmpTable);

                // Expand the grid's height to match all field groups, but not more than PrintMgmtUtilsFieldGroupsSelectorMaxRows.
                int visibleRows = fieldGroupsMap.elements() <= DocConstant::PrintMgmtUtilsFieldGroupsSelectorMaxRows ? 
                                    fieldGroupsMap.elements() : DocConstant::PrintMgmtUtilsFieldGroupsSelectorMaxRows;
                Grid.visibleRowsValue(visibleRows);
            }
            else
            {
                DocGlobalHelper::handleError('Invalid form caller');
            }
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>FieldGroups</Name>
			<Table>TmpPropertySelection</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Criteria</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Property</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Selected</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<Index>Key</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@DocentricAX4:SelectFieldGroups</Caption>
		<DataSource xmlns="">FieldGroups</DataSource>
		<HeightMode xmlns="">SizeToContent</HeightMode>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">DropDialog</Style>
		<WidthMode xmlns="">SizeToAvailable</WidthMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AllowEdit>No</AllowEdit>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Grid</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>FieldGroups_Criteria</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>Criteria</DataField>
								<DataSource>FieldGroups</DataSource>
								<Label>@DocentricAX4:FieldGroup</Label>
							</AxFormControl>
						</Controls>
						<DataSource>FieldGroups</DataSource>
						<Style>Tabular</Style>
						<VisibleRows>3</VisibleRows>
						<VisibleRowsMode>Fixed</VisibleRowsMode>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>OKButtonGroup</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Left>0</Left>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
						<MultiSelect>Yes</MultiSelect>
						<Text>@SYS2245</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>