<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DocSysOutgoingEmailMessage</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DocSysOutgoingEmailMessage extends FormRun
{
    private DocentricHtmlEditorControl htmlEditor;
    private SysOutgoingEmailTable outgoingEmailTable;

    private boolean outgoingEmailDataModified;  // A flag indicating that the data in the SysOutgoingEmailData table has been modified
    private boolean isCloseOk; // A flag indicating if the form is closed by clicking the Update button

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Throw an exception if the form is called without parameter
    /// or if caller DS is not SysOutgoingEmailTable.
    /// If the form is called with the 'View' parameter, update the properties of certain controls.
    /// </summary>
    public void init()
    {
        str openErrMsg = "@DocentricAX4:OutgoingEmailMessageFormOpenError";
        outgoingEmailTable = element.args().record();

        super();
        
        if (!element.args().parm() || element.args().dataset() != tableNum(SysOutgoingEmailTable))
        {
            DocGlobalHelper::handleException(funcName(), openErrMsg);
        }
        
        htmlEditor = EmailBodyHtmlEditor as DocentricHtmlEditorControl;
        htmlEditor.setSourceString(SysOutgoingEmailTable::find(outgoingEmailTable.EmailItemId).Message);

        if (element.args().parm() == 'View')
        {
            this.design().caption("@SYS76779");
            AttachmentsNewButton.visible(false);
            AttachmentsDeleteButton.visible(false);
            AttachmentsGrid.allowEdit(false);
            EmailBodyHtmlEditor.allowEdit(false);
            UpdateMessageButton.visible(false);
            CloseMessageButton.text("@SYS15212");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    /// <summary>
    /// When closing the form, check if the email body has changed and call the DS write() method.
    /// </summary>
    public void closeOk()
    {
        str msg = "@DocentricAX4:OutgoingEmailMessageUpdateConfirmDialogMsg";

        try
        {
            if (Box::yesNo(msg, DialogButton::No, "@DocentricAX4:OugoingEmailMessageUpdateCaption") == DialogButton::Yes)
            {
                isCloseOk = true;

                if (SysOutgoingEmailTable_ds.isMessageModified())
                {
                    SysOutgoingEmailTable_ds.write();
                }
                
                super();

                DocGlobalHelper::handleInfo("@DocentricAX4:OutgoingEmailMessageUpdateInfoMsg");
            }
        }
        catch
        {
            DocGlobalHelper::handleError("@DocentricAX4:OutgoingEmailMessageUpdateErrorMsg");
        }
        finally
        {
            isCloseOk = false;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    /// <summary>
    /// When the DocSysOutgoingEmailMessage form closes, refresh DS of the caller form.
    /// </summary>
    public void close()
    {
        if (outgoingEmailTable)
        {
            FormDataSource formDataSource = FormDataUtil::getFormDataSource(outgoingEmailTable);
            if (formDataSource)
            {
                formDataSource.research(true);
            }
        }

        super();
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>SysOutgoingEmailTable</Name>
				<Methods>
					<Method>
						<Name>validateWrite</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validate emails and check if the message is modified.
        /// </summary>
        /// <returns>True/False</returns>
        public boolean validateWrite()
        {
            boolean ret;
    
            ret = super();

            ret = this.validateEmailsDS() && ret;
    
            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>write</Name>
						<Source><![CDATA[
        /// <summary>
        /// Save the changes to the email body, if any.
        /// </summary>
        public void write()
        {
            #OCCRetryCount
            
            if (SysOutgoingEmailTable.Message != htmlEditor.getSourceString())
            {
                SysOutgoingEmailTable.Message = htmlEditor.getSourceString();
            }

            // Write the changes only when the Update button is clicked
            if (isCloseOk)
            {
                super();

                if (outgoingEmailDataModified)
                {
                    SysOutgoingEmailData outgoingEmailDataTmp = SysOutgoingEmailData_ds.cursor();
                    SysOutgoingEmailData outgoingEmailData;

                    try
                    {
                        // Update the data in the SysOutgoingEmailData table from the temporary table buffer
                        ttsbegin;

                        delete_from outgoingEmailData
                            where outgoingEmailData.EmailItemId == outgoingEmailTable.EmailItemId
                               && outgoingEmailData.EmailDataType == SysEmailDataType::Attachment;

                        insert_recordset outgoingEmailData (DataId, EmailDataType, EmailItemId, FileName, FileExtension, Data)
                            select DataId, EmailDataType, EmailItemId, FileName, FileExtension, Data
                                from outgoingEmailDataTmp;

                        ttsCommit;
                    }
                    catch (Exception::Deadlock)
                    {
                        if (xSession::currentRetryCount() >= #RetryNum)
                        {
                            throw Exception::Deadlock;
                        }

                        retry;
                    }
                    catch (Exception::UpdateConflict)
                    {
                        if (appl.ttsLevel() == 0)
                        {
                            if (xSession::currentRetryCount() >= #RetryNum)
                            {
                                throw Exception::UpdateConflictNotRecovered;
                            }
                            else
                            {
                                retry;
                            }
                        }
                        else
                        {
                            throw Exception::UpdateConflict;
                        }
                    }
                }
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Set the allowEdit property of SysOutgoingEmailTable_ds to "false" if the form is called with 'View' parameter.
        /// Set the range and value of the qbds to show only the data of the caller record >> SysOutgoingEmailTable.EmailItemdId.
        /// </summary>
        public void init()
        {
            super();

            SysOutgoingEmailTable_ds.allowEdit(element.args().parm() != 'View');
            this.queryBuildDataSource().addRange(fieldNum(SysOutgoingEmailTable, EmailItemId)).value(queryValue(outgoingEmailTable.EmailItemId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateEmailsDS</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validate email fields.
        /// </summary>
        /// <returns>True/False</returns>
        private boolean validateEmailsDS()
        {
            boolean ret = true;
            
            if (!DocGlobalHelper::validateEmailList(SysOutgoingEmailTable.Recipient))
            {
                ret = checkFailed(strFmt("@DocentricAX3:EmailMessageUpdateEmailAddressesNotValid",
                                          fieldId2Name(tableNum(SysOutgoingEmailTable), fieldNum(SysOutgoingEmailTable, Recipient)), SysOutgoingEmailTable.Recipient)) && ret;
            }

            if (SysOutgoingEmailTable.EmailCc_DC && !DocGlobalHelper::validateEmailList(SysOutgoingEmailTable.EmailCc_DC))
            {
                ret = checkFailed(strFmt("@DocentricAX:CcEmailAddressesNotValid", SysOutgoingEmailTable.EmailCc_DC)) && ret;
            }

            if (SysOutgoingEmailTable.EmailBcc_DC && !DocGlobalHelper::validateEmailList(SysOutgoingEmailTable.EmailBcc_DC))
            {
                ret = checkFailed(strFmt("@DocentricAX:BccEmailAddressesNotValid", SysOutgoingEmailTable.EmailBcc_DC)) && ret;
            }

            if (!DocGlobalHelper::validateEmailList(SysOutgoingEmailTable.Sender))
            {
                ret = checkFailed(strFmt("@DocentricAX3:EmailMessageUpdateEmailAddressNotValid",
                                          fieldId2Name(tableNum(SysOutgoingEmailTable), fieldNum(SysOutgoingEmailTable, Sender)), SysOutgoingEmailTable.Sender)) && ret;
            }

            if (SysOutgoingEmailTable.EmailReplyTo_DC && !DocGlobalHelper::validateEmailList(SysOutgoingEmailTable.EmailReplyTo_DC))
            {
                ret = checkFailed(strFmt("@DocentricAX:ReplyToEmailAddressesNotValid", SysOutgoingEmailTable.EmailReplyTo_DC)) && ret;
            }

            if (SysOutgoingEmailTable.EmailBounceTo_DC && !DocGlobalHelper::validateEmailList(SysOutgoingEmailTable.EmailBounceTo_DC))
            {
                ret = checkFailed(strFmt("@DocentricAX:BounceToEmailAddressesNotValid", SysOutgoingEmailTable.EmailBounceTo_DC)) && ret;
            }

            if (SysOutgoingEmailTable.EmailReadReceiptAddress_DC && !DocGlobalHelper::validateEmailList(SysOutgoingEmailTable.EmailReadReceiptAddress_DC))
            {
                ret = checkFailed(strFmt("@DocentricAX2:ReadReceiptEmailAddressNotValid", SysOutgoingEmailTable.EmailReadReceiptAddress_DC)) && ret;
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>isMessageModified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Checks whether the email message has been modified.
        /// </summary>
        /// <returns>True/False</returns>
        public boolean isMessageModified()
        {
            SysOutgoingEmailTable outgoingEmailTable_Orig = SysOutgoingEmailTable.orig();

            if (outgoingEmailTable_Orig.Subject != SysOutgoingEmailTable.Subject||
                outgoingEmailTable_Orig.Priority != SysOutgoingEmailTable.Priority ||
                outgoingEmailTable_Orig.Recipient != SysOutgoingEmailTable.Recipient ||
                outgoingEmailTable_Orig.EmailCc_DC != SysOutgoingEmailTable.EmailCc_DC ||
                outgoingEmailTable_Orig.EmailBcc_DC != SysOutgoingEmailTable.EmailBcc_DC ||
                outgoingEmailTable_Orig.Sender != SysOutgoingEmailTable.Sender ||
                outgoingEmailTable_Orig.SenderName != SysOutgoingEmailTable.SenderName ||
                outgoingEmailTable_Orig.EmailReplyTo_DC != SysOutgoingEmailTable.EmailReplyTo_DC ||
                outgoingEmailTable_Orig.EmailBounceTo_DC != SysOutgoingEmailTable.EmailBounceTo_DC ||
                outgoingEmailTable_Orig.EmailReadReceiptAddress_DC != SysOutgoingEmailTable.EmailReadReceiptAddress_DC ||
                outgoingEmailTable_Orig.EmailDeliveryReceiptCondition_DC != SysOutgoingEmailTable.EmailDeliveryReceiptCondition_DC ||
                outgoingEmailTable_Orig.Message != htmlEditor.getSourceString() ||
                outgoingEmailDataModified)
            {
                return true;
            }

            return false;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
			<DataSource>
				<Name>SysOutgoingEmailData</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Set the allowEdit property of SysOutgoingEmailData_ds to "false" if the form is called with 'View' parameter.
        /// Set the range and value of the qbds to show only the attachments of type SysEmailDataType::Attachment of the caller record >> SysOutgoingEmailTable.EmailItemdId.
        /// </summary>
        public void init()
        {
            super();

            // In update mode, set the data source table as temporary
            if (element.args().parm() == 'Update')
            {
                this.cursor().setTmp();
            
                SysOutgoingEmailData outgoingEmailDataTmp = this.cursor();
                SysOutgoingEmailData outgoingEmailData;

                ttsbegin;

                // Copy the data from the original to the temporary table buffer
                insert_recordset outgoingEmailDataTmp (DataId, EmailDataType, EmailItemId, FileName, FileExtension, Data)
                    select DataId, EmailDataType, EmailItemId, FileName, FileExtension, Data
                        from outgoingEmailData
                            where outgoingEmailData.EmailItemId == outgoingEmailTable.EmailItemId
                               && outgoingEmailData.EmailDataType == SysEmailDataType::Attachment;

                ttscommit;
            }

            SysOutgoingEmailData_ds.allowEdit(element.args().parm() == 'Update');
            SysOutgoingEmailData_ds.allowDelete(element.args().parm() == 'Update');
            this.queryBuildDataSource().addRange(fieldNum(SysOutgoingEmailData, EmailDataType)).value(queryValue(SysEmailDataType::Attachment));
            this.queryBuildDataSource().addRange(fieldNum(SysOutgoingEmailData, EmailItemId)).value(queryValue(outgoingEmailTable.EmailItemId));
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        /// <summary>
        /// Deletes the current record from the data source.
        /// </summary>
        public void delete()
        {
            super();

            outgoingEmailDataModified = true;
        }

]]></Source>
					</Method>
					<Method>
						<Name>selectionChanged</Name>
						<Source><![CDATA[
        /// <summary>
        /// Used for updating the "Attachments" form control's caption to reflect attachment count.
        /// </summary>
        public void selectionChanged()
        {
            super();

            Attachments.caption(strFmt("@SYS316708" + ' (%1)', SysOutgoingEmailData_ds.numberOfRowsLoaded()));
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>AttachmentsNewButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Opens the form to select the file to add as an email attachment.
        /// </summary>
        public void clicked()
        {
            super();

            FileUploadResultBase result = File::GetFileFromUser();

            if (result && result.getUploadStatus())
            {                
                int numberOfAttachments;
                SysOutgoingEmailData outgoingEmailDataTmp = SysOutgoingEmailData_ds.cursor();

                try
                {
                    ttsbegin;

                    select maxof(DataId) from outgoingEmailDataTmp
                        where outgoingEmailDataTmp.EmailItemId == outgoingEmailTable.EmailItemId;

                    numberOfAttachments = outgoingEmailDataTmp.DataId;
                    outgoingEmailDataTmp.clear();

                    using (System.IO.Stream attachment = result.openResult())
                    {
                        outgoingEmailDataTmp.Data = DocGlobalHelper::convertMemoryStreamToContainer(attachment);
                    }
                                 
                    outgoingEmailDataTmp.DataId = numberOfAttachments + 1;
                    outgoingEmailDataTmp.EmailDataType = SysEmailDataType::Attachment;
                    outgoingEmailDataTmp.EmailItemId = outgoingEmailTable.EmailItemId;
                    outgoingEmailDataTmp.FileName = DocFileMngHelper::getFileNameWithoutExtension(result.getFileName());
                    outgoingEmailDataTmp.FileExtension = DocFileMngHelper::getFileExtensionWithDot(result.getFileName());

                    outgoingEmailDataTmp.insert();

                    // Set the flag indicating that the data in the SysOutgoingEmailData table has been modified
                    outgoingEmailDataModified = true;

                    ttscommit;
                }
                finally
                {
                    result.deleteResult();
                    SysOutgoingEmailData_ds.research(true);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>AttachmentsDownloadButton</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Downloads selected email attachments.
        /// </summary>
        public void clicked()
        {
            super();

            SysOutgoingEmailData selectedAttachment;
            BinData binData = new BinData();

            for (selectedAttachment = SysOutgoingEmailData_ds.getFirst(true) ? SysOutgoingEmailData_ds.getFirst(true) : SysOutgoingEmailData_ds.cursor();
                 selectedAttachment;
                 selectedAttachment = SysOutgoingEmailData_ds.getNext())
            {
                binData.setData(selectedAttachment.Data);

                using (System.IO.MemoryStream stream = Binary::constructFromContainer(binData.getData()).getMemoryStream())
                {
                    DocFileMngHelper::sendFileToUser(stream, selectedAttachment.FileName + selectedAttachment.FileExtension, '', '', '', '', true, true, true);
                }
            }
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>SysOutgoingEmailTable</Name>
			<Table>SysOutgoingEmailTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>AccountNum_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>AccountType_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CompanyId_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ContextInfo_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_Ccs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_CompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_LatestStatusChangeDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_LatestStatusChangeTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_NextRetryDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_NextRetryTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SessionLoginDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_SessionLoginTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>DocumentId_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailBcc_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailBounceTo_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailCc_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailDeliveryReceiptCondition_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>EmailItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailReadReceiptAddress_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailReplyTo_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>IsSystemEmail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>LastErrorMessage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>LatestStatusChangeDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Message</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>NextRetryDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Origin</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Priority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>ProcessorID</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Recipient</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>RetryNum</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Sender</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SenderName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SessionId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SessionLoginDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>Status</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Subject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>TemplateId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>UserId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>WithRetries</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>SysOutgoingEmailData</Name>
			<Table>SysOutgoingEmailData</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>Data</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailDataType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileExtension</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FileName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>SysOutgoingEmailTable</JoinSource>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@DocentricAX4:OugoingEmailMessageUpdateCaption</Caption>
		<DialogSize xmlns="">Medium</DialogSize>
		<Pattern xmlns="">DialogFastTabs</Pattern>
		<PatternVersion xmlns="">1.0</PatternVersion>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<Visible>No</Visible>
				<FormControlExtension
					i:nil="true" />
				<Controls />
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>FormTabControl</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>GeneralTab</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SubjectGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>Subject</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Subject</DataField>
										<DataSource>SysOutgoingEmailTable</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>PriorityGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>Priority</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Priority</DataField>
										<DataSource>SysOutgoingEmailTable</DataSource>
										<Label>@DocentricAX:MailMessagePriority</Label>
										<Items />
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@DocentricAX:General</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>RecipientsTab</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>EmailRecipientGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EmailRecipient</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Recipient</DataField>
										<DataSource>SysOutgoingEmailTable</DataSource>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>EmailCcGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EmailCC</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EmailCc_DC</DataField>
										<DataSource>SysOutgoingEmailTable</DataSource>
										<Label>@DocentricAX:Cc</Label>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>EmailBccGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EmailBcc</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EmailBcc_DC</DataField>
										<DataSource>SysOutgoingEmailTable</DataSource>
										<Label>@DocentricAX:Bcc</Label>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@DocentricAX3:EmailMessageUpdateRecipientsTabPage</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>SenderTab</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SenderGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SenderEmail</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>Sender</DataField>
										<DataSource>SysOutgoingEmailTable</DataSource>
										<Label>@SYS342791</Label>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>SenderNameGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SenderName</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>SenderName</DataField>
										<DataSource>SysOutgoingEmailTable</DataSource>
										<Label>@DocentricAX:SenderDisplayName</Label>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>EmailReplyToGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EmailReplyTo</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EmailReplyTo_DC</DataField>
										<DataSource>SysOutgoingEmailTable</DataSource>
										<Label>@DocentricAX2:ReplyToAddress</Label>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>EmailBounceToGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>EmailBounceTo</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EmailBounceTo_DC</DataField>
										<DataSource>SysOutgoingEmailTable</DataSource>
										<Label>@DocentricAX2:BounceToAddress</Label>
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@DocentricAX:Sender</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>ReadAndDeliveryReceiptsTab</Name>
						<Pattern>FieldsFieldGroups</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>EmailReadReceiptGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>ReadReceiptAddress</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EmailReadReceiptAddress_DC</DataField>
										<DataSource>SysOutgoingEmailTable</DataSource>
										<Label>@DocentricAX2:EmailReadReceiptAddress</Label>
									</AxFormControl>
								</Controls>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>DeliveryReceiptConditionGroup</Name>
								<Type>Group</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>DeliveryReceiptCondition</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>EmailDeliveryReceiptCondition_DC</DataField>
										<DataSource>SysOutgoingEmailTable</DataSource>
										<Label>@DocentricAX2:SendDeliveryReceipt</Label>
										<Items />
									</AxFormControl>
								</Controls>
							</AxFormControl>
						</Controls>
						<ColumnsMode>Fill</ColumnsMode>
						<Caption>@DocentricAX3:EmailMessageUpdateReadAndDeliveryReceiptsTabPage</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Attachments</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Pattern>ToolbarList</Pattern>
						<PatternVersion>1.2</PatternVersion>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>AttachmentsActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonGroupControl">
										<Name>AttachmentsButtonGroup</Name>
										<Type>ButtonGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>AttachmentsNewButton</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
												<NormalImage>New</NormalImage>
												<Text>@DocentricAX:Add</Text>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormCommandButtonControl">
												<Name>AttachmentsDeleteButton</Name>
												<AutoDeclaration>Yes</AutoDeclaration>
												<Type>CommandButton</Type>
												<FormControlExtension
													i:nil="true" />
												<Command>DeleteRecord</Command>
												<MultiSelect>Yes</MultiSelect>
												<NeedsRecord>Yes</NeedsRecord>
											</AxFormControl>
											<AxFormControl xmlns=""
												i:type="AxFormButtonControl">
												<Name>AttachmentsDownloadButton</Name>
												<Type>Button</Type>
												<FormControlExtension
													i:nil="true" />
												<ButtonDisplay>TextWithImageLeft</ButtonDisplay>
												<MultiSelect>Yes</MultiSelect>
												<NormalImage>Download</NormalImage>
												<Text>@DocentricAX4:OutgoingEmailMessageDownloadAttachmentButton</Text>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<DataSource>SysOutgoingEmailData</DataSource>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGridControl">
								<Name>AttachmentsGrid</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>Grid</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SysOutgoingEmailData_fileNameExt</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>FileName</DataField>
										<DataSource>SysOutgoingEmailData</DataSource>
										<Label>@SYS53125</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormStringControl">
										<Name>SysOutgoingEmailData_fileSizeStr</Name>
										<Type>String</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>FileExtension</DataField>
										<DataSource>SysOutgoingEmailData</DataSource>
										<Label>@SYS16110</Label>
									</AxFormControl>
								</Controls>
								<DataSource>SysOutgoingEmailData</DataSource>
							</AxFormControl>
						</Controls>
						<Caption>@SYS316708</Caption>
						<PanelStyle>Hub</PanelStyle>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>Body</Name>
						<Pattern>Custom</Pattern>
						<Type>TabPage</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl>
								<Name>EmailBodyHtmlEditor</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Height>300</Height>
								<HeightMode>Manual</HeightMode>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension>
									<Name>DocentricHtmlEditorControl</Name>
									<ExtensionComponents />
									<ExtensionProperties>
										<AxFormControlExtensionProperty>
											<Name>parmSourceString</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmPlaceholders</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEmailTemplates</Name>
											<Type>String</Type>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmUsedForEmailTemplates</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAllowMaximize</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>True</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAllowEmailTemplates</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmEditorCaption</Name>
											<Type>String</Type>
											<Value>@DocentricAX:EmailBody</Value>
										</AxFormControlExtensionProperty>
										<AxFormControlExtensionProperty>
											<Name>parmAllowPlaceholders</Name>
											<Type>Enum</Type>
											<TypeName>boolean</TypeName>
											<Value>False</Value>
										</AxFormControlExtensionProperty>
									</ExtensionProperties>
								</FormControlExtension>
							</AxFormControl>
						</Controls>
						<Caption>@DocentricAX:Body</Caption>
						<DataSource>SysOutgoingEmailTable</DataSource>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalWrap</ArrangeMethod>
				<Style>FastTabs</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>UpdateMessageButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<NeededPermission>Update</NeededPermission>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<Text>@DocentricAX3:EmailMessageUpdateUpdate</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>CloseMessageButton</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS12778</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>