<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DocLabelSysLabelTranslationEdit</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DocLabelSysLabelTranslationEdit extends FormRun
{
    private DocLabelTable callerRecord;

}
]]></Source>
			</Method>
			<Method>
				<Name>checkArgs</Name>
				<Source><![CDATA[
    /// <summary>
    /// Checking args, caller and caller record.
    /// Show appropriate message in a case of a wrong form call.
    /// </summary>
    private void checkArgs()
    {
        if (!element.args())
        {
            DocGlobalHelper::handleException(funcName(),"@DocentricAX2:FormCalledWithoutArguments");
        }

        Args args = element.args();

        FormRun callerFormRun = args.caller() as FormRun;

        if (!(args.caller() is FormRun) || callerFormRun == null)
        {
            DocGlobalHelper::handleException(funcName(), "@DocentricAX2:InvalidCaller");
        }

        callerRecord = args.record() as DocLabelTable;

        if (callerRecord == null)
        {
            DocGlobalHelper::handleException(funcName(), "@DocentricAX4:InvalidRecord");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// On form init, check caller and, depending on a caller menu item set form caption,
    /// populate datasource table and tune form controls.
    /// </summary>
    public void init()
    {
        super();

        this.checkArgs();

        element.design().caption(strFmt('%1 %2 %3', "@DocentricAX4:EditUsingSysLabelTranslations", "@DocentricAX3:For", callerRecord.BasedOnSysLabelId));

        EditTranslationsIntructions.text(strFmt("@DocentricAX4:EditUsingSystemLabelTranslationsFormStaticText", callerRecord.LabelId, callerRecord.BasedOnSysLabelId));

        DocLabelSysLabelTranslationTmp::fillTableForConfiguredLanguages(DocLabelSysLabelTranslationTmp, callerRecord.BasedOnSysLabelId, callerRecord.LabelId);

        // Set the form controls
        element.setControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>closeOk</Name>
				<Source><![CDATA[
    /// <summary>
    /// On OK button pressed update label translations and refresh datasource of the caller form.
    /// </summary>
    public void closeOk()
    {
        this.updateLabelTranslations();

        super();
        
        // Refresh the caller form.
        if (element.args() && element.args().caller())
        {
            IDocRefreshable caller = element.args().caller() as IDocRefreshable;
            if (caller)
            {
                caller.refreshCallerDataSourceAndPosition();
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the form controls.
    /// </summary>
    private void setControls()
    {
        OK.enabled(DocLabelSysLabelTranslationTmp_ds.isDirtyDS(DocLabelSysLabelTranslationTmp));
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateLabelTranslations</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loop through a datasource records and update label translations if translation is not empty.
    /// </summary>
    private void updateLabelTranslations()
    {
        DocLabelSysLabelTranslationTmp = DocLabelSysLabelTranslationTmp_ds.getFirst();

        while (DocLabelSysLabelTranslationTmp)
        {
            if (DocLabelSysLabelTranslationTmp.IsDirty)
            {
                DocLabelTranslation::updateFromSystemLabelTranslations(DocLabelSysLabelTranslationTmp, callerRecord.GlobalLabelId);
            }

            DocLabelSysLabelTranslationTmp = DocLabelSysLabelTranslationTmp_ds.getNext();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateIsDirty</Name>
				<Source><![CDATA[
    /// <summary>
    /// Updates the field IsDirty depending on whether the label translation has been changed.
    /// </summary>
    private void updateIsDirty()
    {
        ttsbegin;

        // Check whether the label translation has been changed and the modified translation differes from the original label translation
        if (DocLabelSysLabelTranslationTmp.orig().UserDefinedLabelTranslation != DocLabelSysLabelTranslationTmp.UserDefinedLabelTranslation &&
                DocLabelSysLabelTranslationTmp.UserDefinedLabelTranslation != DocLabelTranslation::findByLabelAndLanguage(callerRecord.GlobalLabelId, DocLabelSysLabelTranslationTmp.LanguageId).Translation)
        {
            DocLabelSysLabelTranslationTmp.IsDirty = NoYes::Yes;
        }
        else
        {
            DocLabelSysLabelTranslationTmp.IsDirty = NoYes::No;
        }
        DocLabelSysLabelTranslationTmp.update();

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>copySystemTranslation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Loop through all marked records and copy system label translations to user-defined label translations.
    /// </summary>
    private void copySystemTranslation()
    {
        int selectedRecordIndex = DocLabelSysLabelTranslationTmp_ds.getPosition();
        MultiSelectionHelper multiSelectionHelper = MultiSelectionHelper::construct();
        multiSelectionHelper.parmDatasource(DocLabelSysLabelTranslationTmp_ds);
        DocLabelSysLabelTranslationTmp labelTranslationsTmp, labelTranslationsTmpUpdate;

        labelTranslationsTmp = multiSelectionHelper.getFirst();

        try
        {
            ttsbegin;

            while (labelTranslationsTmp)
            {
                DocLabelSysLabelTranslationTmp_ds.positionToRecord(labelTranslationsTmp);
                labelTranslationsTmpUpdate = DocLabelSysLabelTranslationTmp_ds.cursor();

                labelTranslationsTmpUpdate.UserDefinedLabelTranslation = labelTranslationsTmp.SysLabelTranslation;

                // Update the field IsDirty depending on whether the label translation has been changed
                element.updateIsDirty();

                labelTranslationsTmpUpdate.update();
                
                labelTranslationsTmp = multiSelectionHelper.getNext();
            }

            ttscommit;
        }
        catch
        {
            DocGlobalHelper::handleException(funcName(), "@DocentricAX4:ErrorCopyingSysLabelTranslations");
        }

        DocLabelSysLabelTranslationTmp_ds.research();
        DocLabelSysLabelTranslationTmp_ds.setPosition(selectedRecordIndex);
    }

]]></Source>
			</Method>
			<Method>
				<Name>setTranslation</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets translation from multi-line edit form.
    /// </summary>
    /// <param name = "_translation">Translation</param>
    public void setTranslation(str _translation)
    {
        DocLabelSysLabelTranslationTmp.UserDefinedLabelTranslation = _translation;
        int selectedRecordIndex = DocLabelSysLabelTranslationTmp_ds.getPosition();
        
        // Update the field IsDirty depending on whether the label translation has been changed
        element.updateIsDirty();

        DocLabelSysLabelTranslationTmp_ds.research();
        DocLabelSysLabelTranslationTmp_ds.setPosition(selectedRecordIndex);
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>DocLabelSysLabelTranslationTmp</Name>
				<Methods>
					<Method>
						<Name>displayOption</Name>
						<Source><![CDATA[
        /// <summary>
        /// Marks dirty records with light yellow color, others are white.
        /// </summary>
        /// <param name = "_record">DataSource record</param>
        /// <param name = "_options">Row display options</param>
        public void displayOption(Common _record, FormRowDisplayOption _options)
        {
            DocLabelSysLabelTranslationTmp currentRecord = _record.data();

            if (currentRecord.IsDirty)
            {
                _options.backColor(0xFFF4CE); // yellow color from infolog warning
            }
            else
            {
                _options.backColor(0xFFFFFF); // white color
            }

            super(_record, _options);
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        /// <summary>
        /// Called when the record becomes active.
        /// </summary>
        /// <returns>True/False</returns>
        public int active()
        {
            int ret = super();
        
            // Set the form controls
            element.setControls();

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>isDirtyDS</Name>
						<Source><![CDATA[
        /// <summary>
        /// A dsiplay method for isDirty data source.
        /// </summary>
        /// <param name = "_docLabelSysLabelTranslationTmp">The DocLabelSysLabelTranslationTmp table buffer</param>
        /// <returns>True if at least one record in the data source is dirty; otherwise false</returns>
        public display boolean isDirtyDS(DocLabelSysLabelTranslationTmp _docLabelSysLabelTranslationTmp)
        {
            DocLabelSysLabelTranslationTmp labelSysLabelTranslationTmp;
            labelSysLabelTranslationTmp.setTmpData(_docLabelSysLabelTranslationTmp);

            select firstonly RecId from labelSysLabelTranslationTmp
                where labelSysLabelTranslationTmp.IsDirty == NoYes::Yes;

            return labelSysLabelTranslationTmp.RecId != 0;
        }

]]></Source>
					</Method>
					<Method>
						<Name>differsFromSystem</Name>
						<Source><![CDATA[
        /// <summary>
        /// Shows a check box based on if current user-defined label and system label are equal.
        /// </summary>
        /// <param name = "_docLabelSysLabelTranslationTmp">DataSource record</param>
        /// <returns>True if user-defined label differs from system label, otherwise false</returns>
        [SysClientCacheDataMethodAttribute(true)]
        public display DocLabelTranslationDiffersFromSystem differsFromSystem(DocLabelSysLabelTranslationTmp _docLabelSysLabelTranslationTmp)
        {
            return _docLabelSysLabelTranslationTmp.UserDefinedLabelTranslation != _docLabelSysLabelTranslationTmp.SysLabelTranslation;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>UserDefinedLabelTranslation</DataField>
						<Methods>
							<Method>
								<Name>modified</Name>
								<Source><![CDATA[
            /// <summary>
            /// When the field is modified we set IsDirty flag of the record and
            /// refresh the data source to force marking the record as dirty (yellow color).
            /// </summary>
            public void modified()
            {
                super();

                int selectedRecordIndex = DocLabelSysLabelTranslationTmp_ds.getPosition();

                // Update the field IsDirty depending on whether the label translation has been changed
                element.updateIsDirty();

                DocLabelSysLabelTranslationTmp_ds.research();
                DocLabelSysLabelTranslationTmp_ds.setPosition(selectedRecordIndex);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>CopySystemTranslation</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// When clicked on CopySystemTranslation button, system label translation
        /// needs to be copied to user-defined translations for all the marked records.
        /// </summary>
        public void clicked()
        {
            super();
            
            element.copySystemTranslation();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DocLabelSysLabelTranslationTmp</Name>
			<Table>DocLabelSysLabelTranslationTmp</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>DataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>LanguageId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>SysLabelTranslation</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserDefinedLabelTranslation</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<Index>LineNumIdx</Index>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@DocentricAX4:SystemLabelTranslations</Caption>
		<DialogSize xmlns="">Full</DialogSize>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormStaticTextControl">
				<Name>EditTranslationsIntructions</Name>
				<AutoDeclaration>Yes</AutoDeclaration>
				<ExtendedStyle>dialog_secondaryInstruction</ExtendedStyle>
				<Type>StaticText</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Text>@DocentricAX4:EditUsingSystemLabelTranslationsFormStaticText</Text>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>ContentGroup</Name>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>ToolbarList</Pattern>
				<PatternVersion>1.2</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormActionPaneControl">
						<Name>FormActionPane</Name>
						<Type>ActionPane</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonGroupControl">
								<Name>FormButtonGroup</Name>
								<Type>ButtonGroup</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormButtonControl">
										<Name>CopySystemTranslation</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HelpText>@DocentricAX4:CopyTranslationFromSysLabelHelp</HelpText>
										<Type>Button</Type>
										<FormControlExtension
											i:nil="true" />
										<ButtonDisplay>TextOnly</ButtonDisplay>
										<MultiSelect>Yes</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<Text>@DocentricAX4:CopyTranslationFromSysLabel</Text>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormMenuFunctionButtonControl">
										<Name>MultiLineEdit</Name>
										<HelpText>@DocentricAX3:MultiLineEditHelp</HelpText>
										<Type>MenuFunctionButton</Type>
										<FormControlExtension
											i:nil="true" />
										<DataSource>DocLabelSysLabelTranslationTmp</DataSource>
										<MenuItemName>DocLabelMultilineDialog</MenuItemName>
										<MultiSelect>No</MultiSelect>
										<NeedsRecord>Yes</NeedsRecord>
										<NormalImage>OpenEnrollment</NormalImage>
										<Text>@DocentricAX3:MultiLineEdit</Text>
									</AxFormControl>
								</Controls>
								<ArrangeMethod>HorizontalRight</ArrangeMethod>
							</AxFormControl>
						</Controls>
						<Style>Strip</Style>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGridControl">
						<Name>Grid</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>Grid</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>LanguageId</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>LanguageId</DataField>
								<DataSource>DocLabelSysLabelTranslationTmp</DataSource>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>UserDefinedLabelTranslation</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>UserDefinedLabelTranslation</DataField>
								<DataSource>DocLabelSysLabelTranslationTmp</DataSource>
								<DisplayHeight>1</DisplayHeight>
								<DisplayHeightMode>Fixed</DisplayHeightMode>
								<MultiLine>Yes</MultiLine>
								<ViewEditMode>Edit</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>SysLabelTranslation</Name>
								<Enabled>No</Enabled>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>SysLabelTranslation</DataField>
								<DataSource>DocLabelSysLabelTranslationTmp</DataSource>
								<ViewEditMode>View</ViewEditMode>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>TranslationDiffersFromSystem</Name>
								<Enabled>No</Enabled>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>differsFromSystem</DataMethod>
								<DataSource>DocLabelSysLabelTranslationTmp</DataSource>
							</AxFormControl>
						</Controls>
						<DataSource>DocLabelSysLabelTranslationTmp</DataSource>
					</AxFormControl>
				</Controls>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<Type>ButtonGroup</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<Text>@DocentricAX:Update</Text>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<Type>CommandButton</Type>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
						<SaveRecord>No</SaveRecord>
						<Text>@SYS12778</Text>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>