<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DocReportTemplatePreview</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DocReportTemplatePreview extends FormRun
{
    DocReportTemplate selectedTemplate;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the form.
    /// </summary>
    public void init()
    {
        super();
    
        str errMsg = 'The form can be open from the Docentric reports form only';

        if (element.args() == null || element.args().dataset() != tableNum(DocReportTemplate))
        {
            DocGlobalHelper::handleException(funcName(), errMsg);
        }

        if (!element.args().record())
        {
            DocGlobalHelper::handleException(funcName(), errMsg);
        }

        selectedTemplate = element.args().record();

        // Instance security manager.
        DocDataSecurityManager dataSecurityManager = new DocDataSecurityManager();

        if (!dataSecurityManager.checkDataSecurityConstraints(
                DocDataSecurityTemplateAction::Preview,
                DocReportTable::find(selectedTemplate.Report).ReportId,
                selectedTemplate.TemplateId,
                selectedTemplate.CompanyId,
                selectedTemplate.LanguageID,
                true))
        {
            DocGlobalHelper::handleException(funcName(), "@DocentricAX3:PreviewTemplateNoPermissions");
        }

        // Check if template file is attached to the selected template
        if (!selectedTemplate.isFileAttached())
        {
            DocGlobalHelper::handleException(funcName(), "@DocentricAX3:PreviewTemplateNoFileAttached");
        }

        PreviewLanguageId.text(selectedTemplate.LanguageID);
        PreviewCompanyId.visible(false);

        // The preview company is shown only if PDF security settings exist for the selected report
        if (DocReportPdfSignatureSettings::existForReport(selectedTemplate.Report))
        {
            PreviewCompanyId.visible(true);

            DocReportPdfSignatureSettings pdfSignatureSettings = DocReportPdfSignatureSettings::findByReportAndCompany(selectedTemplate.Report, selectedTemplate.CompanyId);
            if (pdfSignatureSettings)
            {
                PreviewCompanyId.text(selectedTemplate.CompanyId);
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    /// <summary>
    /// Closes the form.
    /// </summary>
    public void close()
    {
        super();

        if (this.closedOk())
        {
            // Generate template preview
            selectedTemplate.createPreview(PreviewCompanyId.text(), PreviewLanguageId.text());
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>PreviewCompanyId</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>lookup</Name>
						<Source><![CDATA[
        /// <summary>
        /// Calls lookup control.
        /// </summary>
        public void lookup()
        {
            SysTableLookup lookup = SysTableLookup::newParameters(tableNum(DataArea), this);
            Query lookupQuery = new Query();
            QueryBuildDataSource qbdsDataArea = lookupQuery.addDataSource(tableNum(DataArea));

            if (!DocReportPdfSignatureSettings::findByReportAndCompany(selectedTemplate.Report, 'DAT'))
            {
                QueryBuildDataSource qbdsPdfSignatureSettings = qbdsDataArea.addDataSource(tableNum(DocReportPdfSignatureSettings));
                qbdsPdfSignatureSettings.joinMode(JoinMode::ExistsJoin);
                qbdsPdfSignatureSettings.relations(false);
                qbdsPdfSignatureSettings.addLink(fieldNum(DataArea, id), fieldNum(DocReportPdfSignatureSettings, CompanyId));
                qbdsPdfSignatureSettings.addRange(fieldNum(DocReportPdfSignatureSettings, Report)).value(queryValue(selectedTemplate.Report));
            }

            lookup.parmQuery(lookupQuery);

            lookup.addLookupfield(fieldNum(DataArea, Id), true);
            lookup.addLookupfield(fieldNum(DataArea, Name));

            lookup.performFormLookup();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@DocentricAX3:PreviewTemplateSelectLanguageAndCompany</Caption>
		<Pattern xmlns="">DropDialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<Style xmlns="">DropDialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>DialogContent</Name>
				<ElementPosition>715827882</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PreviewLanguageId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1288490187</ElementPosition>
						<HelpText>@DocentricAX3:PreviewTemplatePreviewLanguageHelp</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>LanguageId</ExtendedDataType>
						<Label>@DocentricAX3:PreviewTemplatePreviewLanguage</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>PreviewCompanyId</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<HelpText>@DocentricAX3:PreviewTemplateCertificateCompanyHelp</HelpText>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<ExtendedDataType>CompanyId</ExtendedDataType>
						<Label>@DocentricAX3:PreviewTemplateCertificateCompany</Label>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1073741822</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OKButton</Name>
						<ElementPosition>1431655764</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>