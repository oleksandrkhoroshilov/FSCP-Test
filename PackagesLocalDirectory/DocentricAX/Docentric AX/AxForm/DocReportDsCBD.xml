<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DocReportDsCBD</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
using Microsoft.Dynamics365.LocalizationFramework;

[Form]
public class DocReportDsCBD extends FormRun
{
    RecId callingReportRecId;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        #SysSystemDefinedButtons

        super();

        // Hide the Attach button.
        FormCommandButtonControl button = this.control(this.controlId(#SystemDefinedAttachButton)) as FormCommandButtonControl;
        if (button)
        {
            button.visible(false);
        }

        // Hide the Filter button.
        button = this.control(this.controlId(#SystemDefinedShowFiltersButton)) as FormCommandButtonControl;
        if (button)
        {
            button.visible(false);
        }

        if (element.args() == null ||
            element.args().dataset() != tableNum(DocReportTable) ||
            !element.args().record())
        {
            throw error('Form has to be called from the Docentric reports form');
        }

        // If there is no valid licence, user will be warned, but we will still let him
        // set up CBD. Later in the pipeline we will throw the exception
        // if CBD is used, but the license is invalid.
        DocLicenseMng::checkLicenseUI(DocConstant::FeatureCBD, this.name());

        callingReportRecId = element.args().record().RecId;


    }

]]></Source>
			</Method>
			<Method>
				<Name>close</Name>
				<Source><![CDATA[
    public void close()
    {
        #Task

        super();

        FormRun callerFormRun = element.args().caller();
        if (callerFormRun)
        {
            callerFormRun.task(#taskRefresh);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSolutionVersion</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the latest version of <c>ERSolutionVersionTable</c> record for the selected <c>ERModelMapping</c> value.
    /// The returned latest version depends on RunDraft flag in <c>ERSolutionTable</c>:
    ///     - if RunDraft is False, the latest version in status Completed or Shared is returned
    ///     - if RunDraft is True, the latest version in status Draft is returned
    ///
    /// NOTE: This method is required by jumpRef method on ERModelMapping field.
    ///       The method signature is copied from the form ERModelMappingTable.
    /// </summary>
    /// <returns>The latest version of <c>ERSolutionVersionTable</c> record.</returns>
    public ERSolutionVersionTable getSolutionVersion()
    {
        ERSolutionVersionTable erSolutionVersionTable;

        if (DocReportTable.ERModelMapping)
        {
            ERModelMappingTable erModelMappingTable = ERModelMappingTable::find(DocReportTable.ERModelMapping);
            if (erModelMappingTable)
            {
                ERSolutionTable erSolutionTable = erModelMappingTable.ERSolutionTable();
                if (erSolutionTable)
                {
                    erSolutionVersionTable = erSolutionTable.getLatestVersion(!erSolutionTable.RunDraft);
                }
            }
        }
        return erSolutionVersionTable;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getModelMappingVersionTable</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get the latest version of <c>ERModelMappingVersionTable</c> record for the selected <c>ERModelMapping</c> value.
    ///
    /// NOTE: This method is required by jumpRef method on ERModelMapping field.
    ///       The method signature is copied from the form ERModelMappingTable.
    /// </summary>
    /// <returns>The latest version of <c>ERModelMappingVersionTable</c> record.</returns>
    public ERModelMappingVersionTable getModelMappingVersionTable()
    {
        ERModelMappingVersionTable erModelMappingVersionTable;

        if (DocReportTable.ERModelMapping)
        {
            ERModelMappingTable erModelMappingTable = ERModelMappingTable::find(DocReportTable.ERModelMapping);
            if (erModelMappingTable)
            {
                erModelMappingVersionTable = erModelMappingTable.getLatestVersion();
            }
        }
        return erModelMappingVersionTable;
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>DocReportTable</Name>
				<Methods>
					<Method>
						<Name>parentTitleFields</Name>
						<Source><![CDATA[
        public TitleFields parentTitleFields(Common _record)
        {
            // Don't show parent title, it is ugly
            return '';
        }

]]></Source>
					</Method>
					<Method>
						<Name>active</Name>
						<Source><![CDATA[
        public int active()
        {
            int ret = super();

            // Set ER Data model to the related ER Model mapping model
            if (DocReportTable.ERModelMapping)
            {
                ERDataModel.value(DocReportTable.ERDataModelTable().RecId);
            }

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>ERModelMapping</DataField>
						<Methods>
							<Method>
								<Name>lookupReference</Name>
								<Source><![CDATA[
            public Common lookupReference(FormReferenceControl _formReferenceControl)
            {
                SysReferenceTableLookup lookup = SysReferenceTableLookup::newParameters(tableNum(ERModelMappingTable), _formReferenceControl);

                Query query = new Query();
                QueryBuildDataSource ds = query.addDataSource(tableNum(ERModelMappingTable));
                if (ERDataModel.value())
                {
                    ds.addRange(fieldNum(ERModelMappingTable, DataModel)).value(queryValue(ERDataModel.value()));
                }
                ds.addRange(fieldNum(ERModelMappingTable, Direction)).value(queryValue(ModelMappingDirection::ToModel));
                ds.addRange(fieldNum(ERModelMappingTable, IsDeleted)).value(queryValue(NoYes::No));

                lookup.parmQuery(query);
                lookup.addLookupfield(fieldNum(ERModelMappingTable, Name));
                lookup.addLookupfield(fieldNum(ERModelMappingTable, Description));
                return lookup.performFormLookup();
            }

]]></Source>
							</Method>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            public void jumpRef()
            {
                ERModelMappingTable erModelMappingTable = ERModelMappingTable::find(DocReportTable.ERModelMapping);

                Args args = new Args();
                args.record(erModelMappingTable);
                args.caller(element);

                // This call requires methods getSolutionVersion and getModelMappingVersionTable defined on this form
                new MenuFunction(menuItemDisplayStr(ERModelMappingDesigner), MenuItemType::Display).run(args);
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>ERDataModel</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();
    
            // Reset ER Model mapping, if ER Data model was changed
            DocReportTable.ERModelMapping = 0;

            // If ER Data model is set, the ER Model mapping field has to be mandatory
            DocReportTable_ds.object(fieldNum(DocReportTable, ERModelMapping)).mandatory(ERDataModel.value());

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>jumpRef</Name>
						<Source><![CDATA[
        public void jumpRef()
        {
            ERSolutionVersionTable erSolutionVersionTable;

            ERDataModelTable erDataModelTable = ERDataModelTable::find(ERDataModel.value());
            if (erDataModelTable)
            {
                ERSolutionTable erSolutionTable = ERSolutionTable::find(erDataModelTable.Solution);
                if (erSolutionTable)
                {
                    // If RunDraft is False, the latest version in status Completed or Shared is returned
                    // otherwise the latest version in status Draft is returned
                    erSolutionVersionTable = erSolutionTable.getLatestVersion(!erSolutionTable.RunDraft);
                }
            }

            Args args = new Args();
            args.record(erSolutionVersionTable);
    
            new MenuFunction(menuItemDisplayStr(ERDataModelDesigner), MenuItemType::Display).run(args);
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>DocReportTable_ERModelMapping</Name>
				<Type>ReferenceGroup</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            // Set ER Data model to the related ER Model mapping model
            ERDataModel.value(DocReportTable.ERDataModelTable().RecId);

            // If ER Data model is set, the ER Model mapping field has to be mandatory
            DocReportTable_ds.object(fieldNum(DocReportTable, ERModelMapping)).mandatory(ERDataModel.value());
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>DocReportTable</Name>
			<Table>DocReportTable</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ArchivingEmailAttachmentsOption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ArchivingReportParamsOption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ArchivingReportsOption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DataSourceProviderClassName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailAccountDisplayName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailBounceToAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailDeliveryReceiptCondition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailEmailingMode</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailMsgPriority</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailReadReceiptAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailReplyToAddress</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ERModelDataToIncludeInDS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ERModelMapping</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GenerateXmlDsWithReportRun</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GenerateXmlDsWithReportRunSettings</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeAllDisplayMethodsInDS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeCompanyLogoInDS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeDocuBrandingInDSSRS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeHiddenParamsInDS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeReportDefinedDispMethodsInDS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeReportDefinedFieldsInDS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeSystemFieldsInDSSRS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsActiveSRS</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsValid</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>LastValidationDatetime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportDefaultCaption</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportDescription</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportGroup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ReportUsageType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SRSOnlyReportName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SRSReportDesignName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SRSReportName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SuppressRDPExecution</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseDocentricPreviewerForSrs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseDocentricPreviewForSrs</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UseOnlyWithPrintDestinations</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ValidationErrorList</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<BackgroundColor xmlns="">WindowBackground</BackgroundColor>
		<Caption xmlns="">@DocentricAX3:CBDCaption</Caption>
		<DataSource xmlns="">DocReportTable</DataSource>
		<DialogSize xmlns="">Medium</DialogSize>
		<Frame xmlns="">Dialog</Frame>
		<HideToolbar xmlns="">Yes</HideToolbar>
		<Pattern xmlns="">SimpleDetails-FastTabsContainer</Pattern>
		<PatternVersion xmlns="">1.4</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<ShowDeleteButton xmlns="">No</ShowDeleteButton>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<StatusBarStyle xmlns="">SimpleWithoutClose</StatusBarStyle>
		<TitleDataSource xmlns="">DocReportTable</TitleDataSource>
		<WindowResize xmlns="">Dynamic</WindowResize>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>HeaderGroup</Name>
				<AllowEdit>No</AllowEdit>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>DocReportTable_ReportId</Name>
						<ExtendedStyle>informationalField</ExtendedStyle>
						<Skip>Yes</Skip>
						<Type>String</Type>
						<FormControlExtension
							i:nil="true" />
						<DataField>ReportId</DataField>
						<DataSource>DocReportTable</DataSource>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormTabControl">
				<Name>BodyTab</Name>
				<Type>Tab</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>CBDDataSource</Name>
						<Pattern>ToolbarFields</Pattern>
						<PatternVersion>1.1</PatternVersion>
						<Type>TabPage</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormActionPaneControl">
								<Name>CBDDataSourceActionPane</Name>
								<Type>ActionPane</Type>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormActionPaneTabControl">
										<Name>ERConfigurationActionPaneTab</Name>
										<Type>ActionPaneTab</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls>
											<AxFormControl xmlns=""
												i:type="AxFormButtonGroupControl">
												<Name>ERConfigurationButtonGroup</Name>
												<Type>ButtonGroup</Type>
												<FormControlExtension
													i:nil="true" />
												<Controls>
													<AxFormControl xmlns=""
														i:type="AxFormMenuFunctionButtonControl">
														<Name>ERSolutionTable</Name>
														<HelpText>@DocentricAX3:ERConfigurationHelp</HelpText>
														<Type>MenuFunctionButton</Type>
														<FormControlExtension
															i:nil="true" />
														<MenuItemName>ERSolutionTable</MenuItemName>
														<Text>@DocentricAX3:ERConfiguration</Text>
													</AxFormControl>
												</Controls>
											</AxFormControl>
										</Controls>
									</AxFormControl>
								</Controls>
								<Style>Strip</Style>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormGroupControl">
								<Name>CBDDataSourceGroup</Name>
								<Pattern>FieldsFieldGroups</Pattern>
								<PatternVersion>1.1</PatternVersion>
								<Type>Group</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Controls>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>ERDataModel</Name>
										<AutoDeclaration>Yes</AutoDeclaration>
										<HelpText>@DocentricAX3:ERDataModelIDHelp</HelpText>
										<NeededPermission>Update</NeededPermission>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<ExtendedDataType>ERDataModelID</ExtendedDataType>
										<Label>@DocentricAX3:ERDataModel</Label>
										<ReplacementFieldGroup>Name</ReplacementFieldGroup>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormReferenceGroupControl">
										<Name>DocReportTable_ERModelMapping</Name>
										<HelpText>@DocentricAX3:ERModelMappingCBDHelp</HelpText>
										<Type>ReferenceGroup</Type>
										<FormControlExtension
											i:nil="true" />
										<Controls />
										<DataSource>DocReportTable</DataSource>
										<ReferenceField>ERModelMapping</ReferenceField>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormCheckBoxControl">
										<Name>HasEnabledErTemplates</Name>
										<HelpText>@DocentricAX3:ReportHasEnabledErTemplatesHelp</HelpText>
										<Skip>Yes</Skip>
										<Type>CheckBox</Type>
										<FormControlExtension
											i:nil="true" />
										<CacheDataMethod>Yes</CacheDataMethod>
										<DataMethod>hasAnyEnabledERBasedTemplate</DataMethod>
										<DataSource>DocReportTable</DataSource>
										<Label>@DocentricAX3:ReportHasEnabledErTemplates</Label>
									</AxFormControl>
									<AxFormControl xmlns=""
										i:type="AxFormComboBoxControl">
										<Name>DocReportTable_ERModelDataToIncludeInDS</Name>
										<Type>ComboBox</Type>
										<FormControlExtension
											i:nil="true" />
										<DataField>ERModelDataToIncludeInDS</DataField>
										<DataSource>DocReportTable</DataSource>
										<Items />
									</AxFormControl>
								</Controls>
								<ColumnsMode>Fill</ColumnsMode>
								<FrameType>None</FrameType>
							</AxFormControl>
						</Controls>
						<Caption>@DocentricAX3:CbdDataSource</Caption>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormTabPageControl">
						<Name>CBDInstructions</Name>
						<Pattern>FillText</Pattern>
						<PatternVersion>UX7 1.0</PatternVersion>
						<Type>TabPage</Type>
						<WidthMode>SizeToAvailable</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStaticTextControl">
								<Name>CBDInstructionText</Name>
								<HeightMode>SizeToAvailable</HeightMode>
								<Skip>Yes</Skip>
								<Type>StaticText</Type>
								<WidthMode>SizeToAvailable</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@DocentricAX3:CbdDataSourceInstructions</Text>
							</AxFormControl>
						</Controls>
						<Caption>@DocentricAX3:CBDDataSourceInstructionsCaption</Caption>
						<FastTabExpanded>Yes</FastTabExpanded>
					</AxFormControl>
				</Controls>
				<Style>FastTabs</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>