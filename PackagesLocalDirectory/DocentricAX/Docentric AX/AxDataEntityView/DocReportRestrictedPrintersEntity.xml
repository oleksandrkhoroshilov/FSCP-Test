<?xml version="1.0" encoding="utf-8"?>
<AxDataEntityView xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocReportRestrictedPrintersEntity</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DocReportRestrictedPrintersEntity extends common
{

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>postLoad</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is invoked by the framework as a first step both during Export and Import.
    /// </summary>
    public void postLoad()
    {
        SysCorpNetPrinters sysCorpNetPrinters;

        super();

        if (!this.PrinterPath)
        {
            select firstonly sysCorpNetPrinters
                where sysCorpNetPrinters.PrinterName == this.PrinterName;

            if (sysCorpNetPrinters.RecId)
            {
                this.PrinterPath = sysCorpNetPrinters.PrinterPath;
            }
        }

    }

]]></Source>
			</Method>
			<Method>
				<Name>postGetStagingData</Name>
				<Source><![CDATA[
    public static void postGetStagingData(DMFDefinitionGroupExecution _dmfDefinitionGroupExecution)
    {
        // Printer name can be modified in the network printers form, so it is possible 
        // that the same PrinterPath has PrinterName A in the source environment and PrinterName B 
        // in the target environment.
        // If that is the case, try to find the matching PrinterPath and its PrinterName from SysCorpNetPrinters,
        // and update the PrinterName value in the staging data.

        DocReportRestrictedPrintersStaging  reportRestrictedPrintersStaging;
        SysCorpNetPrinters sysCorpNetPrintersName, sysCorpNetPrintersPath;
        
        // This method is executed once during the import, so check the whole staging table in one run.
        while select forupdate reportRestrictedPrintersStaging
                where reportRestrictedPrintersStaging.ExecutionId == _dmfDefinitionGroupExecution.ExecutionId
                    &&  reportRestrictedPrintersStaging.DefinitionGroup == _dmfDefinitionGroupExecution.DefinitionGroup
            outer join RecId from sysCorpNetPrintersName 
                where sysCorpNetPrintersName.PrinterName == reportRestrictedPrintersStaging.PrinterName
            outer join RecId, PrinterName from sysCorpNetPrintersPath 
                where sysCorpNetPrintersPath.PrinterPath  == reportRestrictedPrintersStaging.PrinterPath
        {
            if (!sysCorpNetPrintersName.RecId)
            {
                // Network printer with the same name not found
                if (sysCorpNetPrintersPath.RecId)
                {
                    // Network printer with the same Printer path found, use its Printer name
                    ttsbegin;

                    reportRestrictedPrintersStaging.PrinterName = sysCorpNetPrintersPath.PrinterName;
                    reportRestrictedPrintersStaging.update();

                    ttscommit;
                }
                else
                {
                    // DO NOTHING.
                    // If Printer is not found based on PrinterName/PrinterPath values,
                    // framework will set the correct error message.
                }
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>mapEntityToDataSource</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is invoked by the framework during Import. It is executed once for each entity data source.
    /// It is first executed for the top-level data source (DocRestrictedPrinterInfo) and then 
    /// for the related data source (DocRestrictedPrinter).
    /// </summary>
    public void mapEntityToDataSource(DataEntityRuntimeContext _entityCtx, DataEntityDataSourceRuntimeContext _dataSourceCtx)
    {
        DocReportRestrictedPrintersEntity entity = _entityCtx.getEntityRecord() as DocReportRestrictedPrintersEntity;

        changecompany (entity.DataArea)
        {
            // Don't import DocRestrictedPrinter entries for the non-existent Docentric reports
            if (_dataSourceCtx.name() == dataEntityDataSourceStr(DocReportRestrictedPrintersEntity, DocRestrictedPrinter) && !entity.ReportId)
            {
                _dataSourceCtx.setDatabaseOperation(DataEntityDatabaseOperation::None);
            }

            super(_entityCtx, _dataSourceCtx);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DocentricAX4:DocReportRestrictedPrintersEntityDeveloperDocumentation</DeveloperDocumentation>
	<Label>@DocentricAX4:DocReportRestrictedPrintersEntityCaption</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<DataManagementEnabled>Yes</DataManagementEnabled>
	<DataManagementStagingTable>DocReportRestrictedPrintersStaging</DataManagementStagingTable>
	<EntityCategory>Parameters</EntityCategory>
	<IsPublic>Yes</IsPublic>
	<PrimaryKey>EntityKey</PrimaryKey>
	<PublicCollectionName>ReportRestrictedPrinters</PublicCollectionName>
	<PublicEntityName>ReportRestrictedPrinters</PublicEntityName>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>DataArea</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrinterName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PrinterPath</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RestrictForNewReports</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>RestrictForUnregisteredReports</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>PrinterName</Name>
			<DataField>PrinterName</DataField>
			<DataSource>DocRestrictedPrinterInfo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RestrictForNewReports</Name>
			<DataField>RestrictForNewReports</DataField>
			<DataSource>DocRestrictedPrinterInfo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>RestrictForUnregisteredReports</Name>
			<DataField>RestrictForUnregisteredReports</DataField>
			<DataSource>DocRestrictedPrinterInfo</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>ReportId</Name>
			<DataField>ReportId</DataField>
			<DataSource>DocRestrictedPrinter</DataSource>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewUnmappedFieldString">
			<Name>PrinterPath</Name>
			<ExtendedDataType>FilePath</ExtendedDataType>
			<IsComputedField>No</IsComputedField>
		</AxDataEntityViewField>
		<AxDataEntityViewField xmlns=""
			i:type="AxDataEntityViewMappedField">
			<Name>DataArea</Name>
			<AllowEdit>Yes</AllowEdit>
			<AllowEditOnCreate>Yes</AllowEditOnCreate>
			<Mandatory>Yes</Mandatory>
			<DataField>DataAreaId</DataField>
			<DataSource>DocRestrictedPrinterInfo</DataSource>
		</AxDataEntityViewField>
	</Fields>
	<Keys>
		<AxDataEntityViewKey>
			<Name>EntityKey</Name>
			<Fields>
				<AxDataEntityViewKeyField>
					<DataField>PrinterName</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>ReportId</DataField>
				</AxDataEntityViewKeyField>
				<AxDataEntityViewKeyField>
					<DataField>DataArea</DataField>
				</AxDataEntityViewKeyField>
			</Fields>
		</AxDataEntityViewKey>
	</Keys>
	<Mappings />
	<Ranges />
	<Relations />
	<StateMachines />
	<ViewMetadata>
		<Name>Metadata</Name>
		<SourceCode>
			<Methods>
				<Method>
					<Name>classDeclaration</Name>
					<Source><![CDATA[
[Query]
public class Metadata extends QueryRun
{
}
]]></Source>
				</Method>
			</Methods>
		</SourceCode>
		<DataSources>
			<AxQuerySimpleRootDataSource>
				<Name>DocRestrictedPrinterInfo</Name>
				<DynamicFields>Yes</DynamicFields>
				<Table>DocRestrictedPrinterInfo</Table>
				<DataSources>
					<AxQuerySimpleEmbeddedDataSource>
						<Name>DocRestrictedPrinter</Name>
						<DynamicFields>Yes</DynamicFields>
						<Table>DocRestrictedPrinter</Table>
						<DataSources />
						<DerivedDataSources />
						<Fields />
						<Ranges />
						<JoinMode>OuterJoin</JoinMode>
						<Relations>
							<AxQuerySimpleDataSourceRelation>
								<Name>QueryDataSourceRelation1</Name>
								<Field>PrinterName</Field>
								<JoinDataSource>DocRestrictedPrinterInfo</JoinDataSource>
								<RelatedField>PrinterName</RelatedField>
							</AxQuerySimpleDataSourceRelation>
						</Relations>
					</AxQuerySimpleEmbeddedDataSource>
				</DataSources>
				<DerivedDataSources />
				<Fields />
				<Ranges />
				<GroupBy />
				<Having />
				<OrderBy />
			</AxQuerySimpleRootDataSource>
		</DataSources>
	</ViewMetadata>
</AxDataEntityView>