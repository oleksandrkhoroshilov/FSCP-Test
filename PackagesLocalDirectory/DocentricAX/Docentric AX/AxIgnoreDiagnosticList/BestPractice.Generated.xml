<?xml version="1.0" encoding="utf-8"?>
<IgnoreDiagnostics xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!-- 
	*************************************************************************************************************************
	*** START OF XML SCHEMA
	*************************************************************************************************************************
	-->
  <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" id="defaultSchema" attributeFormDefault="unqualified" elementFormDefault="qualified">
    <xs:element name="Name" type="xsd:string" />
    <xs:element name="Items">
      <xs:complexType>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Diagnostic">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="DiagnosticType" type="xsd:string" />
                <xs:element name="Severity" type="xsd:string" />
                <xs:element name="Path" type="xsd:string" />
                <xs:element name="Moniker" type="xsd:string" />
                <xs:element name="Message" type="xsd:string" />
                <xs:element name="Justification" type="xsd:string" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  </xs:schema>
  <!-- 
	*************************************************************************************************************************
	*** START OF XML BODY
	*************************************************************************************************************************
	-->
  <Name>BestPractice.Generated</Name>
  <Items>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://View/DocPrintMgmtSettingsEntityHelperView/Method/compHasQuery</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintMgmtSettingsEntityHelperView.compHasQuery'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://View/DocProjProposalAllLinesView/Method/calcProposalLineTableId</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocProjProposalAllLinesView.calcProposalLineTableId'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://View/DocDefaultPrintersView/Method/calcDefaultPrinterEffective</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDefaultPrintersView.calcDefaultPrinterEffective'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://View/DocDefaultPrintersView/Method/findByUserId</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDefaultPrintersView.findByUserId'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Form/DocPrinterSelector/Method/close</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call callerForm.parmPrinterList_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Form/DocSharePointFolderSelection/Method/loadFolders</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _spFolderSearchOptions in method loadFolders is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Form/DocSharePointFolderSelection/Method/folderSelected</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _treeItem in method folderSelected is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Form/DocSharePointFolderSelection/Method/folderSelected</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _treeItem in method folderSelected is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Form/DocUserPrinterSettings/Method/close</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call callerFormRun.showUserDefaultPrinter is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Form/DocPrintMgmtUtilsFieldGroupSelector/Method/closeOk</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call callerFormRun.setFieldGroupsVisibility is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Form/DocReportTemplateSelector/Method/closeSelect</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call callerForm.SelectedTemplate_DC_OnModified_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Form/DocLabelMultilineDialog/Method/closeOk</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call callerFormRun.setTranslation is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Form/DocSharePointSecuritySettings/Method/close</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call callerForm.refreshSharePointSecurityInfo is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocRestrictedPrinterInfo/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocRestrictedPrinterInfo.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocRestrictedPrinterInfo/Method/findByPrinterName</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocRestrictedPrinterInfo.findByPrinterName'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPrintMgmtUtilsTmp/TableFieldString/DestDocSaveToArchiveDocuType</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'DocuTypeId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPrintMgmtUtilsTmp/TableFieldString/DestDocFileAttachmentDocumentType</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'DocuTypeId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPrintMgmtUtilsTmp</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field DestDocSaveToArchiveDocuType of table DocPrintMgmtUtilsTmp. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPrintMgmtUtilsTmp</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field DestDocFileAttachmentDocumentType of table DocPrintMgmtUtilsTmp. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocEmailTokensPDRedirection/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailTokensPDRedirection.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocEmailTokensPDRedirection/Method/findByReportAndCompany</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailTokensPDRedirection.findByReportAndCompany'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportEmailTemplate/Method/getEmailTemplateSnippet</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _languageId in method getEmailTemplateSnippet is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocElectronicSignatureAppearance/TableFieldString/SignatureLanguageId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'LanguageId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocElectronicSignatureAppearance</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field SignatureLanguageId of table DocElectronicSignatureAppearance. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocElectronicSignatureAppearance/Method/saveSignatureAppearancePreview</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _signaturePreviewStream in method saveSignatureAppearancePreview is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocElectronicSignatureAppearance/Method/DocElectronicSignatureAppearance_onInserted</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter 'e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocElectronicSignatureAppearance/Method/DocElectronicSignatureAppearance_onUpdated</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter 'e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocParametersCompanySetting/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocParametersCompanySetting.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocParametersCompanySetting/Method/findSettingName</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocParametersCompanySetting.findSettingName'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocEmailAccount/Method/passwordEdit</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _value in method passwordEdit is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportCompanySetting/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportCompanySetting.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportCompanySetting/Method/findSettingName</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportCompanySetting.findSettingName'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserPrinterSettings/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserPrinterSettings.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserPrinterSettings/Method/findUserId</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserPrinterSettings.findUserId'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTable/Method/existsReportId</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTable.existsReportId'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTable/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTable.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTable/Method/exist</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTable.exist'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTable/Method/insertSrsReport</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTable.insertSrsReport'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTable/Method/isDocentricSrsReport</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTable.isDocentricSrsReport'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTable/Method/updateReportTemplateStorageSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTable.updateReportTemplateStorageSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTable/Method/updateDsProviderClass</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTable.updateDsProviderClass'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTable/Method/deleteReports</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTable.deleteReports'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTable/Method/shouldArchiveReportInOriginalFormat</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTable.shouldArchiveReportInOriginalFormat'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTable/Method/shouldArchiveReportEmailAttachments</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTable.shouldArchiveReportEmailAttachments'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocElectronicSignatureAppearanceStaging/TableFieldString/SignatureLanguageId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'LanguageId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocElectronicSignatureAppearanceStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field SignatureLanguageId of table DocElectronicSignatureAppearanceStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportAttachmentSelectorTmp/TableFieldString/TypeId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'DocuTypeId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportAttachmentSelectorTmp</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field TypeId of table DocReportAttachmentSelectorTmp. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportAttachmentSelectorTmp/Method/fillTable</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportAttachmentSelectorTmp.fillTable'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserPrinterSelectorTmp/Method/fillTableWithUnassignedPrintersForUser</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserPrinterSelectorTmp.fillTableWithUnassignedPrintersForUser'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserPrinterSelectorTmp/Method/fillTableWithAssignedPrintersForUser</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserPrinterSelectorTmp.fillTableWithAssignedPrintersForUser'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserPrinterSelectorTmp/Method/fillTableWithAllPrinters</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserPrinterSelectorTmp.fillTableWithAllPrinters'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserPrinterSelectorTmp/Method/fillTableWithUnassignedUsersForPrinter</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserPrinterSelectorTmp.fillTableWithUnassignedUsersForPrinter'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserPrinterSelectorTmp/Method/fillTableWithAssignedUsersForPrinter</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserPrinterSelectorTmp.fillTableWithAssignedUsersForPrinter'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserPrinterSelectorTmp/Method/fillTableWithAllUsers</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserPrinterSelectorTmp.fillTableWithAllUsers'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserPrinterSelectorTmp/Method/fillTableWithAllUserRoles</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserPrinterSelectorTmp.fillTableWithAllUserRoles'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserPrinterSelectorTmp/Method/fillTableWithPrintersActiveAndAllowedForUser</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserPrinterSelectorTmp.fillTableWithPrintersActiveAndAllowedForUser'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPrintJobHeader/Method/PrintJobHeader_onDeleted</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocLabelSelectorTmp/Method/fillTableWithUnusedLanguagesForLabel</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocLabelSelectorTmp.fillTableWithUnusedLanguagesForLabel'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocLabelSelectorTmp/Method/fillTableWithUsedLanguagesForLabel</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocLabelSelectorTmp.fillTableWithUsedLanguagesForLabel'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocLabelSelectorTmp/Method/fillTableWithAllLanguages</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocLabelSelectorTmp.fillTableWithAllLanguages'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocParameters/Method/printDestShowTemplateEdit</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _value in method printDestShowTemplateEdit is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTemplate/Method/defaultDefaultTemplateForReport</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTemplate.defaultDefaultTemplateForReport'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTemplate/Method/enableTemplate</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTemplate.enableTemplate'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTemplate/Method/existsDefaultTemplateForReport</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTemplate.existsDefaultTemplateForReport'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTemplate/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTemplate.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTemplate/Method/detachTemplateFile</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTemplate.detachTemplateFile'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTemplate/Method/deleteTemplateFile_FileSystem</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTemplate.deleteTemplateFile_FileSystem'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTemplate/Method/deleteTemplate</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTemplate.deleteTemplate'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocGlobalPrinterSettings/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocGlobalPrinterSettings.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPrintMgmtSettingsStaging/TableFieldString/DestDocSaveToArchiveDocuType</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'DocuTypeId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPrintMgmtSettingsStaging/TableFieldString/DestDocFileAttachmentDocumentType</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'DocuTypeId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPrintMgmtSettingsStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field DestDocSaveToArchiveDocuType of table DocPrintMgmtSettingsStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPrintMgmtSettingsStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field DestDocFileAttachmentDocumentType of table DocPrintMgmtSettingsStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportUserDefinedPlaceholder/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportUserDefinedPlaceholder.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportUserDefinedPlaceholder/Method/modifiedField</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call ds.updateResult is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserGroupPrinterSettings/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserGroupPrinterSettings.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserGroupPrinterSettings/Method/findUserGroupId</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserGroupPrinterSettings.findUserGroupId'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocLabelGroup/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocLabelGroup.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocLabelGroup/Method/findByGroup</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocLabelGroup.findByGroup'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocAzureStorageAccount/Method/connectionStringEdit</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _value in method connectionStringEdit is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocAzureStorageAccount/Method/connectionStringEdit</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _value in method connectionStringEdit is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocAzureStorageAccount/Method/keyVaultCertificateRefEdit</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _value in method keyVaultCertificateRefEdit is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocOutgoingEmailLog/TableFieldInt64/EmailItemId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'SysEmailItemId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocOutgoingEmailLog</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field EmailItemId of table DocOutgoingEmailLog. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPrintArchiveSettings/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintArchiveSettings.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocInstallation/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocInstallation.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocInstallation/Method/ensureSingleRecord</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocInstallation.ensureSingleRecord'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocLabelCombinedStaging/TableFieldString/LanguageId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'LanguageId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocLabelCombinedStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field LanguageId of table DocLabelCombinedStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocLabelLanguage/TableFieldString/LanguageId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'LanguageId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTemplateSelectorTmp/Method/fillTableForReport</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTemplateSelectorTmp.fillTableForReport'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTemplateSelectorTmp/Method/fillTableForAllReports</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTemplateSelectorTmp.fillTableForAllReports'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTemplateSelectorTmp/Method/fillTableForReportType</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTemplateSelectorTmp.fillTableForReportType'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportTemplateSelectorTmp/Method/fillTable</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTemplateSelectorTmp.fillTable'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocAttachmentCategory/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocAttachmentCategory.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocAttachmentCategory/Method/findByCategory</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocAttachmentCategory.findByCategory'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportGroup/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportGroup.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportGroup/Method/findGroupId</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportGroup.findGroupId'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportGroup/Method/findOrInsert</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportGroup.findOrInsert'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPrintMgmtIdentificationTextStaging/TableFieldString/LanguageId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'LanguageId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPrintMgmtIdentificationTextStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field LanguageId of table DocPrintMgmtIdentificationTextStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPdfEncryptionSettings/Method/passwordEdit</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _value in method passwordEdit is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPdfEncryptionSettings/Method/conditionEdit</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _value in method conditionEdit is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPdfEncryptionSettings/Method/findByReportAndCompany</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'docPdfEncryptionSettings' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportPlaceholderTmp/Method/fillAllPlaceholders</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportPlaceholderTmp.fillAllPlaceholders'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocDocumentRoutingParameters/Method/editDRHistoryRetentionHours</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _retentionHours in method editDRHistoryRetentionHours is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocDocumentRoutingParameters/Method/editDRHistoryRetentionHours</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _retentionHours in method editDRHistoryRetentionHours is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocDocumentRoutingParameters/Method/editDRHistoryRetentionHours</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _retentionHours in method editDRHistoryRetentionHours is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocDocumentRoutingParameters/Method/editDRHistoryRetentionDays</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _retentionDays in method editDRHistoryRetentionDays is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocDocumentRoutingParameters/Method/editDRHistoryRetentionDays</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _retentionDays in method editDRHistoryRetentionDays is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocDocumentRoutingParameters/Method/editDRHistoryRetentionDays</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _retentionDays in method editDRHistoryRetentionDays is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocDocumentRoutingParameters/Method/exist</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDocumentRoutingParameters.exist'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocDocumentRoutingParameters/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDocumentRoutingParameters.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSharePointSecuritySettings/Method/sharePointPasswordEdit</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _value in method sharePointPasswordEdit is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserPrinter/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserPrinter.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserPrinter/Method/findByUserAndLineNum</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserPrinter.findByUserAndLineNum'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocUserPrinter/Method/findByUserAndPrinter</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserPrinter.findByUserAndPrinter'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocReportAttachmentRuleTmp/Method/find</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportAttachmentRuleTmp.find'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocPrinterSelectorTmp/Method/fillTableWithPrintersActiveAndAllowedForReportAndUser</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrinterSelectorTmp.fillTableWithPrintersActiveAndAllowedForReportAndUser'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocFeaturePreview/Method/isFeatureInPreviewMode</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFeaturePreview.isFeatureInPreviewMode'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocFeaturePreview/Method/populate</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFeaturePreview.populate'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocFeaturePreview/Method/applyFeaturePreviewToFormRun</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFeaturePreview.applyFeaturePreviewToFormRun'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportUserDefinedPlaceholderTemplateRegistration</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportUserDefinedPlaceholderTemplateRegistration'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderReportingBase</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderReportingBase'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrinterManager/Method/createNewDocumentRoutingJob</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _activityId in method createNewDocumentRoutingJob is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrinterManager/Method/sendDocumentContractToDocumentRouter</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrinterManager.sendDocumentContractToDocumentRouter'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrinterManager/Method/createNewDocumentRoutingJobWithConnection</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrinterManager.createNewDocumentRoutingJobWithConnection'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrinterManager/Method/createNewDocumentRoutingJob</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrinterManager.createNewDocumentRoutingJob'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrinterManager/Method/ensureDocumentRoutingHistoryCleanupBatchJob</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrinterManager.ensureDocumentRoutingHistoryCleanupBatchJob'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrinterManager</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrinterManager'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDocumentViewer/Method/MarkSelectedDocument</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter fileId in method MarkSelectedDocument is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocentricFileDownloadOnPremBuild</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocentricFileDownloadOnPremBuild'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderParamsReporting/Method/isPrintingSsrsBuiltInDesign</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderParamsReporting.isPrintingSsrsBuiltInDesign'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderParamsReporting</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderParamsReporting'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRestrictedPrinterUIHelper/Method/handleUIActions</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocRestrictedPrinterUIHelper.handleUIActions'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRestrictedPrinterUIHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocRestrictedPrinterUIHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileUploadOnPremHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileUploadOnPremHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintManager/Method/run</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintManager.run'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintManager</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintManager'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsPrinter/Method/createPrintJobSettingsXml</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsPrinter.createPrintJobSettingsXml'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsPrinter/Method/resolvePrinterPathAndPrinterId</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsPrinter.resolvePrinterPathAndPrinterId'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsPrinter/Method/resolvePrinterName</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsPrinter.resolvePrinterName'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsPrinter/Method/updatePrinterAndSetPrinterIdAndPath</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsPrinter.updatePrinterAndSetPrinterIdAndPath'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsPrinter/Method/escapePdfFilename</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsPrinter.escapePdfFilename'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsPrinter/Method/constructForDefaultPrinter</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsPrinter.constructForDefaultPrinter'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsPrinter/Method/create</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsPrinter.create'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsPrinter/Method/containsToken</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsPrinter.containsToken'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsPrinter/Method/formatPrinterName</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsPrinter.formatPrinterName'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsPrinter</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsPrinter'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuView_DC_EventHandler/Method/DocuRef_OnQueryExecuted</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuView_DC_EventHandler/Method/DocuRef_OnActivated</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuView_DC_EventHandler/Method/DocuValue_OnActivated</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuView_DC_EventHandler/Method/CategoryId_DC_OnLookup</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuView_DC_EventHandler/Method/LanguageId_DC_OnLookup</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuView_DC_EventHandler/Method/DocAttachmentSettings_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuView_DC_EventHandler/Method/DocuRef_OnQueryExecuted</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocuRef_OnQueryExecuted_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuView_DC_EventHandler/Method/DocuRef_OnActivated</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocuRef_OnActivated_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuView_DC_EventHandler/Method/DocuValue_OnActivated</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocuValue_OnActivated_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuView_DC_EventHandler/Method/CategoryId_DC_OnLookup</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.CategoryId_DC_OnLookup_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuView_DC_EventHandler/Method/LanguageId_DC_OnLookup</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.LanguageId_DC_OnLookup_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuView_DC_EventHandler/Method/DocAttachmentSettings_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocReportAttachmentDetail_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocElectronicSignatureAppearanceSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocElectronicSignatureAppearanceSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysOutgoingEmailTableForm_DC_EventHandler/Method/OutgoingEmail_OnInitialized</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysOutgoingEmailTableForm_DC_EventHandler/Method/OutgoingEmail_OnActivated</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysOutgoingEmailTableForm_DC_EventHandler/Method/Download_DC_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysOutgoingEmailTableForm_DC_EventHandler/Method/EmailStatusFilter_OnModified</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysOutgoingEmailTableForm_DC_EventHandler/Method/OutgoingEmail_OnInitialized</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.OutgoingEmail_OnInitialized_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysOutgoingEmailTableForm_DC_EventHandler/Method/OutgoingEmail_OnActivated</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.OutgoingEmail_OnActivated_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysOutgoingEmailTableForm_DC_EventHandler/Method/Download_DC_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.Download_DC_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysOutgoingEmailTableForm_DC_EventHandler/Method/EmailStatusFilter_OnModified</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EmailStatusFilter_OnModified_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocAzureBlobHelper/Method/getAzureBlobPath</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _azureBlobPath in method getAzureBlobPath is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportProformaDataSource</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportProformaDataSource'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderAttHtmlEditorHelper/Method/collectAttributes</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderAttHtmlEditorHelper.collectAttributes'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderAttHtmlEditorHelper/Method/collectAttributesForClass</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderAttHtmlEditorHelper.collectAttributesForClass'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderAttHtmlEditorHelper/Method/collectUserDefinedPlaceholders</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderAttHtmlEditorHelper.collectUserDefinedPlaceholders'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderAttHtmlEditorHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderAttHtmlEditorHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportToScreenExecutionInfo</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportToScreenExecutionInfo'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/createAndAppendDimensionComplexTypes</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.createAndAppendDimensionComplexTypes'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/createDsPackageDataSection</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.createDsPackageDataSection'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/createDsPackageDataSectionDataSchema</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.createDsPackageDataSectionDataSchema'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/createDsPackageXmlAttribute</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.createDsPackageXmlAttribute'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/createDsPackageXmlElement</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.createDsPackageXmlElement'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/createEnumXsdElement</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.createEnumXsdElement'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/createUserDefEnumXsdElement</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.createUserDefEnumXsdElement'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/createXmlAttrFromEdt</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.createXmlAttrFromEdt'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/createXmlAttrFromValue</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.createXmlAttrFromValue'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/createXsdAnnotation</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.createXsdAnnotation'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/createXsdAnnotationLabel</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.createXsdAnnotationLabel'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/createXsdAttrElementFromEdt</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.createXsdAttrElementFromEdt'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/createXsdAttrElementFromValue</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.createXsdAttrElementFromValue'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/createXsdChoiceElement</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.createXsdChoiceElement'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/selectDsPackageXmlNode</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.selectDsPackageXmlNode'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper/Method/selectXsdElement</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper.selectXsdElement'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportAttachmentRule/Method/create</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportAttachmentRule.create'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportAttachmentRule/Method/isDescriptionValid</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportAttachmentRule.isDescriptionValid'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportAttachmentRule/Method/validate</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportAttachmentRule.validate'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDefaultPrinterUIHelper/Method/initDefaultPrinter</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDefaultPrinterUIHelper.initDefaultPrinter'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDefaultPrinterUIHelper/Method/handleDefaultPrinterActions</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDefaultPrinterUIHelper.handleDefaultPrinterActions'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDefaultPrinterUIHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDefaultPrinterUIHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailSetupUIHelper/Method/handleActions</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailSetupUIHelper.handleActions'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailSetupUIHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailSetupUIHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileUploadTemporarySignatureImageStorageStrategy</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileUploadTemporarySignatureImageStorageStrategy'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportToEmailExecutionInfo</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportToEmailExecutionInfo'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderManager/Method/loadContentOfStandardImagePlaceholders</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderManager.loadContentOfStandardImagePlaceholders'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderManager/Method/replacePlhInCurrentPrintDestCommon</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderManager.replacePlhInCurrentPrintDestCommon'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderManager/Method/containPlaceholders_emailPrintDestSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderManager.containPlaceholders_emailPrintDestSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderManager/Method/containPlaceholders_filePrintDestSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderManager.containPlaceholders_filePrintDestSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderManager/Method/containPlaceholders_printerPrintDestSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderManager.containPlaceholders_printerPrintDestSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderManager/Method/containPlaceholders_printReportSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderManager.containPlaceholders_printReportSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderManager/Method/containPlaceholders</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderManager.containPlaceholders'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderManager/Method/removePlaceholderStartEndSymbols</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderManager.removePlaceholderStartEndSymbols'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderManager</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderManager'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileUploadTemporaryStorageStrategy</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileUploadTemporaryStorageStrategy'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderMailMergeQuery</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderMailMergeQuery'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileUploadTemporaryProductLicenseStorageStrategy</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileUploadTemporaryProductLicenseStorageStrategy'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderSrsProforma/Method/proformaReportStoragePrefix</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderSrsProforma.proformaReportStoragePrefix'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderSrsProforma/Method/isProforma</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderSrsProforma.isProforma'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderSrsProforma</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderSrsProforma'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocElectronicSignatureCertificateUtil</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocElectronicSignatureCertificateUtil'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSysEmailDistributor</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocSysEmailDistributor'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocTraceContextPrintMgmt/Method/createTraceMessage</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _message in method createTraceMessage is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocTraceContextPrintMgmt/Method/createTraceMessage</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _message in method createTraceMessage is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocTraceContextPrintMgmt/Method/createTraceMessage</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _message in method createTraceMessage is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocentricFileUploadOnPremBuild</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocentricFileUploadOnPremBuild'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocQbdsRecordType/Method/allChildDataSourceNos</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocQbdsRecordType.allChildDataSourceNos'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocQbdsRecordType/Method/childDataSourceNos</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocQbdsRecordType.childDataSourceNos'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocQbdsRecordType/Method/parentDataSourceNo</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocQbdsRecordType.parentDataSourceNo'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocQbdsRecordType/Method/qbdsName</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocQbdsRecordType.qbdsName'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocQbdsRecordType/Method/qbdsTableName</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocQbdsRecordType.qbdsTableName'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocQbdsRecordType/Method/buildQbdsRecordTypeArray</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocQbdsRecordType.buildQbdsRecordTypeArray'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocQbdsRecordType</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocQbdsRecordType'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderERModelMappingRun/Method/outputDataValue</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _docXmlRecord in method outputDataValue is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderERModelMappingRun/Method/outputDataValue</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _value in method outputDataValue is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderERModelMappingRun/Method/outputDataContainerList</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _docXmlRecord in method outputDataContainerList is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderERModelMappingRun/Method/outputDataContainerList</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _docXmlRecord in method outputDataContainerList is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderERModelMappingRun/Method/outputDataContainerList</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _docXmlRecord in method outputDataContainerList is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderERModelMappingRun/Method/outputDataContainerList</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _docXmlRecord in method outputDataContainerList is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderERModelMappingRun/Method/createExecutionLogger</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call executionLogger.parmSolutionID is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderERModelMappingRun/Method/createExecutionLogger</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call executionLogger.parmStartOnDemand is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderERModelMappingRun/Method/createExecutionLogger</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call executionLogger.parmDestinationMappingId is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderERModelMappingRun/Method/promptDatasourceDebugger</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call dataSourceDebugEvaluationParameters.parmFormatMappingDataContainer is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderERModelMappingRun/Method/promptDatasourceDebugger</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call dataSourceDebugEvaluationParameters.parmModelMappingDataContainer is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsEmail/Method/create</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsEmail.create'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSrsEngine</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocSrsEngine'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocentricReportViewerControl/Method/exportToWord</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call formRun.exportToWord is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocentricReportViewerControl/Method/exportToExcel</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call formRun.exportToExcel is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportToFileExecutionInfo</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportToFileExecutionInfo'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocUpgradeManager/Method/compareVersions</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _version1 in method compareVersions is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocUpgradeManager/Method/compareVersions</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _version2 in method compareVersions is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsFile/Method/isOutputFilenameUsingPlaceholders</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsFile.isOutputFilenameUsingPlaceholders'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuDeletedDocumentsListForm_DC_EventHandler/Method/GoToContext_DC_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuDeletedDocumentsListForm_DC_EventHandler/Method/GoToContext_DC_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.GoToContext_DC_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSrsReportGenerator/Method/startOperationSynchronouslyAndGetReportContent</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocSrsReportGenerator.startOperationSynchronouslyAndGetReportContent'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSrsReportGenerator/Method/renderingComplete</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocSrsReportGenerator.renderingComplete'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSrsReportGenerator</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocSrsReportGenerator'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportExecutionInfo/Method/isPdfReportSigned</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportExecutionInfo.isPdfReportSigned'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportExecutionInfo/Method/existsReportMetadata</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportExecutionInfo.existsReportMetadata'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportExecutionInfo/Method/constructOnReportExecutionBegin</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportExecutionInfo.constructOnReportExecutionBegin'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportExecutionInfo/Method/isPreviewBeforePrint</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportExecutionInfo.isPreviewBeforePrint'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportExecutionInfo/Method/isPreviewBeforePrintPrintingCanceled</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportExecutionInfo.isPreviewBeforePrintPrintingCanceled'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportExecutionInfo/Method/disposePrintReportSettingsReferencedObjects</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportExecutionInfo.disposePrintReportSettingsReferencedObjects'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportExecutionInfo</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportExecutionInfo'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocConstantFile</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocConstantFile'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsExtTmp</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsExtTmp'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocGlobalHelper/Method/capitalizeFirstLetterOfEachWord</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _inputStr in method capitalizeFirstLetterOfEachWord is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocGlobalHelper/Method/getClrExceptionMessage</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _message in method getClrExceptionMessage is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocGlobalHelper/Method/getClrExceptionMessage</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _ex in method getClrExceptionMessage is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocGlobalHelper/Method/getClrExceptionMessage</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _message in method getClrExceptionMessage is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocGlobalHelper/Method/getClrExceptionMessage</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _ex in method getClrExceptionMessage is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocGlobalHelper/Method/getClrExceptionMessage</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _message in method getClrExceptionMessage is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocGlobalHelper/Method/getClrExceptionMessage</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _ex in method getClrExceptionMessage is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocGlobalHelper/Method/getClrExceptionMessage</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _ex in method getClrExceptionMessage is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocGlobalHelper/Method/scrubXmlFragment</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter xml in method scrubXmlFragment is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocGlobalHelper/Method/startLengthyOperationInternal</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_parameters' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailProcessingParams</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailProcessingParams'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/PrintMgmtSetupUIMainForm_DC_EventHandler/Method/PrintMgmtSettingsHelpButton_DC_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/PrintMgmtSetupUIMainForm_DC_EventHandler/Method/SystemDefinedSaveButton_OnSaving_DC</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call formRun.SystemDefinedSaveButton_OnSaving_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/PrintMgmtSetupUIMainForm_DC_EventHandler/Method/PrintMgmtSettingsHelpButton_DC_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.PrintMgmtSettingsHelpButton_DC_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportProformaPurchOrderDataSource</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportProformaPurchOrderDataSource'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSecurityManager/Method/checkDataSecurity</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSecurityManager.checkDataSecurity'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSecurityManager/Method/isInRoleDocentricPowerUser</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSecurityManager.isInRoleDocentricPowerUser'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSecurityManager/Method/isInRoleDocentricTemplateEditor</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSecurityManager.isInRoleDocentricTemplateEditor'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSecurityManager/Method/isInRoleDocentricAdministrator</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSecurityManager.isInRoleDocentricAdministrator'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSecurityManager/Method/isInRoleSystemAdministrator</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSecurityManager.isInRoleSystemAdministrator'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSecurityManager/Method/checkDataSecurityConstraints</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSecurityManager.checkDataSecurityConstraints'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSecurityManager/Method/checkLegalEntityDataSecurityConstraint</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSecurityManager.checkLegalEntityDataSecurityConstraint'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSecurityManager/Method/checkLegalEntityDataSecurityConstraint_PowerUser</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSecurityManager.checkLegalEntityDataSecurityConstraint_PowerUser'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSecurityManager/Method/checkLegalEntityDataSecurityConstraint_TemplateEditor</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSecurityManager.checkLegalEntityDataSecurityConstraint_TemplateEditor'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSecurityManager</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSecurityManager'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocGlobalChangePropagationHelper/Method/getLastVersion</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_myLastVersion' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocGlobalChangePropagationHelper/Method/changeVersion</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocGlobalChangePropagationHelper.changeVersion'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocGlobalChangePropagationHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocGlobalChangePropagationHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerMessenger/Method/displayFailureMsgRetrieveTemplate</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerMessenger.displayFailureMsgRetrieveTemplate'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerMessenger/Method/displayFailureMsgPrintToByteArray</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerMessenger.displayFailureMsgPrintToByteArray'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerMessenger/Method/displayFailureMsgPrintToEmfImages</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerMessenger.displayFailureMsgPrintToEmfImages'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerMessenger/Method/displayFailureMsgPrintToDocentricTmpFile</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerMessenger.displayFailureMsgPrintToDocentricTmpFile'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerMessenger/Method/displayFailureMsgPrintToScreen</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerMessenger.displayFailureMsgPrintToScreen'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerMessenger/Method/displaySuccessMsgPrintToArchive</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerMessenger.displaySuccessMsgPrintToArchive'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerMessenger/Method/displayFailureMsgPrintToArchive</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerMessenger.displayFailureMsgPrintToArchive'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerMessenger/Method/displayMsgPrintToArchiveCommon</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerMessenger.displayMsgPrintToArchiveCommon'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerMessenger/Method/displayGeneralSuccessMsg</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerMessenger.displayGeneralSuccessMsg'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerMessenger/Method/displaySuccessMsgPrintReportToEmail</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerMessenger.displaySuccessMsgPrintReportToEmail'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerMessenger/Method/displayFailureMsgPrintReportToEmail</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerMessenger.displayFailureMsgPrintReportToEmail'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerMessenger/Method/displaySuccessMsgPrintReportToPrinter</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerMessenger.displaySuccessMsgPrintReportToPrinter'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerMessenger/Method/displayFailureMsgPrintReportToPrinter</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerMessenger.displayFailureMsgPrintReportToPrinter'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerMessenger/Method/displayFailureMsgPrintReportToFile</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerMessenger.displayFailureMsgPrintReportToFile'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileUploadTemporaryReportTemplateStorageStrategy</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileUploadTemporaryReportTemplateStorageStrategy'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/saveToAttachments/MethodVariable/validateAndDefaultParameters</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _attachmentName in method saveToAttachments is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/saveToAttachments/MethodVariable/validateAndDefaultParameters</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _fileContentType in method saveToAttachments is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/updateSharePointFileMetadata</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _docuRef in method updateSharePointFileMetadata is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/validateOutputFileType_Printer</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.validateOutputFileType_Printer'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/validateOutputFileType_Screen</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.validateOutputFileType_Screen'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/validateOutputFileType_Archive</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.validateOutputFileType_Archive'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/validateOutputFileType_File</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.validateOutputFileType_File'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/validateOutputFileType_Email</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.validateOutputFileType_Email'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/validateOutputFileType_Memory</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.validateOutputFileType_Memory'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/createPrintedReportFromEmailPrintSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.createPrintedReportFromEmailPrintSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/createPrintedReportFromFilePrintSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.createPrintedReportFromFilePrintSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/infoLogToExceptionLogIfSetup</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.infoLogToExceptionLogIfSetup'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/isIncludedInDataSet</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.isIncludedInDataSet'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/fillDataSetIncludedFieldsAndMethodsMaps</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.fillDataSetIncludedFieldsAndMethodsMaps'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/validateDocuTypeForSavingToPrintArchive</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.validateDocuTypeForSavingToPrintArchive'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/validateBuiltInDocuTypeForSavingToPrintArchive</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.validateBuiltInDocuTypeForSavingToPrintArchive'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/isSrsReportPreProcessingTempDB</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.isSrsReportPreProcessingTempDB'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/isSrsReportPreProcessingRegular</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.isSrsReportPreProcessingRegular'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper/Method/isSrsReportPreProcessing</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper.isSrsReportPreProcessing'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportingHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSecurityDelegates/Method/instance</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSecurityDelegates.instance'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSecurityDelegates</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSecurityDelegates'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderParamsMailMerge</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderParamsMailMerge'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocentricHtmlEditorBuild</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocentricHtmlEditorBuild'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileUploadTemporaryZipFilesStorageStrategy</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileUploadTemporaryZipFilesStorageStrategy'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileUploadTemporaryXmlFilesStorageStrategy</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileUploadTemporaryXmlFilesStorageStrategy'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuDeletedDocumentsListDetailsForm_DC_EventHandler/Method/DocuDeletedRef_OnActivated</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuDeletedDocumentsListDetailsForm_DC_EventHandler/Method/DocuDeletedRef_OnActivated</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocuDeletedRef_OnActivated_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderParams</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderParams'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocConstantLicVer/Method/DocentricAxVersion</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocConstantLicVer.DocentricAxVersion'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocConstantLicVer/Method/DocentricAxReleaseDate</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocConstantLicVer.DocentricAxReleaseDate'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocConstantLicVer</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocConstantLicVer'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocTableBrowser/Method/treeNode2TableId</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter treenode in method treeNode2TableId is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocTableBrowser/Method/run</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocTableBrowser.run'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocTableBrowser/Method/showAllFields</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocTableBrowser.showAllFields'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocTableBrowser/Method/treeNode2TableId</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocTableBrowser.treeNode2TableId'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocTableBrowser/Method/allowRead</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocTableBrowser.allowRead'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocTableBrowser/Method/allowEdit</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocTableBrowser.allowEdit'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocTableBrowser/Method/run</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call tableBrowserFormRun.parmDocTableBrowser is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocTableBrowser/Method/showError</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call tableBrowserForm.parmError is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDocuRefHelper/Method/replaceDocuValueForDocuRef</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _newFileContentType in method replaceDocuValueForDocuRef is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDocuRefHelper/Method/saveToAttachments/MethodVariable/validateAndDefaultParameters</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _attachmentName in method saveToAttachments is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDocuRefHelper/Method/saveToAttachments/MethodVariable/validateAndDefaultParameters</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _fileContentType in method saveToAttachments is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocConstantPlaceholder</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocConstantPlaceholder'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getSourceLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'salesLine' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getSourceLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'projProposalLines' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getSourceLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'purchRFQCaseLine' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getSourceLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'purchLine' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getSourceLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'salesQuotationLine' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getSourceLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'salesLine' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getSourceLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'whsLoadLine' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getSourceLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'whsLoadLineShipment' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getSourceLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'wmsOrderTrans' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getSourceLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'custInvoiceLine' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'custCollectionLetterTrans' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'custConfirmTrans' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'custInterestTrans' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'custInvoiceTrans' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'custPackingSlipTrans' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'custQuotationConfirmTrans' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'custQuotationTrans' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'projInvoiceTransUnion' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'purchLineAllVersionsCR' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'vendInvoiceTrans' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'vendPackingSlipTrans' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'purchLineAllVersionsPO' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'vendReceiptsListTrans' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'vendRFQTrans' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getJournalLineRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'wmsOrderTrans' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'inventTable' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'inventTable' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'inventTable' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'inventTable' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'inventTable' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'inventTable' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'inventTable' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'inventTable' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'inventTable' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'inventTable' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'inventTable' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'inventTable' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'inventTable' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemVariantRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'releasedProductVariant' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemVariantRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'releasedProductVariant' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemVariantRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'releasedProductVariant' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemVariantRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'releasedProductVariant' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemVariantRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'releasedProductVariant' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemVariantRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'releasedProductVariant' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemVariantRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'releasedProductVariant' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemVariantRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'releasedProductVariant' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemVariantRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'releasedProductVariant' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemVariantRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'releasedProductVariant' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemVariantRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'releasedProductVariant' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemVariantRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'releasedProductVariant' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRecordTypeHelper/Method/getLineItemVariantRecords</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'releasedProductVariant' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileUploadTemporaryPrivateCertificateStorageStrategy</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileUploadTemporaryPrivateCertificateStorageStrategy'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDirPartyHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDirPartyHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuAttachment_DC_EventHandler/Method/DocuRef_OnActivated</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuAttachment_DC_EventHandler/Method/DocAttachmentSettings_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuAttachment_DC_EventHandler/Method/DocuRef_OnActivated</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocuRef_OnActivated_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuAttachment_DC_EventHandler/Method/DocAttachmentSettings_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocReportAttachmentDetail_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportAttachmentResolved/Method/validate</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportAttachmentResolved.validate'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocConstantFeature/Method/isFeatureEnabled_BankPaymAdviceReportV2</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocConstantFeature.isFeatureEnabled_BankPaymAdviceReportV2'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocConstantFeature</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocConstantFeature'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocCodeGeneratorHelper/Method/generateCode_TableDisplayMethods</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocCodeGeneratorHelper.generateCode_TableDisplayMethods'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocCodeGeneratorHelper/Method/generateCode_TableFieldGroups</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocCodeGeneratorHelper.generateCode_TableFieldGroups'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocCodeGeneratorHelper/Method/generateCode_TableFields</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocCodeGeneratorHelper.generateCode_TableFields'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocCodeGeneratorHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocCodeGeneratorHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDocumentHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDocumentHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDocumentViewerBuild/Method/dataSource</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDocumentViewerBuild.dataSource'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDocumentViewerBuild/Method/disableDelete</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDocumentViewerBuild.disableDelete'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDocumentViewerBuild/Method/disableUpload</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDocumentViewerBuild.disableUpload'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsGenerateDS/Method/validate</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsGenerateDS.validate'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsGenerateDS</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsGenerateDS'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderImageAttribute/Method/defaultHeightInPx</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderImageAttribute.defaultHeightInPx'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderImageAttribute/Method/defaultWidthInPx</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderImageAttribute.defaultWidthInPx'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderImageAttribute</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderImageAttribute'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportSettings/Method/checkSaveToArchive</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportSettings.checkSaveToArchive'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportSettings/Method/validate</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportSettings.validate'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportSettings/Method/addPrintedReportDocFromContainer</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportSettings.addPrintedReportDocFromContainer'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportSettings/Method/addPrintedReportDocFromMemoryStream</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportSettings.addPrintedReportDocFromMemoryStream'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportSettings/Method/addPrintedReportDocFromByteArray</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportSettings.addPrintedReportDocFromByteArray'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportSettings/Method/addPrintedReportDocFromImageList</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportSettings.addPrintedReportDocFromImageList'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportSettings/Method/isBeingUsedOutsideSsrsPipeline</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportSettings.isBeingUsedOutsideSsrsPipeline'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportSettings/Method/constructWithoutArchiveAndSrsReportContracts</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportSettings.constructWithoutArchiveAndSrsReportContracts'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportSettings/Method/constructWithSameArchiveAndSrsReportContracts</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportSettings.constructWithSameArchiveAndSrsReportContracts'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportSettings/Method/create</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportSettings.create'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderAttribute/Method/friendlyName</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderAttribute.friendlyName'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderAttribute/Method/group</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderAttribute.group'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderAttribute/Method/code</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderAttribute.code'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderAttribute/Method/isStandardPlaceholder</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderAttribute.isStandardPlaceholder'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderAttribute/Method/sourceDspClass</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderAttribute.sourceDspClass'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderAttribute</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPlaceholderAttribute'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocQueryRangeUtil</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocQueryRangeUtil'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSRSPrintArchiveContract</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocSRSPrintArchiveContract'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocConstant</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocConstant'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuDeletedDocumentsForm_DC_EventHandler/Method/DocuDeletedRef_OnActivated</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuDeletedDocumentsForm_DC_EventHandler/Method/DocuDeletedRef_OnActivated</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocuDeletedRef_OnActivated_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderMailMerge/Method/addMainDataSectionQuery</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderMailMerge.addMainDataSectionQuery'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderMailMerge/Method/primaryTableId</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderMailMerge.primaryTableId'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderMailMerge</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderMailMerge'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailTokensReplacementInfo</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailTokensReplacementInfo'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocRenderingSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocRenderingSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDBUpgradeAttribute</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDBUpgradeAttribute'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailProcessor</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailProcessor'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocValidationResult</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocValidationResult'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_srsReportDataContract' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call measurementData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call measurementData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionSuccess</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call measurementData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call measurementData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call measurementData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logReportExecutionFailure</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call measurementData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logLicenseEvent</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logLicenseEvent</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logLicenseEvent</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logLicenseEvent</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logLicenseEvent</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logLicenseEvent</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logLicenseEvent</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logLicenseEvent</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDiagnosticsManager/Method/logLicenseEvent</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call customData.Add is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileMngHelper/Method/sendFileToUserOnPrem</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileMngHelper.sendFileToUserOnPrem'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileMngHelper/Method/fileFormat2str</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileMngHelper.fileFormat2str'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileMngHelper/Method/convertToFileExtensionStr</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileMngHelper.convertToFileExtensionStr'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileMngHelper/Method/convertOutputFileFormatToFileFormatEnum</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileMngHelper.convertOutputFileFormatToFileFormatEnum'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileMngHelper/Method/convertSrsFileFormatToFileExtensionStr</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileMngHelper.convertSrsFileFormatToFileExtensionStr'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileMngHelper/Method/convertToFileLookupFilter</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileMngHelper.convertToFileLookupFilter'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileMngHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileMngHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocContextMenuManager/Method/processControlsInternal</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call formControlObject.registerOverrideMethod is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocContextMenuManager/Method/processControlsInternal</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call formControlObject.registerOverrideMethod is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDocuAttachment</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDocuAttachment'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocUserDefinedPlaceholderManager/Method/replacePlaceholders</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _inputStr in method replacePlaceholders is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocUserDefinedPlaceholderManager</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserDefinedPlaceholderManager'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportToPrinterExecutionInfo</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportToPrinterExecutionInfo'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_reportExecutionSuccess</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_reportExecutionSuccess'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_reportExecutionFailure</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_reportExecutionFailure'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_generateReportContent</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_generateReportContent'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printToScreenBegin</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printToScreenBegin'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printToScreenEnd</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printToScreenEnd'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printToFileBegin</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printToFileBegin'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printingToFile</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printingToFile'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printToFileSendFileToUser</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printToFileSendFileToUser'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printToFileEnd</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printToFileEnd'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_beforeSaveToSharePoint</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_beforeSaveToSharePoint'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_afterSaveToSharePoint</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_afterSaveToSharePoint'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_beforeSaveToAttachments</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_beforeSaveToAttachments'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_afterSaveToAttachments</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_afterSaveToAttachments'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_beforeSaveToAzureStorage</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_beforeSaveToAzureStorage'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_afterSaveToAzureStorage</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_afterSaveToAzureStorage'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_beforeSaveToFileSystem</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_beforeSaveToFileSystem'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_afterSaveToFileSystem</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_afterSaveToFileSystem'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printToEmailBegin</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printToEmailBegin'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printingToEmail</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printingToEmail'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_beforeEmailMessageCreated</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_beforeEmailMessageCreated'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_emailMessageCreated</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_emailMessageCreated'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printToEmailEnd</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printToEmailEnd'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_beforeSaveToOutgoingEmailTable</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_beforeSaveToOutgoingEmailTable'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_afterSaveToOutgoingEmailTable</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_afterSaveToOutgoingEmailTable'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printToPrinterBegin</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printToPrinterBegin'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printingToPrinter</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printingToPrinter'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printToPrinterEnd</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printToPrinterEnd'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printToMemoryBegin</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printToMemoryBegin'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printToMemoryEnd</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printToMemoryEnd'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printToArchiveBegin</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printToArchiveBegin'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printToArchiveEnd</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printToArchiveEnd'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_printToArchiveChangeArchiveFilenameAndDescription</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_printToArchiveChangeArchiveFilenameAndDescription'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_saveToPrintArchive</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_saveToPrintArchive'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_beforeSaveToPrintArchive</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_beforeSaveToPrintArchive'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_afterSaveToPrintArchive</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_afterSaveToPrintArchive'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_beforeSaveToPAReportInOriginalFormat</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_beforeSaveToPAReportInOriginalFormat'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher/Method/publishEvent_beforeSaveToPAAdditionalEmailAttachments</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher.publishEvent_beforeSaveToPAAdditionalEmailAttachments'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManagerPublisher</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManagerPublisher'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportProformaInvoiceDataSource</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportProformaInvoiceDataSource'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrinterPageRange/Method/validate</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrinterPageRange.validate'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrinterPageRange/Method/create</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrinterPageRange.create'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrinterPageRange</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrinterPageRange'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDocument</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDocument'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportTypeHelper/Method/findFirstActiveReportForType</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTypeHelper.findFirstActiveReportForType'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportTypeHelper/Method/findFirstReportForType</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTypeHelper.findFirstReportForType'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportTypeHelper/Method/allReportsDeactivedForType</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTypeHelper.allReportsDeactivedForType'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportTypeHelper/Method/allReportsUseOnlyWithPDForType</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTypeHelper.allReportsUseOnlyWithPDForType'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportTypeHelper/Method/existEnabledTemplatesForType</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTypeHelper.existEnabledTemplatesForType'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportTypeHelper/Method/anyReportIncludeCompanyLogoForType</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTypeHelper.anyReportIncludeCompanyLogoForType'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportTypeHelper/Method/anyReportIncludeHiddenParamsForType</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTypeHelper.anyReportIncludeHiddenParamsForType'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportTypeHelper/Method/findFirstDefaultTemplateForType</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTypeHelper.findFirstDefaultTemplateForType'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportTypeHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportTypeHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailTokensParams/Method/isPurposeToken</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailTokensParams.isPurposeToken'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailTokensParams/Method/isPrimaryBusinessToken</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailTokensParams.isPrimaryBusinessToken'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailTokensParams</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailTokensParams'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocUserPrinterUIHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocUserPrinterUIHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportPrintArchiveInfo</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportPrintArchiveInfo'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocentricHtmlEditorControl</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocentricHtmlEditorControl'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintDestSettingsMemory</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintDestSettingsMemory'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSysTableLookup/Method/datasource</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocSysTableLookup.datasource'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSysTableLookup/Method/newParameters</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocSysTableLookup.newParameters'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSysTableLookup</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocSysTableLookup'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSrsPrintReportSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocSrsPrintReportSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingSetupHelper/Method/getAotResourceFonts</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _fontGroupName in method getAotResourceFonts is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingSetupHelper/Method/getCustomBlobStorageFonts</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _fontGroupName in method getCustomBlobStorageFonts is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportingSetupHelper/Method/importReportTemplateFromXmlElement/MethodVariable/setSignatureAppearanceField</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_xmlNode' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailMessageReportSettings/Method/newDefault</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailMessageReportSettings.newDefault'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailMessageReportSettings/Method/reportSettingsPriorityToExt</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailMessageReportSettings.reportSettingsPriorityToExt'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailMessageReportSettings/Method/msgPriorityFromExt</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailMessageReportSettings.msgPriorityFromExt'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailMessageReportSettings/Method/sendingModeToExt</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailMessageReportSettings.sendingModeToExt'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailMessageReportSettings/Method/sendingModeFromExt</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailMessageReportSettings.sendingModeFromExt'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailMessageReportSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailMessageReportSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportToArchiveExecutionInfo</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportToArchiveExecutionInfo'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPdfSignatureSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPdfSignatureSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuHistoryListForm_DC_EventHandler/Method/GoToContext_DC_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocuHistoryListForm_DC_EventHandler/Method/GoToContext_DC_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.GoToContext_DC_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintedReport</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintedReport'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocentricFileUploadOnPremControl</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocentricFileUploadOnPremControl'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocentricFileUploadOnPremControl/Method/uploadFile</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call formRunObj.onUploadCompleted is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileSystemMngHelper/Method/aosHaveReadPermissionForFile</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileSystemMngHelper.aosHaveReadPermissionForFile'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileSystemMngHelper/Method/fileExistsOnFileSystem</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileSystemMngHelper.fileExistsOnFileSystem'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileSystemMngHelper/Method/folderExistsOnFileSystem</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileSystemMngHelper.folderExistsOnFileSystem'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileSystemMngHelper/Method/deleteFileOnFileSystem</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileSystemMngHelper.deleteFileOnFileSystem'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileSystemMngHelper/Method/deleteFolderOnFileSystem</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileSystemMngHelper.deleteFolderOnFileSystem'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileSystemMngHelper/Method/createFolderOnFileSystem</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileSystemMngHelper.createFolderOnFileSystem'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileSystemMngHelper/Method/saveFileToFileSystem</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileSystemMngHelper.saveFileToFileSystem'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileSystemMngHelper/Method/createFolderAndSaveToFileSystem</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileSystemMngHelper.createFolderAndSaveToFileSystem'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileSystemMngHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileSystemMngHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportProformaProjInvoiceDataSource</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportProformaProjInvoiceDataSource'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocAzureFilesHelper/Method/getAzureFilesFolderPath</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _azureFilesFolderPath in method getAzureFilesFolderPath is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderCBD/Method/run</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _docXmlRecordBuilder in method run is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportViewerParams/Method/targetPrintDestination</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportViewerParams.targetPrintDestination'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportViewerParams</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportViewerParams'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/PrintMgmtSetupUIMainForm_DC_Extension/Method/close</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call callerFormRun.printMgmtSetupUIClosed is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportProformaPackingSlipDataSource</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportProformaPackingSlipDataSource'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportRunDelegates/Method/instance</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportRunDelegates.instance'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFormatStringLookup</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFormatStringLookup'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportPdfSecurityManager</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocReportPdfSecurityManager'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocentricEngine/Method/ProvideLabel</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocentricEngine.ProvideLabel'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocentricEngine/Method/renderingSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocentricEngine.renderingSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocentricEngine</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocentricEngine'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocOutputManager</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocOutputManager'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDBUpgrade_3_3_8</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDBUpgrade_3_3_8'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDBUpgrade_3_3_3/Method/upgradeTo3_3_3_0</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDBUpgrade_3_3_3.upgradeTo3_3_3_0'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDBUpgrade_3_3_3</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDBUpgrade_3_3_3'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDBUpgrade_3_3_5/Method/upgradeTo3_3_5_0</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDBUpgrade_3_3_5.upgradeTo3_3_5_0'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDBUpgrade_3_3_5</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDBUpgrade_3_3_5'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocFileUploadTemporaryDdspFilesStorageStrategy</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocFileUploadTemporaryDdspFilesStorageStrategy'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocElectronicSignatureCertificateSettings</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocElectronicSignatureCertificateSettings'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintReportToMemoryExecutionInfo</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocPrintReportToMemoryExecutionInfo'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailTokensHelper/Method/init</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailTokensHelper.init'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailTokensHelper/Method/isTokensSetupFound</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailTokensHelper.isTokensSetupFound'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailTokensHelper/Method/createWarningMessages</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailTokensHelper.createWarningMessages'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailTokensHelper/Method/processRedirectConditions</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailTokensHelper.processRedirectConditions'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailTokensHelper/Method/redirectPrintDestination</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailTokensHelper.redirectPrintDestination'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailTokensHelper/Method/printWarningMessages</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailTokensHelper.printWarningMessages'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailTokensHelper</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEmailTokensHelper'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocentricFileDownloadOnPremControl/Method/onDownloadComplete</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocentricFileDownloadOnPremControl.onDownloadComplete'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocentricFileDownloadOnPremControl</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocentricFileDownloadOnPremControl'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocentricFileDownloadOnPremControl/Method/onDownloadComplete</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call formRun.onDownloadComplete is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocReportAttachmentManager/Method/handleNotFoundCondition</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_reportRunContext' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderSrsReporting</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocDataSourceProviderSrsReporting'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocDataSourceProviderSrsReporting/Method/selectDataTableRecordPreProcessed</Path>
      <Moniker>BPErrorSelectUsingFirstOnly</Moniker>
      <Message>Consider using the 'firstonly' keyword for select from 'reportDataTableRecord' since additional data rows are unused here.</Message>
      <Justification>Additional data rows returned by the select statement are used in the caller method.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocConstantDSP</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocConstantDSP'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintMgmtUtilsUIHelper/Method/copyToWorkingCopyAction</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call callerForm.parmWorkingCopySettings is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPrintMgmtUtilsUIHelper/Method/editWorkingCopyAction</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call callerForm.parmWorkingCopySettings is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocXmlField/Method/setFieldValue</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _newFieldValue in method setFieldValue is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocXmlField/Method/constructCalculatedField</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _fieldValue in method constructCalculatedField is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSharePointHelperV3/Method/getFileInfoByName</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _spFolderPath in method getFileInfoByName is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSharePointHelperV3/Method/getFileContentByName</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _spFolderPath in method getFileContentByName is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSharePointHelperV3/Method/getSharePointFolderPath</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _sharePointFolderPath in method getSharePointFolderPath is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSharePointHelperV3/Method/getSharePointFolderPath</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _sharePointFolderPath in method getSharePointFolderPath is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocSharePointHelperV3/Method/getSharePointFolderPath</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _sharePointFolderPath in method getSharePointFolderPath is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEventHandlerResult/Method/cancelExecution</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEventHandlerResult.cancelExecution'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEventHandlerResult</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocEventHandlerResult'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocConstantDiagnostics</Path>
      <Moniker>BPXmlDocNoDocumentationComments</Moniker>
      <Message>BPXmlDocNoDocumentationComments: No XML documentation headers are provided for 'DocConstantDiagnostics'.</Message>
      <Justification>The XML documentation headers are not needed as the method is self-explanatory.</Justification>
    </Diagnostic>
  </Items>
</IgnoreDiagnostics>