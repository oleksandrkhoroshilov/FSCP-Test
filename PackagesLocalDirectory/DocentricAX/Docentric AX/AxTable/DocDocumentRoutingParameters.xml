<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocDocumentRoutingParameters</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DocDocumentRoutingParameters extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    void delete()
    {
        throw error("@SYS23721");
        //super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    public void initValue()
    {
        // Document routing history clean-up
        this.ActivateDocRoutingHistoryCleanUpJob = true;

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editDRHistoryRetentionHours</Name>
				<Source><![CDATA[
    public edit DocDocRoutingCleanUpRetentionHours editDRHistoryRetentionHours(boolean _set, int _retentionHours)
    {
        if (_set)
        {
            if (_retentionHours <= 0)
            {
                _retentionHours = 168;
            }
            else if (_retentionHours > 168)
            {
                _retentionHours = 720;
            }

            DocumentRoutingHistoryConfig2::setJobHistoryHoursValue(_retentionHours);
        }
        else
        {
            _retentionHours = DocumentRoutingHistoryConfig2::getJobHistoryHoursValue();
        }

        return _retentionHours;
    }

]]></Source>
			</Method>
			<Method>
				<Name>editDRHistoryRetentionDays</Name>
				<Source><![CDATA[
    public edit DocDocRoutingCleanUpRetentionDays editDRHistoryRetentionDays(boolean _set, int _retentionDays)
    {
        if (_set)
        {
            if (_retentionDays <= 0)
            {
                _retentionDays = 7;
            }
            else if (_retentionDays > 30)
            {
                _retentionDays = 30;
            }

            int retentionHours = _retentionDays * 24;
            DocumentRoutingHistoryConfig2::setJobHistoryHoursValue(retentionHours);
            //DocumentRoutingHistoryConfig2::setMaxNumberDaysOfJobHistoryValue(_retentionDays);  >> this method does not exist in lower D365FO versions.
        }
        else
        {
            int retentionHours = DocumentRoutingHistoryConfig2::getJobHistoryHoursValue();
            _retentionDays = retentionHours div 24;
            //_retentionDays = DocumentRoutingHistoryConfig2::getMaxNumberDaysOfJobHistoryValue();  >> this method does not exist in lower D365FO versions.
        }

        return _retentionDays;
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    public static boolean exist()
    {
        return (select firstonly RecId from DocDocumentRoutingParameters).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    public static client server DocDocumentRoutingParameters find(boolean _forupdate = false)
    {
        DocDocumentRoutingParameters parameter;
    
        // Race conditions can occur during upgrade, when the parameter record is created.
        // Eventhough Company::createParameter(parameter) is handling DuplicateKeyException by it's own,
        // this try/catch is needed to catch DuplicateKeyException from remaing method calls.
        try
        {
            if (_forupdate)
            {
                parameter.selectForUpdate(_forupdate);
            }

            select firstonly parameter
                index Key
                where parameter.Key == 0;
    
            if (!parameter && !parameter.isTmp())
            {
                // There is no default record - insert it.
                ttsBegin;
    
                parameter.initValue();
                parameter.insert();
    
                ttsCommit;
            }
        }
        catch (Exception::DuplicateKeyException)
        {
            retry;
        }
        return parameter;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DocentricAX2:DocRoutingParamsDevDoc</DeveloperDocumentation>
	<Label>@DocentricAX2:DocRoutingParams</Label>
	<TableGroup>Parameter</TableGroup>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>Key</ClusteredIndex>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<PrimaryIndex>Key</PrimaryIndex>
	<ReplacementKey>Key</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ActivateDocRoutingHistoryCleanUpJob</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editDRHistoryRetentionHours</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editDRHistoryRetentionDays</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>General</Name>
			<Label>@DocentricAX:General</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>ActivateDocRoutingHistoryCleanUpJob</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editDRHistoryRetentionDays</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>editDRHistoryRetentionHours</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Key</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ActivateDocRoutingHistoryCleanUpJob</Name>
			<ExtendedDataType>DocTurnOnDocRoutingHistoryCleanUpJob</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Key</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>