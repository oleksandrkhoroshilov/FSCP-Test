<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocRestrictedPrinterTokens</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DocRestrictedPrinterTokens extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Make sure that we have the following 3 records in this table:
    ///         PrinterName         ReportId
    ///         ------------------------------------------
    ///         ''                  @UNREGISTERED_REPORTS@
    ///         ''                  @NEW_REPORTS@
    ///         @NEW_PRINTERS@      ''
    /// We use this table for the views with allowed and restricted
    /// printers or reports, so that user can move these tokens
    /// left-right instead of dealing with the flags (Restrict for
    /// unregistered reports, Restrict for new reports, Restrict for
    /// new printers).
    /// If table is already initialized, worst-case is is one select.
    /// </summary>
    /// <returns>True/False</returns>
    public static boolean initialize()
    {
        DocRestrictedPrinterTokens tokens;

        select count(RecId) from tokens 
            where tokens.ReportId == DocConstant::RestrictedPrinterUnregisteredReports
                || tokens.ReportId ==  DocConstant::RestrictedPrinterNewReports
                || tokens.PrinterName == DocConstant::RestrictedPrinterNewPrinters;
        if (tokens.RecId == 3)
        {
            // Make sure that initialization is done only once
            return true;
        }
        
        try
        {
            // First-time execution, add the fixed records needed for handling
            // the tokens (instead of the flags) in the forms
            ttsbegin;

            tokens.clear();
            tokens.PrinterName = '';
            tokens.ReportId = DocConstant::RestrictedPrinterUnregisteredReports;
            tokens.insert();

            tokens.clear();
            tokens.PrinterName = '';
            tokens.ReportId = DocConstant::RestrictedPrinterNewReports;
            tokens.insert();

            tokens.clear();
            tokens.PrinterName = DocConstant::RestrictedPrinterNewPrinters;
            tokens.ReportId = '';
            tokens.insert();

            ttscommit;
        }
        catch
        {
            DocGlobalHelper::handleException(funcName(), 'Error initializing the DocRestrictedPrinterTokens table');
        }

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DocentricAX4:RestrictedPrinterTokensDD</DeveloperDocumentation>
	<Label>@DocentricAX4:RestrictedPrinterTokens</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>PrinterName</TitleField1>
	<TitleField2>ReportId</TitleField2>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>PrinterName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ReportId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PrinterName</Name>
			<ExtendedDataType>Name</ExtendedDataType>
			<Label>@DocentricAX:PrinterNamePrintDestForm</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ReportId</Name>
			<ExtendedDataType>DocReportId</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>