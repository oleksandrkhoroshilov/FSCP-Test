<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocEnvironmentSettings</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DocEnvironmentSettings extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validateField</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the field value in current record.
    /// </summary>
    /// <param name = "_fieldIdToCheck">The field to check</param>
    /// <returns>True/False</returns>
    public boolean validateField(FieldId _fieldIdToCheck)
    {
        boolean ret;
    
        ret = super(_fieldIdToCheck);
    
        if (ret)
        {
            switch (_fieldIdToCheck)
            {
                case fieldNum(DocEnvironmentSettings, EnvironmentDomainUrl):
                    str domainUrl = this.extractDomainUrlHostName();
                    if (this.EnvironmentDomainUrl != domainUrl)
                    {
                        if (domainUrl)
                        {
                            this.EnvironmentDomainUrl = domainUrl;
                        }
                        else
                        {
                            ret = checkFailed(strFmt("@SYS32810", fieldId2PName(this.TableId, _fieldIdToCheck))) && ret;
                        }
                    }
                    break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>extractDomainUrlHostName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extracts the host name from the specified environment domain URL.
    /// </summary>
    /// <returns>The hostname</returns>
    private str extractDomainUrlHostName()
    {
        str hostName = '';
        str src = this.EnvironmentDomainUrl;
        if (src)
        {
            try
            {
                System.UriBuilder builder = new System.UriBuilder(src);
                hostName = builder.Host;
            }
            catch (Exception::CLRError)
            {
                exceptionTextFallThrough();
            }
        }

        return hostName;
    }

]]></Source>
			</Method>
			<Method>
				<Name>currentEnvironment</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates if the EnvironmentDomainUrl field data is for the current environment.
    /// </summary>
    /// <returns>True/False</returns>
    public display DocCurrentEnvironment currentEnvironment()
    {
        return this.EnvironmentDomainUrl == DocDiagnosticsManager::fullyQualifiedDomainName();
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds a DocEnvironmentSettings record.
    /// </summary>
    /// <param name = "_domainUrl">The environment domain URL</param>
    /// <param name = "_forUpdate">A boolean value that indicates whether to read the record for update</param>
    /// <returns>A record in the DocEnvironmentSettings table</returns>
    public static DocEnvironmentSettings find(DocEnvironmentDomainUrl _domainUrl, boolean _forUpdate = false)
    {
        DocEnvironmentSettings environmentSettings;

        environmentSettings.selectForUpdate(_forUpdate);

        select firstonly environmentSettings
            where environmentSettings.EnvironmentDomainUrl == _domainUrl;

        return environmentSettings;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the value of the EnvironmentMode field in the currently inserted/modified record.
    /// </summary>
    /// <returns>True/False</returns>
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();

        if (this.EnvironmentMode == DocEnvironmentMode::NotSet)
        {
            DocGlobalHelper::handleError(strFmt("@DocentricAX4:FieldCannotBeSetToValue", fieldId2PName(this.TableId, fieldNum(DocEnvironmentSettings, EnvironmentMode)), enum2Str(this.EnvironmentMode)));
            ret = false;             
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DocentricAX4:DocEnvironmentSettingsTableDD</DeveloperDocumentation>
	<Label>@DocentricAX4:EnvironmentSettings</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>EnvironmentName</TitleField1>
	<TitleField2>EnvironmentDomainUrl</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ReplacementKey>EnvironmentNameIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EnvironmentName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnvironmentDomainUrl</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>EnvironmentMode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>EnvironmentName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EnvironmentName</Name>
			<ExtendedDataType>DocEnvironmentName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>EnvironmentDomainUrl</Name>
			<ExtendedDataType>DocEnvironmentDomainUrl</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>EnvironmentMode</Name>
			<EnumType>DocEnvironmentMode</EnumType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>EnvironmentDomainUrlIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>EnvironmentDomainUrl</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>EnvironmentNameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>EnvironmentName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>