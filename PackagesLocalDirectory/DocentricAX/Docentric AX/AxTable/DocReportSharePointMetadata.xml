<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocReportSharePointMetadata</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DocReportSharePointMetadata extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>validationStatusIndicator</Name>
				<Source><![CDATA[
    /// <summary>
    /// A display method for metadata field validation status indicator.
    /// </summary>
    /// <returns>Metadata field validation status indicator</returns>
    public display container validationStatusIndicator()
    {
        container result = conNull();
        
        container symbolAndLabel = this.getSymbolAndLabelForValidationStatus();
        str symbol = conPeek(symbolAndLabel, 1);
        str label = conPeek(symbolAndLabel, 2);

        if (symbol)
        {
            result = ImageReference::constructForSymbol(symbol, label).pack();
        }
        return result;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getSymbolAndLabelForValidationStatus</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the symbol and label depending on current metadata field validation status.
    /// </summary>
    /// <returns>Container with symbol and label</returns>
    private container getSymbolAndLabelForValidationStatus()
    {
        str symbol = '';
        LabelId label;

        switch (this.IsValid)
        {
            case NoYes::No:
                symbol = ImageReferenceSymbol::Error;
                label = this.ValidationError;
                break;

            case NoYes::Yes:
                symbol = ImageReferenceSymbol::FieldCorrect;
                label = this.ValidationError;
                break;
        }
        return [symbol, label];
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Indicates whether the specified record in the DocReportSharePointMetadata table exists.
    /// </summary>
    /// <param name="_spSettingsRecId">SharePoint settings record Id</param>
    /// <param name="_spFieldInternalName">SharePoint metadata field internal name</param>
    /// <returns>True if the specified record exists; otherwise, false.</returns>
    public static boolean exist(DocReportSharePointSettingsRecId _spSettingsRecId, DocSharePointMetadataFieldInternalName _spFieldInternalName)
    {
        return (select firstonly RecId from DocReportSharePointMetadata
                    where DocReportSharePointMetadata.SharePointSettingsRecId == _spSettingsRecId
                       && DocReportSharePointMetadata.FieldInternalName == _spFieldInternalName).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findBySharePointSettingsRecIdAndFieldInternalName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the specified record in the DocReportSharePointMetadata table.
    /// </summary>
    /// <param name = "_spSettingsRecId">SharePoint settings record Id</param>
    /// <param name = "_spFieldInternalName">SharePoint metadata Field internal name</param>
    /// <param name = "_forUpdate">A Boolean value that indicates whether to read the record for update</param>
    /// <returns>A record in the DocReportSharePointMetadata table; otherwise, an empty record.</returns>
    public static DocReportSharePointMetadata findBySharePointSettingsRecIdAndFieldInternalName(
        DocReportSharePointSettingsRecId _spSettingsRecId,
        DocSharePointMetadataFieldInternalName _spFieldInternalName,
        boolean _forUpdate = false)
    {
        DocReportSharePointMetadata spMetadata;

        spMetadata.selectForUpdate(_forUpdate);

        select firstonly spMetadata
            where spMetadata.SharePointSettingsRecId == _spSettingsRecId
               && spMetadata.FieldInternalName == _spFieldInternalName;
        
        return spMetadata;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the record before deleting.
    /// </summary>
    /// <returns>True if the record can be deleted; otherwise false.</returns>
    public boolean validateDelete()
    {
        boolean ret;
    
        ret = super();

        if (this.IsRequired)
        {
            ret = ret && checkFailed(strFmt("@DocentricAX4:SharePointMetadataFieldCannotBeDeletedError", this.FieldName));
        }
    
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DocentricAX4:DocReportSharePointMetadataDD</DeveloperDocumentation>
	<FormRef>DocReportSharePointSettings</FormRef>
	<Label>@DocentricAX4:DocReportSharePointMetadata</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<TitleField1>FieldName</TitleField1>
	<TitleField2>FieldDataType</TitleField2>
	<CacheLookup>FoundAndEmpty</CacheLookup>
	<ClusteredIndex>SharePointSettingsFieldInternalNameIdx</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<ReplacementKey>SharePointSettingsFieldInternalNameIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SharePointSettingsRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldInternalName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldDataType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsRequired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlaceholderName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsValid</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidationError</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>SharePointSettingsRecId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldInternalName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Validation</Name>
			<Label>@DocentricAX:Validation</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>IsValid</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ValidationError</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@DocentricAX:Overview</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldDataType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsRequired</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>PlaceholderName</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Field</Name>
			<Label>@DocentricAX4:SharePointMetadataField</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>FieldName</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>FieldDataType</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>IsRequired</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>SharePointSettingsRecId</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>DocReportSharePointSettingsRecId</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldInternalName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>DocSharePointMetadataFieldInternalName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>DocSharePointMetadataFieldName</ExtendedDataType>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>FieldDescription</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>DocSharePointMetadataFieldDescription</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>FieldDataType</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<EnumType>DocSharePointMetadataFieldDataType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsRequired</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>DocSharePointMetadataFieldIsRequired</ExtendedDataType>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>PlaceholderName</Name>
			<ExtendedDataType>DocPlaceholderName</ExtendedDataType>
			<HelpText>@DocentricAX4:SharePointMetadataPlaceholderHelp</HelpText>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>IsValid</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>NoYesId</ExtendedDataType>
			<HelpText>@DocentricAX4:SharePointMetadataIsValidHelp</HelpText>
			<Label>@DocentricAX4:SharePointMetadataIsValid</Label>
			<EnumType>NoYes</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ValidationError</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>DocReportSharePointSettingsValidationError</ExtendedDataType>
			<HelpText>@DocentricAX4:SharePointMetadataValidationErrorHelp</HelpText>
			<Label>@DocentricAX4:SharePointMetadataValidationError</Label>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>SharePointSettingsFieldInternalNameIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>SharePointSettingsRecId</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>FieldInternalName</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>DocReportSharePointSettings</Name>
			<Cardinality>ZeroMore</Cardinality>
			<OnDelete>Cascade</OnDelete>
			<RelatedTable>DocReportSharePointSettings</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>SharePointSettingsRecId</Name>
					<Field>SharePointSettingsRecId</Field>
					<RelatedField>RecId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
			<Index>RecId</Index>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>