<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocFontManager</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// Docentric font manager used for synchronization context between all AOS instances.
/// </summary>
public class DocFontManager extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>delete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Delete current record.
    /// </summary>
    void delete()
    {
        throw error("@SYS23721");
        //super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initValue</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initialization of the record.
    /// </summary>
    public void initValue()
    {
        this.VersionId = System.Guid::NewGuid();

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>exist</Name>
				<Source><![CDATA[
    /// <summary>
    /// Check if Font Manager synchronization context record exists
    /// </summary>
    /// <returns>True if the record exists</returns>
    public static boolean exist()
    {
        return (select firstonly RecId from DocFontManager).RecId != 0;
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Get a single instance of FontManager.
    /// </summary>
    /// <param name = "_forupdate">If true update is allowed.</param>
    /// <returns>Instance of <c>FontManager</c></returns>
    public static client server DocFontManager find(boolean _forupdate = false)
    {
        DocFontManager fontManager;
    
        // code taken from BankParameters::find()
        fontManager.selectForUpdate(_forupdate);

        select firstonly fontManager
            index Key
            where fontManager.Key == 0;

        if (!fontManager && !fontManager.isTmp())
        {
            Company::createParameter(fontManager);
        }

        return fontManager;
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateWrite</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validate record before write.
    /// </summary>
    /// <returns>True if write can happen.</returns>
    public boolean validateWrite()
    {
        boolean ret;
    
        ret = super();

        System.Guid emptyGuid = new System.Guid();
        if (emptyGuid.Equals(this.VersionId))
        {
            DocGlobalHelper::handleError(strFmt("@DocentricAX3:VersionIdEmptyGuidValueNotAllowed", this.VersionId));
            ret = false;
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateVersionId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Update Font Manager synchronization context.
    /// </summary>
    /// <param name = "_versionId">Version Id of type<c>guid</c> representing current synchronization context.</param>
    public static server void updateVersionId(guid _versionId)
    {
        DocFontManager fontManager;
    
        ttsBegin;
    
        fontManager = DocFontManager::find(true);
        fontManager.VersionId = _versionId;
        fontManager.update();
    
        ttsCommit;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DocentricAX3:FontManagerTableDesc</DeveloperDocumentation>
	<Label>@DocentricAX3:FontManagerTable</Label>
	<TableGroup>Parameter</TableGroup>
	<CacheLookup>EntireTable</CacheLookup>
	<ClusteredIndex>Key</ClusteredIndex>
	<CreatedBy>Yes</CreatedBy>
	<CreatedDateTime>Yes</CreatedDateTime>
	<ModifiedBy>Yes</ModifiedBy>
	<ModifiedDateTime>Yes</ModifiedDateTime>
	<PrimaryIndex>Key</PrimaryIndex>
	<ReplacementKey>Key</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>VersionId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>Key</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt">
			<Name>Key</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>ParametersKey</ExtendedDataType>
			<Visible>No</Visible>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldGuid">
			<Name>VersionId</Name>
			<ExtendedDataType>DocVersionIdFontManager</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>Key</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>Key</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>