<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocPrintMgmtInfoTmp</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DocPrintMgmtInfoTmp extends common
{    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>fillTableForAllModules</Name>
				<Source><![CDATA[
    /// <summary>
    /// Collect the information about the document types for all print management modules
    /// and store it in the tempDB table, convenient for joins. Also add the information
    /// about the matching SSRS report name, if found.
    /// It is important to notice that different localizations use different document types.
    /// For example, BR localization has "Complementary invoice" and "Sales advance invoice" 
    /// which we see only from the BR company. Therefore, the content will be different
    /// when method is called with different active companies.
    /// Make sure to call this method only once while initializing the forms that need this info.
    /// </summary>
    /// <param name = "_ignoreMultipleSSRSFormats">When true, only one record for each Document type
    /// is created, even if there are more SSRS formats for the same Document type.</param>
    /// <returns>DocPrintMgmtInfoTmp tempDB table with records for all document types
    /// in all print management modules for the current company.</returns>
    public static DocPrintMgmtInfoTmp fillTableForAllModules(boolean _ignoreMultipleSSRSFormats = false)
    {
        DocPrintMgmtInfoTmp tmpTable;
        List documentTypes;

        List allPrintMgmtModules = DocPrintMgmtHelper::getAllPrintMgmtModules();
        ListEnumerator leModules = allPrintMgmtModules.getEnumerator();        

        // Iterate through all Print mgmt modules.
        int cnt = 0;
        while (leModules.moveNext())
        {
            documentTypes = DocPrintMgmtHelper::getDocumentTypesForModule(leModules.current());
       
            // For each document from the list add one record.
            PrintMgmtReportFormat printMgmtFormat;
            ListEnumerator leDocuments = documentTypes.getEnumerator();
            leDocuments.reset();
            while (leDocuments.moveNext())
            {
                if (_ignoreMultipleSSRSFormats)
                {
                    select firstonly Name from printMgmtFormat
                        where printMgmtFormat.DocumentType == leDocuments.current();
                            //&& printMgmtFormat.System == NoYes::Yes;

                    tmpTable.clear();

                    tmpTable.NodeType = leModules.current();    // We are considering only module-level nodes, so NodeType is the same as module.
                    tmpTable.DocumentType = leDocuments.current();
                    tmpTable.DocumentTypeName = enum2Str(tmpTable.DocumentType);
                    tmpTable.SRSReportName = printMgmtFormat.Name;  // Might be empty

                    tmpTable.insert();
                }
                else
                {
                    while select Name from printMgmtFormat
                        where printMgmtFormat.DocumentType == leDocuments.current()
                    {
                        tmpTable.clear();

                        tmpTable.NodeType = leModules.current();    // We are considering only module-level nodes, so NodeType is the same as module.
                        tmpTable.DocumentType = leDocuments.current();
                        tmpTable.DocumentTypeName = enum2Str(tmpTable.DocumentType);
                        tmpTable.SRSReportName = printMgmtFormat.Name;  // Might be empty

                        tmpTable.insert();
                    }
                }

                cnt++;
            }
        }

        return tmpTable;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DocentricAX3:PrintMgmtInfoTmpDD</DeveloperDocumentation>
	<Label>@DocentricAX3:PrintMgmtInfoTmpLabel</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TitleField1>NodeType</TitleField1>
	<TitleField2>DocumentType</TitleField2>
	<TableType>TempDB</TableType>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ModuleName</Name>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>NodeType</Name>
			<EnumType>PrintMgmtNodeType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>DocumentType</Name>
			<EnumType>PrintMgmtDocumentType</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>DocumentTypeName</Name>
			<ExtendedDataType>Name</ExtendedDataType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>SRSReportName</Name>
			<AllowEdit>No</AllowEdit>
			<AllowEditOnCreate>No</AllowEditOnCreate>
			<ExtendedDataType>DocReportSRSName</ExtendedDataType>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes />
	<Mappings />
	<Relations />
	<StateMachines />
</AxTable>