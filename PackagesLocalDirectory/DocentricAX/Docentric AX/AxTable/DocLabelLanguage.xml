<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocLabelLanguage</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class DocLabelLanguage extends common
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>languageDescription</Name>
				<Source><![CDATA[
    /// <summary>
    /// A dispaly method for language description.
    /// </summary>
    /// <returns>Language description</returns>
    [SysClientCacheDataMethodAttribute]
    public display LanguageDescription languageDescription()
    {
        return LanguageTable::languageId2Description(this.LanguageId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>find</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the DocLabelLanguage record specified by the RecId value.
    /// </summary>
    /// <param name = "_recId">Record Id</param>
    /// <param name = "_forUpdate">A Boolean value that indicates whether to read the record for update</param>
    /// <returns>A record in the DocLabelLanguage table; otherwise, an empty record.</returns>
    public static DocLabelLanguage find(RecId _recId, boolean _forUpdate = false)
    {
        DocLabelLanguage docLabelLanguage;

        docLabelLanguage.selectForUpdate(_forUpdate);

        if (_recid)
        {
            select firstonly docLabelLanguage where docLabelLanguage.RecId == _recId;
        }
        
        return docLabelLanguage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the DocLabelLanguage record specified by the LineNum value.
    /// </summary>
    /// <param name = "_lineNum">LineNum</param>
    /// <param name = "_forUpdate">A Boolean value that indicates whether to read the record for update</param>
    /// <returns>A record in the DocLabelLanguage table; otherwise, an empty record.</returns>
    public static DocLabelLanguage findByLineNum(LineNum _lineNum, boolean _forUpdate = false)
    {
        DocLabelLanguage docLabelLanguage;

        docLabelLanguage.selectForUpdate(_forUpdate);

        if (_lineNum)
        {
            select firstonly docLabelLanguage where docLabelLanguage.LineNum == _lineNum;
        }
        
        return docLabelLanguage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>findByLanguageId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Finds the DocLabelLanguage record specified by the LanguageId value.
    /// </summary>
    /// <param name = "_languageId">Language Id</param>
    /// <param name = "_forUpdate">A Boolean value that indicates whether to read the record for update</param>
    /// <returns>A record in the DocLabelLanguage table; otherwise, an empty record.</returns>
    public static DocLabelLanguage findByLanguageId(LanguageIdAll _languageId, boolean _forUpdate = false)
    {
        DocLabelLanguage docLabelLanguage;

        docLabelLanguage.selectForUpdate(_forUpdate);

        if (_languageId)
        {
            select firstonly docLabelLanguage where docLabelLanguage.LanguageId == _languageId;
        }
        
        return docLabelLanguage;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getFirstLanguageId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the highest-priority label language based on the language sorting.
    /// It will be the language record with the smallest line number.
    /// </summary>
    /// <returns>Highest-priority label language</returns>
    public static LanguageIdAll getFirstLanguageId()
    {
        DocLabelLanguage docLabelLanguage;

        select firstonly LanguageId from docLabelLanguage order by LineNum;
        
        return docLabelLanguage.LanguageId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getNumberOfLabelLanguages</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of label languages.
    /// </summary>
    /// <returns>Number of label languages</returns>
    public static int getNumberOfLabelLanguages()
    {
        DocLabelLanguage labelLanguage;

        select count(RecId) from labelLanguage;

        return int642int(labelLanguage.RecId);
    }

]]></Source>
			</Method>
			<Method>
				<Name>validateDelete</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the deletion of the reocrd.
    /// </summary>
    /// <returns>True if the record can be deleted; otherwise false</returns>
    public boolean validateDelete()
    {
        boolean ret;
    
        ret = super();

        // Check if this label language is related to any label translation        
        int numberOfTranslations = DocLabelTranslation::getNumberOfTranslationsForLanguage(this.LanguageId);
        if (numberOfTranslations > 0)
        {
            // Some translations for this language exist,
            // warn user and check if we should proceed with deleting.
            if (!Box::confirm(strFmt("@DocentricAX3:DeleteLabelLanguageWarning", numberOfTranslations, this.LanguageId)))
            {
                ret = false;
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupLanguage</Name>
				<Source><![CDATA[
    /// <summary>
    /// There are several forms where we lookup the available label languages.
    /// They should all use this custom lookup.
    /// </summary>
    /// <param name = "_formControl">Caller lookup control</param>
    public static void lookupLanguage(FormControl _formControl)
    {
        SysTableLookup          sysTableLookup;
        Query                   query;
        QueryBuildDataSource    qbds;

        query = new Query();

        qbds = query.addDataSource(tableNum(DocLabelLanguage));
        qbds.addOrderByField(fieldNum(DocLabelLanguage, LineNum));

        sysTableLookup = SysTableLookup::newParameters(tableNum(DocLabelLanguage), _formControl);
        sysTableLookup.addLookupfield(fieldNum(DocLabelLanguage, LanguageId));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>upDown</Name>
				<Source><![CDATA[
    /// <summary>
    /// This method is called when user clicks Up or Down buttons for sorting
    /// the label languages order. As a result, the selected label language record
    /// (provided as parameter) will swap places with the first record
    /// above or below it.
    /// </summary>
    /// <param name = "_down">True if Down button was clicked, false for Up button</param>
    /// <param name = "_swapFrom">Label language record which should swap places
    /// with the first record above (if Up is clicked) or below it (if Down is clicked)</param>
    public server static void upDown(NoYes _down, DocLabelLanguage _swapFrom)
    {
        DocLabelLanguage swapTo;

        ttsbegin;

        if (_down == NoYes::Yes)
        {
            // Find second record as the first below the provided record
            select firstonly forupdate swapTo
                order by LineNum
                where swapTo.LineNum > _swapFrom.LineNum;
        }
        else
        {
            // Find second record as the first above the provided record
            select firstonly forupdate swapTo
                order by LineNum desc
                where swapTo.LineNum < _swapFrom.LineNum;
        }

        // Swap places of these records, i.e. exchange their line numbers
        if (_swapFrom && swapTo)
        {
            LineNum newNum = swapTo.LineNum;
            swapTo.LineNum = _swapFrom.LineNum;

            _swapFrom.selectForUpdate(true);
            _swapFrom.LineNum = 0; // temporary value, to avoid duplicates
            _swapFrom.update();

            swapTo.update();

            _swapFrom.LineNum = newNum;
            _swapFrom.update();
        }

        ttscommit;
    }

]]></Source>
			</Method>
			<Method>
				<Name>maxLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the maximal line number in the label language table.
    /// It is used when adding a new language, it will get the
    /// next available line number.
    /// </summary>
    /// <returns>Maximal line number in the label language table</returns>
    public static LineNum maxLineNum()
    {
        DocLabelLanguage labelLanguage;

        select maxof(LineNum) from labelLanguage;

        return labelLanguage.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>minLineNum</Name>
				<Source><![CDATA[
    /// <summary>
    /// Returns the minimal line number in the label language tabel.
    /// Not used, but it is only logical to have this method, because
    /// we have maxLineNum()
    /// </summary>
    /// <returns>Minimal line number in the label language table</returns>
    public static LineNum minLineNum()
    {
        DocLabelLanguage labelLanguage;

        select minof(LineNum) from labelLanguage;

        return labelLanguage.LineNum;
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    /// <summary>
    /// When inserting new record, assign the next free line number to it
    /// and make sure that there are no duplicates (in case of concurrent inserting
    /// by some other user).
    /// Pattern with line numbers and up/down behaviour copied from AccountingDistributionTemplateDetail.
    /// Similar implementation exists in SysCustomfieldPicklist, insert() method, only it doesn't 
    /// check for deadlock exception.
    /// </summary>
    public void insert()
    {
        #OCCRetryCount

        try
        {
            if (this.LineNum == 0)
            {
                this.LineNum = DocLabelLanguage::maxLineNum() + 1;
            }

            super();
        }
        catch (Exception::Deadlock)
        {
            if (xSession::currentRetryCount() >= #RetryNum)
            {
                throw Exception::Deadlock;
            }
            else
            {
                // set LineNum to 0 so it will be recalculated again
                this.LineNum = 0;
                retry;
            }
        }
        catch (Exception::DuplicateKeyException)
        {
            if (xSession::currentRetryCount() >= #RetryNum)
            {
                throw Exception::DuplicateKeyException;
            }
            else
            {
                // set LineNum to 0 so it will be recalculated again
                this.LineNum = 0;
                retry;
            }
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>numberOfTranslationsWithSuffix</Name>
				<Source><![CDATA[
    /// <summary>
    /// Display method that shows number of non-empty translations
    /// and total number of translation records for the currently
    /// selected language. 
    /// </summary>
    /// <returns>Number of translations and number of translation records</returns>
    display str numberOfTranslationsWithSuffix()
    {
        str retVal;
        DocLabelTranslation labelTranslation;
        int64 cntAllRecords, cntTranslatedRecords;

        // number of translation records with non-empty translation
        select count(RecId) from labelTranslation
            where labelTranslation.LanguageId == this.LanguageId
                && labelTranslation.Translation != '';
        cntTranslatedRecords = labelTranslation.RecId;

        // total number of translation records
        select count(RecId) from labelTranslation
            where labelTranslation.LanguageId == this.LanguageId;
        cntAllRecords = labelTranslation.RecId;
        
        retVal = strFmt('%1 %2 / %3', strLwr("@DocentricAX3:TranslationFilterShowTranslated"), cntTranslatedRecords, cntAllRecords);

        return retVal;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<DeveloperDocumentation>@DocentricAX3:DocLabelLanguageDevDoc</DeveloperDocumentation>
	<FormRef>DocLabelLanguage</FormRef>
	<Label>@DocentricAX3:UDLabelLanguages</Label>
	<SubscriberAccessLevel>
		<Read>Allow</Read>
	</SubscriberAccessLevel>
	<TableGroup>Group</TableGroup>
	<TitleField1>LanguageId</TitleField1>
	<TitleField2>Comment</TitleField2>
	<CacheLookup>EntireTable</CacheLookup>
	<ReplacementKey>LineNumIdx</ReplacementKey>
	<SaveDataPerCompany>No</SaveDataPerCompany>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Comment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LineNum</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Overview</Name>
			<Label>@DocentricAX:Overview</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>LanguageId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>languageDescription</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Comment</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldReal">
			<Name>LineNum</Name>
			<AllowEdit>No</AllowEdit>
			<AssetClassification>Customer Content</AssetClassification>
			<ExtendedDataType>LineNum</ExtendedDataType>
			<HelpText>@DocentricAX4:LineNumHelp</HelpText>
			<Label>@DocentricAX4:LineNum</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>LanguageId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>LanguageId</ExtendedDataType>
			<HelpText>@DocentricAX3:UDLabelLanguageHelp</HelpText>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Comment</Name>
			<ExtendedDataType>Description</ExtendedDataType>
			<HelpText>@DocentricAX3:UDLabelLanguageCommentHelp</HelpText>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>LanguageIdIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LanguageId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>LineNumIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>LineNum</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation xmlns=""
			i:type="AxTableRelationForeignKey">
			<Name>LanguageTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<EDTRelation>Yes</EDTRelation>
			<OnDelete>Restricted</OnDelete>
			<RelatedTable>LanguageTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelatedTableRole>LanguageTable</RelatedTableRole>
			<RelationshipType>Aggregation</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>LanguageId</Name>
					<SourceEDT>LanguageId</SourceEDT>
					<Field>LanguageId</Field>
					<RelatedField>LanguageId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>