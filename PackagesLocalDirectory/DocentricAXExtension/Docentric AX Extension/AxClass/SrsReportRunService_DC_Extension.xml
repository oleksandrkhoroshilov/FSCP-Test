<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SrsReportRunService_DC_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class SrsReportRunService_DC_Extension is an extension of the class SrsReportRunService.
/// </summary>
[ExtensionOf(classStr(SrsReportRunService))]
final class SrsReportRunService_DC_Extension
{
    /* Additional members */
    private boolean suppressRdpExecutionFlagSet_DC = false;


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmSuppressRdpExecutionFlagSet_DC</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the flag that specifies whether to suppress RDP execution.
    /// </summary>
    /// <param name = "_suppressRdpExecutionFlagSet_DC">Specifies whether RDP execution must be suppressed</param>
    /// <returns>True if RDP execution must be suppressed; otherwise false</returns>
    public boolean parmSuppressRdpExecutionFlagSet_DC(boolean _suppressRdpExecutionFlagSet_DC = suppressRdpExecutionFlagSet_DC)
    {
        suppressRdpExecutionFlagSet_DC = _suppressRdpExecutionFlagSet_DC;
        return suppressRdpExecutionFlagSet_DC;
    }

]]></Source>
			</Method>
			<Method>
				<Name>preRunReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs any pre processing needed prior to running the report.
    /// </summary>
    /// <param name="_reportContract">An instance of the SrsReportDataContract class</param>
    public void preRunReport(SrsReportDataContract _reportContract)
    {
        // Check if RDP execution is suppressed.
        if (!this.parmSuppressRdpExecutionFlagSet_DC() && DocSrsReportRunUtil::suppressRdpExecution(_reportContract))
        {
            this.preProcessingFlagSet = true;
            this.preProcessingRequired = false;
        }

        this.parmSuppressRdpExecutionFlagSet_DC(true);

        next preRunReport(_reportContract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRunReport</Name>
				<Source><![CDATA[
    /// <summary>
    /// Runs any post processing needed after running the report.
    /// </summary>
    /// <param name="_rdpName">The report data provider name.</param>
    /// <param name="_executionInfo">The <c>SrsReportExecutionInfo</c> containing the pre-processed id required for cleanup.</param>
    public void postRunReport(str _rdpName, SRSReportExecutionInfo _executionInfo)
    {
        if (_executionInfo)
        {
            // Update SRS report execution info with Docentric report execution info if the Docentrc print destination has been used
            DocReportExecutionInfo docReportExecutionInfo = _executionInfo.parmReportExecutionInfo_DC();
            if (docReportExecutionInfo != null && docReportExecutionInfo.getExecutionId())
            {
                _executionInfo.parmIsSuccessful(docReportExecutionInfo.parmIsSuccess());
                _executionInfo.parmErrorMessage(docReportExecutionInfo.parmErrorMessage());
            }
        }

        next postRunReport(_rdpName, _executionInfo);
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>