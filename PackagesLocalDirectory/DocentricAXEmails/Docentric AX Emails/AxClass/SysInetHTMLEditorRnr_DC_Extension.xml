<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SysInetHTMLEditorRnr_DC_Extension</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class SysInetHTMLEditorRnr_DC_Extension is an extension of the form SysInetHTMLEditorRnr.
/// </summary>
[ExtensionOf(formStr(SysInetHTMLEditorRnr))]
final class SysInetHTMLEditorRnr_DC_Extension
{
    private SysEmailTable emailTable_DC;
    private SysEmailSystemTable emailSystemTable_DC;
    private str emailId_DC;

    
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the form.
    /// </summary>
    public void init()
    {
        next init();

        this.initControls_DC();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initControls_DC</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the controls on the form.
    /// </summary>
    private void initControls_DC()
    {
        this.fillFieldMembers_DC();

        // Show/Hide form controls.
        boolean useDocentricEmailEditor = this.useDocentricEmailEditor_DC();
        this.hideControls_DC(useDocentricEmailEditor);

        if (useDocentricEmailEditor)
        {
            // Set the form caption.
            this.design().caption("@DocentricAX:EditEmailTemplate");

            // Set the source of the BodyHtml_DC control.
            DocentricHtmlEditorControl htmlControl = BodyHtml_DC as DocentricHtmlEditorControl;
            htmlControl.parmEditorCaption(this.design().caption());

            // We are removing a hidden comment <!--Docentric--> added previously in order to correct
            // misbehaviour of the built-in SysEmailMessage::stringExpand() method
            // which causes replacement of each '\n' with '<br>'.
            // Check the pre-handler of SysEmailMessage::stringExpand() to see the implementation details.
            htmlControl.setSourceString(strReplace(this.parmHTMLContent(), DocConstant::DocentricHtmlComment, ''));
            
            str placeholderListStr = this.buildPlaceholderListForEmailEditor_DC();
            htmlControl.parmPlaceholders(placeholderListStr);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillFieldMembers_DC</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the field members.
    /// </summary>
    private void fillFieldMembers_DC()
    {
        if (this.isSystem)
        {
            // Find the parent table.
            emailSystemTable_DC = SysEmailSystemTable::find(this.emailSystemMessageTable.EmailId);
            emailId_DC = emailSystemTable_DC.EmailId;
        }
        else
        {
            // Find the parent table.
            emailTable_DC = SysEmailTable::find(this.emailMessageTable.EmailId);
            emailId_DC = emailTable_DC.EmailId;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildPlaceholderListForEmailEditor_DC</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a placeholder list for the email editor.
    /// </summary>
    /// <returns>A placeholder list</returns>
    private str buildPlaceholderListForEmailEditor_DC()
    {
        str placeholderList = DocEmailTemplateHelper::getPlaceholderDefinitionMapAsEmailEditorInputStr(emailId_DC, this.isSystem);
        return placeholderList;
    }

]]></Source>
			</Method>
			<Method>
				<Name>useDocentricEmailEditor_DC</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the flag indicating whether the Docentric email editor should be used.
    /// </summary>
    /// <returns>True/False</returns>
    private boolean useDocentricEmailEditor_DC()
    {
        if (this.isSystem)
        {
            return emailSystemTable_DC.UseDocentricEmailEditor_DC;
        }
        
        return emailTable_DC.UseDocentricEmailEditor_DC;
    }

]]></Source>
			</Method>
			<Method>
				<Name>hideControls_DC</Name>
				<Source><![CDATA[
    /// <summary>
    /// Hides the controls depending on specified parameter.
    /// </summary>
    /// <param name = "_useDocentricEditor">The flag indicating whether the Docentric email editor is used.</param>
    private void hideControls_DC(boolean _useDocentricEditor)
    {
        FormControl formCtrl;

        if (_useDocentricEditor)
        {
            /* Hide the built-in controls */
            // EmailTemplateFileUploadLabel
            formCtrl = this.control(this.controlId(formControlStr(SysInetHTMLEditorRnr, EmailTemplateFileUploadLabel)));
            formCtrl.visible(false);

            // EditorLabel
            formCtrl = this.control(this.controlId(formControlStr(SysInetHTMLEditorRnr, EditorLabel)));
            formCtrl.visible(false);
            
            // HTMLFileUpload
            formCtrl = this.control(this.controlId(formControlStr(SysInetHTMLEditorRnr, HTMLFileUpload)));
            formCtrl.visible(false);

            // HTMLEditor
            formCtrl = this.control(this.controlId(formControlStr(SysInetHTMLEditorRnr, HTMLEditor)));
            formCtrl.visible(false);
        }
        else
        {
            /* Hide Docentric email editor */
            BodyHtml_DC.visible(false);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>OKButton_OnClicked_DC</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called when the OKButton button is clicked.
    /// </summary>
    public void OKButton_OnClicked_DC()
    {
        // Set the html content from the Docentric email editor.
        if (this.useDocentricEmailEditor_DC())
        {
            DocentricHtmlEditorControl htmlControl = BodyHtml_DC as DocentricHtmlEditorControl;
            str htmlToSet = htmlControl.getSourceString();
            if (htmlToSet)
            {
                // We are adding a hidden comment <!--Docentric--> in order to correct
                // misbehaviour of the built-in SysEmailMessage::stringExpand() method
                // which causes replacement of each '\n' with '<br>'.
                // Check the pre-handler of SysEmailMessage::stringExpand() to see the implementation details.
                htmlToSet = DocConstant::DocentricHtmlComment + htmlToSet;
            }
            this.parmHTMLContent(htmlToSet);
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>