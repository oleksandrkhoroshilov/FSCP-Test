<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocEventRuleCondition</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class DocEventRuleCondition is used to view or edit alert rule condition.
/// </summary>
public final class DocEventRuleCondition
{
    private EventRule eventRule;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the class and is run directly from a menu item.
    /// </summary>
    /// <param name = "_args">An instance of the Args class</param>
    public static void main(Args _args)
    {
        if (!_args || _args.dataset() != tableNum(EventRule) || !_args.record())
        {
            DocGlobalHelper::handleException(funcName(), Error::missingRecord(tableStr(EventRule)));
        }

        DocEventRuleCondition docEventRuleCondition = new DocEventRuleCondition();
        docEventRuleCondition.eventRule = _args.record();
        docEventRuleCondition.editFilterQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFilterQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Edits the filter query in the SysQuery form. 
    /// </summary>
    private void editFilterQuery()
    {
        Object eventCreateRule = null;
        FormDataSource fds = null;

        // Get the datasource of the caller form
        if (FormDataUtil::isFormDataSource(eventRule))
        {
            fds = FormDataUtil::getFormDataSource(eventRule);
        }

        container filter = eventRule.filter();
        if (filter == conNull())
        {
            if (fds)
            {
                FormRun fr = fds.formRun();
                // Checks if the method runBase exists on the current form
                if (fr && formHasMethod(fr, identifierStr(runBase)))
                {
                    DictClass frDictClass = new DictClass(classNum(FormRun));
                    if (frDictClass)
                    {
                        // Calls the method runBase to get the filter query
                        eventCreateRule = frDictClass.callObject(identifierStr(runBase), fr);
                        if (eventCreateRule)
                        {
                            filter = eventCreateRule.queryRun().query().pack();
                        }
                    }
                }
            }
        }
        if (filter == conNull())
        {
            DocGlobalHelper::handleException(funcName(), "@DocentricAX4:EventRuleConditionFilterQueryMissing");
        }

        Query query = new Query(filter);
        QueryRun queryRun = new QueryRun(query);
        queryRun.title("@DocentricAX4:EventRuleCondition");
        queryRun.saveUserSetup(false);

        if (queryRun.prompt())
        {
            if (eventCreateRule)  // Alert rule condition has been called from the EventCreateRule form
            {
                eventCreateRule.queryRun().query(queryRun.query());
            }
            else  // Alert rule condition has been called from the EventRule form
            {
                ttsbegin;

                eventRule.filterQuery(queryRun.query());

                ttscommit;

                // Refresh the data source of the caller form
                if (fds)
                {
                    fds.research(true);
                }
            }
        }
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>