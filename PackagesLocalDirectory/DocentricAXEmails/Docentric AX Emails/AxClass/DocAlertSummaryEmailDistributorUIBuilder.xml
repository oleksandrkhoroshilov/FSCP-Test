<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocAlertSummaryEmailDistributorUIBuilder</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The DocAlertSummaryEmailDistributorUIBuilder class is a UI builder for alert summary email distributor service.
/// </summary>
public class DocAlertSummaryEmailDistributorUIBuilder extends SysOperationAutomaticUIBuilder
{
    private DialogField dialogSysEmailTemplateId;
    private DialogField dialogEmailSendingMode;
    private DialogField dialogEmailProcessingDesc;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>build</Name>
				<Source><![CDATA[
    /// <summary>
    /// Builds the dialog.
    /// </summary>
    public void build()
    {
        super();

        Dialog dlg = this.dialog() as Dialog;
        if (dlg)
        {
            // Add a static text form control to the dialog to display instructions
            FormBuildControl fbc = dlg.formBuildDesign().controlNum(1);
            FormBuildStaticTextControl instructionStaticTextCtrl = dlg.formBuildDesign().addControl(FormControlType::StaticText, identifierStr(instructionStaticText), fbc, true);
            instructionStaticTextCtrl.text("@DocentricAX4:AlertSummaryEmailDistributorInstruction");
            instructionStaticTextCtrl.visible(true);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>postBuild</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called after the build method.
    /// </summary>
    public void postBuild()
    {
        super();

        DocAlertSummaryEmailDistributorContract docAlertSummaryEmailDistributorContract = this.dataContractObject() as DocAlertSummaryEmailDistributorContract;

        this.bindContractFieldsToDialogFields(docAlertSummaryEmailDistributorContract);
    }

]]></Source>
			</Method>
			<Method>
				<Name>postRun</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called after the run method.
    /// </summary>
    public void postRun()
    {
        super();

        dialogEmailProcessingDesc.allowEdit(dialogEmailSendingMode.value() == DocEmailSendingMode::EmailProcessing);

        this.subscribeDialogFieldEvents();

        Dialog dlg = this.dialog() as Dialog;
        if (dlg)
        {
            // Change the current dialog caption
            dlg.dialogForm().formRun().design().caption("@DocentricAX4:AlertSummaryEmailDistributor");
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>bindContractFieldsToDialogFields</Name>
				<Source><![CDATA[
    /// <summary>
    /// Binds the contract fields with the dialog fields.
    /// </summary>
    /// <param name = "_docAlertSummaryEmailDistributorContract">An instance of the data contract</param>
    private void bindContractFieldsToDialogFields(DocAlertSummaryEmailDistributorContract _docAlertSummaryEmailDistributorContract)
    {
        dialogSysEmailTemplateId = this.bindInfo().getDialogField(_docAlertSummaryEmailDistributorContract, methodStr(DocAlertSummaryEmailDistributorContract, parmSysEmailTemplateId));
        dialogEmailSendingMode = this.bindInfo().getDialogField(_docAlertSummaryEmailDistributorContract, methodStr(DocAlertSummaryEmailDistributorContract, parmEmailSendingMode));
        dialogEmailProcessingDesc = this.bindInfo().getDialogField(_docAlertSummaryEmailDistributorContract, methodStr(DocAlertSummaryEmailDistributorContract, parmEmailProcessingDesc));
    }

]]></Source>
			</Method>
			<Method>
				<Name>subscribeDialogFieldEvents</Name>
				<Source><![CDATA[
    /// <summary>
    /// Subscribes to the dialog field events.
    /// </summary>
    private void subscribeDialogFieldEvents()
    {
        dialogSysEmailTemplateId.registerOverrideMethod(
            methodStr(FormStringControl, lookup),
            methodStr(DocAlertSummaryEmailDistributorUIBuilder, lookupSysEmailTemplateId),
            this);

        dialogEmailSendingMode.registerOverrideMethod(
            methodStr(FormComboBoxControl, modified),
            methodStr(DocAlertSummaryEmailDistributorUIBuilder, modifiedEmailSendingMode),
            this);
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupSysEmailTemplateId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called when the lookup event for the SysEmailTemplateId is fired.
    /// </summary>
    /// <param name = "_formControl">Form control</param>
    private void lookupSysEmailTemplateId(FormControl _formControl)
    {
        DocAlertSummaryEmailStatusTable::lookupEmailId(_formControl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>modifiedEmailSendingMode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Called when the value of the EmailSendingMode is modified.
    /// </summary>
    /// <param name = "_formControl">Form control</param>
    /// <returns>True/False</returns>
    private boolean modifiedEmailSendingMode(FormComboBoxControl _formControl)
    {
        DocEmailSendingMode emailSendingMode = _formControl.selection();

        dialogEmailProcessingDesc.allowEdit(emailSendingMode == DocEmailSendingMode::EmailProcessing);

        return true;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>