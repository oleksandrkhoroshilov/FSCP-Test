<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocAlertSummaryEmailDistributorController</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The DocAlertSummaryEmailDistributorController class is a controller for alert summary email distributor service.
/// </summary>
public class DocAlertSummaryEmailDistributorController extends SysOperationServiceController
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the DocAlertSummaryEmailDistributorController class.
    /// </summary>
    protected void new()
    {
        super(classStr(DocAlertSummaryEmailDistributorService), methodStr(DocAlertSummaryEmailDistributorService, process), SysOperationExecutionMode::Synchronous);
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the DocSysEmailCleanupController class.
    /// </summary>
    /// <param name = "_executionMode">Execution mode</param>
    /// <returns>An instance of the DocSysEmailCleanupController</returns>
    public static DocAlertSummaryEmailDistributorController construct(SysOperationExecutionMode _executionMode = SysOperationExecutionMode::Synchronous)
    {
        DocAlertSummaryEmailDistributorController controller = new DocAlertSummaryEmailDistributorController();
        controller.parmExecutionMode(_executionMode);
        return controller;
    }

]]></Source>
			</Method>
			<Method>
				<Name>main</Name>
				<Source><![CDATA[
    /// <summary>
    /// Main method of DocAlertSummaryEmailDistributorController class.
    /// </summary>
    /// <param name = "_args">Args</param>
    public static void main(Args _args)
    {
        DocAlertSummaryEmailDistributorController controller = DocAlertSummaryEmailDistributorController::construct();
        controller.parmArgs(_args);
        controller.startOperation();
    }

]]></Source>
			</Method>
			<Method>
				<Name>caption</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a default caption of the dialog.
    /// </summary>
    /// <returns>A class description</returns>
    public ClassDescription caption()
    {
        return "@DocentricAX4:AlertSummaryEmailDistributorTask";
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOriginalQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the original query that can be used in the SysQuery form.
    /// </summary>
    /// <param name="_queryKey">Key identifying the query control.</param>
    /// <param name="_queryName">Name of query.</param>
    /// <returns>Container with the packed query.</returns>
    /// <remarks>
    /// The query does not exist in AOT because it is created in code. We can
    /// only get the original query by calling the query creation method in the
    /// data contract.
    /// </remarks>
    protected container getOriginalQuery(str _queryKey, QueryName _queryName)
    {
        container origQueryPacked = super(_queryKey, _queryName);

        if (!origQueryPacked)
        {
            DocAlertSummaryEmailDistributorContract queryContract = this.getContractByQueryKey(_queryKey);
            if (queryContract)
            {
                Query origQuery = queryContract.getOriginalQuery();
                if (origQuery)
                {
                    origQueryPacked = origQuery.pack();
                    originalQueryPackedMap.insert(_queryKey, origQueryPacked);
                }
            }
        }
        return origQueryPacked;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getContractByQueryKey</Name>
				<Source><![CDATA[
    /// <summary>
    /// Retrives a contract object according to the specified query key.
    /// </summary>
    /// <param name="_queryKey">A query key.</param>
    /// <returns>Returns a contract object.</returns>
    private Object getContractByQueryKey(str _queryKey)
    {
        str contractName = this.extractContractName(_queryKey);
        return this.getDataContractObject(contractName);
    }

]]></Source>
			</Method>
			<Method>
				<Name>extractContractName</Name>
				<Source><![CDATA[
    /// <summary>
    /// Extracts a contract name from the specified query key.
    /// </summary>
    /// <param name="_queryKey">A query key.</param>
    /// <returns>Returns a contract name.</returns>
    private str extractContractName(str _queryKey)
    {
        int dotPosition = strFind(_queryKey, '.', 1, strLen(_queryKey));
        if (dotPosition)
        {
            return subStr(_queryKey, 1, dotPosition - 1);
        }
        return _queryKey;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>