<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocAlertSummaryEmailDistributorContract</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The DocAlertSummaryEmailDistributorContract class is a data contract class for alert summary email distributor service.
/// </summary>
[DataContractAttribute,
    SysOperationContractProcessingAttribute(classstr(DocAlertSummaryEmailDistributorUIBuilder)),
    SysOperationGroupAttribute(identifierStr(EmailTemplateGroup),literalStr("@SYS80818"), '1'),
    SysOperationGroupAttribute(identifierStr(EmailOptionsGroup), literalStr("@DocentricAX4:EmailOptions"), '2'),
    SysOperationGroupAttribute(identifierStr(EmailSendingModeGroup), literalStr("@DocentricAX2:EmailingMode"), '3'),
    SysOperationGroupAttribute(identifierStr(EmailRecipientsGroup), literalStr("@DocentricAX4:EmailRecipients"), '4')]
public class DocAlertSummaryEmailDistributorContract implements SysOperationInitializable, SysOperationValidatable
{
    private str packedQuery;
    private SysEmailSystemId sysEmailTemplateId;
    private int maxAlertsInSummary;
    private DocEmailMsgPriority emailMsgPriority;
    private DocEmailCc emailCc;
    private DocEmailBcc emailBcc;
    private DocEmailSendingMode emailSendingMode;
    private SysEmailDescriptionType emailProcessingDesc;

}
]]></Declaration>
		<Methods>
			<Method>
				<Name>parmSysEmailTemplateId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the system email template.
    /// </summary>
    /// <param name = "_sysEmailTemplateId">System email template</param>
    /// <returns>System email template</returns>
    [DataMemberAttribute,
        SysOperationLabelAttribute(literalStr("@DocentricAX4:AlertSummaryEmailDistributorSysEmailTemplateId")),
        SysOperationHelpTextAttribute(literalStr("@DocentricAX4:AlertSummaryEmailDistributorSysEmailTemplateIdHelp")),
        SysOperationGroupMemberAttribute(identifierStr(EmailTemplateGroup)),
        SysOperationDisplayOrderAttribute('1')]
    public SysEmailSystemId parmSysEmailTemplateId(SysEmailSystemId _sysEmailTemplateId = sysEmailTemplateId)
    {
        sysEmailTemplateId = _sysEmailTemplateId;
        return sysEmailTemplateId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmMaxAlertsInSummary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the maximum value of alerts included in summary.
    /// </summary>
    /// <param name = "_maxAlertsInSummary">Maximum value of alerts included in summary</param>
    /// <returns>Maximum value of alerts included in summary</returns>
    [DataMemberAttribute,
        SysOperationLabelAttribute(literalStr("@DocentricAX4:AlertSummaryEmailDistributorMaxAlertsInSummary")),
        SysOperationHelpTextAttribute(literalStr("@DocentricAX4:AlertSummaryEmailDistributorMaxAlertsInSummaryHelp")),
        SysOperationGroupMemberAttribute(identifierStr(EmailOptionsGroup)),
        SysOperationDisplayOrderAttribute('1')]
    public int parmMaxAlertsInSummary(int _maxAlertsInSummary = maxAlertsInSummary)
    {
        maxAlertsInSummary = _maxAlertsInSummary;
        return maxAlertsInSummary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailCc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the Cc recipient email addresses.
    /// </summary>
    /// <param name = "_emailCc">Cc recipient email addresses</param>
    /// <returns>Cc recipient email addresses</returns>
    [DataMemberAttribute,
        SysOperationHelpTextAttribute(literalStr("@DocentricAX4:AlertSummaryEmailDistributorEmailCcHelp")),
        SysOperationGroupMemberAttribute(identifierStr(EmailRecipientsGroup)),
        SysOperationDisplayOrderAttribute('1')]
    public DocEmailCc parmEmailCc(DocEmailCc _emailCc = emailCc)
    {
        emailCc = _emailCc;
        return emailCc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailBcc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the Bcc recipient email addresses.
    /// </summary>
    /// <param name = "_emailBcc">Bcc recipient email addresses</param>
    /// <returns>Bcc recipient email addresses</returns>
    [DataMemberAttribute,
        SysOperationHelpTextAttribute(literalStr("@DocentricAX4:AlertSummaryEmailDistributorEmailBccHelp")),
        SysOperationGroupMemberAttribute(identifierStr(EmailRecipientsGroup)),
        SysOperationDisplayOrderAttribute('2')]
    public DocEmailBcc parmEmailBcc(DocEmailBcc _emailBcc = emailBcc)
    {
        emailBcc = _emailBcc;
        return emailBcc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailSendingMode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the email sending mode.
    /// </summary>
    /// <param name = "_emailSendingMode">Email sending mode</param>
    /// <returns>Email sending mode</returns>
    [DataMemberAttribute,
        SysOperationHelpTextAttribute(literalStr("@DocentricAX4:AlertSummaryEmailDistributorEmailSendingModeHelp")),
        SysOperationGroupMemberAttribute(identifierStr(EmailSendingModeGroup)),
        SysOperationDisplayOrderAttribute('1')]
    public DocEmailSendingMode parmEmailSendingMode(DocEmailSendingMode _emailSendingMode = emailSendingMode)
    {
        emailSendingMode = _emailSendingMode;
        return emailSendingMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailProcessingDesc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the email processing description.
    /// </summary>
    /// <param name = "_emailProcessingDesc">Email processing description</param>
    /// <returns>Email processing description</returns>
    [DataMemberAttribute,
        SysOperationLabelAttribute(literalStr("@DocentricAX4:AlertSummaryEmailDistributorEmailProcessingDesc")),
        SysOperationHelpTextAttribute(literalStr("@DocentricAX4:AlertSummaryEmailDistributorEmailProcessingDescHelp")),
        SysOperationGroupMemberAttribute(identifierStr(EmailSendingModeGroup)),
        SysOperationDisplayOrderAttribute('2')]
    public SysEmailDescriptionType parmEmailProcessingDesc(SysEmailDescriptionType _emailProcessingDesc = emailProcessingDesc)
    {
        emailProcessingDesc = _emailProcessingDesc;
        return emailProcessingDesc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the packed query string used for additional filtering.
    /// </summary>
    /// <param name = "_packedQuery">Packed query string</param>
    /// <returns>Packed query string</returns>
    [DataMemberAttribute,
        AifQueryTypeAttribute(identifierStr(_packedQuery), identifierStr(DocAlertSummaryEmailDistributor))]
    public str parmQuery(str _packedQuery = packedQuery)
    {
        packedQuery = _packedQuery;
        return packedQuery;
    }

]]></Source>
			</Method>
			<Method>
				<Name>initialize</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the data contract object.
    /// </summary>
    public void initialize()
    {
        maxAlertsInSummary = 50;
        emailProcessingDesc = "@DocentricAX4:AlertSummaryEmailDistributorEmailProcessingDescDefaultValue";
        this.setQuery(this.buildQuery());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getOriginalQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the original query.
    /// </summary>
    /// <returns>Query object</returns>
    public Query getOriginalQuery()
    {
        return this.buildQuery();
    }

]]></Source>
			</Method>
			<Method>
				<Name>buildQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a Query object with predefined ranges used for filtering.
    /// </summary>
    /// <returns>A Query object</returns>
    private Query buildQuery()
    {
        // Create a query with predefined ranges used for filtering
        Query query = new Query();
        query.title("@DocentricAX4:AlertSummaryEmailDistributorQueryTitle");
        query.name(identifierStr(DocAlertSummaryEmailDistributor));
        QueryBuildDataSource qbdsEventInbox = query.addDataSource(tableNum(EventInbox), tableStr(EventInbox));

        QueryBuildRange qbrNotificationSource = qbdsEventInbox.addRange(fieldNum(EventInbox, NotificationSource));
        qbrNotificationSource.status(RangeStatus::Hidden);
        qbrNotificationSource.value(queryValue(EventNotificationSource::Alerts));

        qbdsEventInbox.addRange(fieldNum(EventInbox, InboxId));
        qbdsEventInbox.addRange(fieldNum(EventInbox, RuleId));
        
        QueryBuildRange qbrAlertCreatedDateTime = qbdsEventInbox.addRange(fieldNum(EventInbox, AlertCreatedDateTime));
        qbrAlertCreatedDateTime.value('(greaterThanUtcDate(-7))');

        QueryBuildDataSource qbdsEventRule = qbdsEventInbox.addDataSource(tableNum(EventRule), tableStr(EventRule));
        qbdsEventRule.addLink(fieldNum(EventInbox, RuleId), fieldNum(EventRule, RuleId));
        qbdsEventRule.joinMode(JoinMode::InnerJoin);
        qbdsEventRule.relations(false);
        qbdsEventRule.fetchMode(QueryFetchMode::One2One);

        QueryBuildDataSource qbdsDocAlertSummaryEmailStatusTable = qbdsEventInbox.addDataSource(tableNum(DocAlertSummaryEmailStatusTable), tableStr(DocAlertSummaryEmailStatusTable));
        qbdsDocAlertSummaryEmailStatusTable.addLink(fieldNum(EventInbox, RecId), fieldNum(DocAlertSummaryEmailStatusTable, EventInboxRecId));
        qbdsDocAlertSummaryEmailStatusTable.joinMode(JoinMode::InnerJoin);
        qbdsDocAlertSummaryEmailStatusTable.relations(false);
        qbdsDocAlertSummaryEmailStatusTable.fetchMode(QueryFetchMode::One2One);

        QueryBuildRange qbrStatus = qbdsDocAlertSummaryEmailStatusTable.addRange(fieldNum(DocAlertSummaryEmailStatusTable, Status));
        qbrStatus.status(RangeStatus::Hidden);
        qbrStatus.value(strFmt('%1,%2,%3', queryValue(DocAlertSummaryEmailStatus::Created), queryValue(DocAlertSummaryEmailStatus::PartiallyProcessed), queryValue(DocAlertSummaryEmailStatus::Error)));

        QueryBuildDataSource qbdsDocAlertSummaryEmailStatusLine = qbdsDocAlertSummaryEmailStatusTable.addDataSource(tableNum(DocAlertSummaryEmailStatusLine), tableStr(DocAlertSummaryEmailStatusLine));
        qbdsDocAlertSummaryEmailStatusLine.addLink(fieldNum(DocAlertSummaryEmailStatusTable, RecId), fieldNum(DocAlertSummaryEmailStatusLine, AlertSummaryEmailStatusTableRecId));
        qbdsDocAlertSummaryEmailStatusLine.joinMode(JoinMode::InnerJoin);
        qbdsDocAlertSummaryEmailStatusLine.relations(false);
        qbdsDocAlertSummaryEmailStatusLine.fetchMode(QueryFetchMode::One2One);

        QueryBuildRange qbrStatusLine = qbdsDocAlertSummaryEmailStatusLine.addRange(fieldNum(DocAlertSummaryEmailStatusLine, Status));
        qbrStatusLine.status(RangeStatus::Hidden);
        qbrStatusLine.value(strFmt('%1,%2,%3', queryValue(DocAlertSummaryEmailStatus::Created), queryValue(DocAlertSummaryEmailStatus::PartiallyProcessed), queryValue(DocAlertSummaryEmailStatus::Error)));

        return query;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets a packed query string from the Query object.
    /// </summary>
    /// <param name = "_query">A Query object</param>
    public void setQuery(Query _query)
    {
        packedQuery = SysOperationHelper::base64Encode(_query.pack());
    }

]]></Source>
			</Method>
			<Method>
				<Name>getQuery</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets a Query object from the packed query string.
    /// </summary>
    /// <returns>A Query object</returns>
    public Query getQuery()
    {
        return new Query(SysOperationHelper::base64Decode(packedQuery));
    }

]]></Source>
			</Method>
			<Method>
				<Name>validate</Name>
				<Source><![CDATA[
    /// <summary>
    /// Validates the parameters.
    /// </summary>
    /// <returns>True if successful; otherwise false</returns>
    public boolean validate()
    {
        boolean ret = true;

        /*********************************   DOCENTRIC AX FREE EDITION LICENSE NOTICE   *********************************/
        /*
            In case that you are using Docentric AX Free Edition, changing these parts of the source code related to the licensing
            is STRICTLY FORBIDDEN and DOES NOT COMPLY with Docentric AX Free Edition License, which you accepted by installing
            the Docentric AX Free Edition product.
            You must keep intact all parts of the source code related to the licensing of the full product version.
            Read more: https://ax.docentric.com/free-edition-license/
            */
        /*********************************   DOCENTRIC AX FREE EDITION LICENSE NOTICE   *********************************/

        // If the Alert summary emails are used, check the license. This feature cannot be used with Free Edition!
        // This call will throw an exception if the license is not found or if the license is invalid, expired or insufficient.
        DocLicenseMng::checkLicense(DocConstant::FeatureAlertSummaryEmails, "@DocentricAX4:AlertSummaryEmailDistributorProcessFailed");


        // Check if the number of maximum alerts in summary is within specified limits
        int minAlerts = 1;
        int maxAlerts = 500;
        if (maxAlertsInSummary < minAlerts || maxAlertsInSummary > maxAlerts)
        {
            ret = ret && checkFailed(strFmt("@DocentricAX4:AlertSummaryEmailDistributorMaxAlertsInSummaryError", minAlerts, maxAlerts));
        }

        // Check if the criteria for the AlertsCreatedDateTime field is set
        if (ret)
        {
            boolean isQbrAlertCreatedDateTimeSet = false;
            Query query = this.getQuery();
            if (query)
            {
                QueryBuildDatasource qbdsEventInbox = query.dataSourceName(tableStr(EventInbox));
                if (qbdsEventInbox)
                {
                    QueryBuildRange qbrAlertCreatedDateTime = qbdsEventInbox.findRange(fieldNum(EventInbox, AlertCreatedDateTime));
                    if (qbrAlertCreatedDateTime && qbrAlertCreatedDateTime.value())
                    {
                        isQbrAlertCreatedDateTimeSet = true;
                    }
                }
            }
            if (!isQbrAlertCreatedDateTimeSet)
            {
                ret = Box::yesNo("@DocentricAX4:AlertSummaryEmailDistributorQbrAlertCreatedDateTimeNotSet", DialogButton::No);
            }
        }
        
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>