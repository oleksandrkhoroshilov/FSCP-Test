<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>DocAlertSummaryEmailContextInfoParams</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class DocAlertSummaryEmailContextInfoParams is used to store the context iformation for alert summary emails.
/// </summary>
public class DocAlertSummaryEmailContextInfoParams implements SysPackable
{
    private str emailToAddr;
    private str emailCcAddr;
    private str emailBccAddr;
    private DocEmailSendingMode emailSendingMode;
    private SysEmailDescriptionType emailProcessingDesc;
    private DocEmailContextInfo emailContextInfo;
    private SysEmailProcessorId processorId;
    private int maxAlertsInSummary;
    private int alertsProcessed;
    private int alertsRemaining;

    #define.CurrentVersion(1)
    #localmacro.CurrentList
        emailToAddr,
        emailCcAddr,
        emailBccAddr,
        emailSendingMode,
        emailProcessingDesc,
        emailContextInfo,
        processorId,
        maxAlertsInSummary,
        alertsProcessed,
        alertsRemaining
    #endmacro


}
]]></Declaration>
		<Methods>
			<Method>
				<Name>getEmailToAddr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the To e-mail address.
    /// </summary>
    /// <returns>To e-mail address</returns>
    public str getEmailToAddr()
    {
        return emailToAddr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEmailToAddr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the To e-mail address.
    /// </summary>
    /// <param name = "_emailToAddr">To e-mail address</param>
    private void setEmailToAddr(str _emailToAddr)
    {
        emailToAddr = _emailToAddr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailCcAddr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the Cc e-mail address(es).
    /// </summary>
    /// <param name = "_emailCcAddr">Cc e-mail address(es)</param>
    /// <returns>Cc e-mail address(es)</returns>
    public str parmEmailCcAddr(str _emailCcAddr = emailCcAddr)
    {
        emailCcAddr = _emailCcAddr;
        return emailCcAddr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailBccAddr</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the Bcc e-mail address(es).
    /// </summary>
    /// <param name = "_emailBccAddr">Bcc e-mail address(es)</param>
    /// <returns>Bcc e-mail address(es)</returns>
    public str parmEmailBccAddr(str _emailBccAddr = emailBccAddr)
    {
        emailBccAddr = _emailBccAddr;
        return emailBccAddr;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailSendingMode</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the email sending mode.
    /// </summary>
    /// <param name = "_emailSendingMode">Email sending mode</param>
    /// <returns>Email sending mode</returns>
    public DocEmailSendingMode parmEmailSendingMode(DocEmailSendingMode _emailSendingMode = emailSendingMode)
    {
        emailSendingMode = _emailSendingMode;
        return emailSendingMode;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailProcessingDesc</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the email processing description.
    /// </summary>
    /// <param name = "_emailProcessingDesc">Email processing description</param>
    /// <returns>Email processing description</returns>
    public SysEmailDescriptionType parmEmailProcessingDesc(SysEmailDescriptionType _emailProcessingDesc = emailProcessingDesc)
    {
        emailProcessingDesc = _emailProcessingDesc;
        return emailProcessingDesc;
    }

]]></Source>
			</Method>
			<Method>
				<Name>parmEmailContextInfo</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets/Sets the email context information.
    /// </summary>
    /// <param name = "_emailContextInfo">Email context information</param>
    /// <returns>Email context information</returns>
    public DocEmailContextInfo parmEmailContextInfo(DocEmailContextInfo _emailContextInfo = emailContextInfo)
    {
        emailContextInfo = _emailContextInfo;
        return emailContextInfo;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getProcessorId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the processor Id. 
    /// This is a unique identifier created each time the DocAlertSummaryEmailDistributor service is started
    /// and identifies the records in the DocAlertSummaryEmailStatusTable and DocAlertSummaryEmailStatusLine tables
    /// that are processed by the service.
    /// </summary>
    /// <returns>Processor Id</returns>
    public SysEmailProcessorId getProcessorId()
    {
        return processorId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setProcessorId</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the processor Id.
    /// </summary>
    /// <param name = "_processorId">Processor Id</param>
    private void setProcessorId(SysEmailProcessorId _processorId)
    {
        processorId = _processorId;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getMaxAlertsInSummary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the maximum number of alerts included in the alert summary email.
    /// </summary>
    /// <returns>Maximum number of alerts</returns>
    public int getMaxAlertsInSummary()
    {
        return maxAlertsInSummary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setMaxAlertsInSummary</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the maximum number of alerts included in the alert summary email.
    /// </summary>
    /// <param name = "_maxAlertsInSummary">Maximum number of alerts in summary</param>
    private void setMaxAlertsInSummary(int _maxAlertsInSummary)
    {
        maxAlertsInSummary = _maxAlertsInSummary;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAlertsProcessed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of alerts processed.
    /// This is the number of alerts the DocAlertSummaryEmailDistributor service has processed.
    /// If this number exceeds the maximum number of alerts included in the summary email 
    /// (maxAlertsInSummary), only this number of alerts will be included in the summary email.
    /// </summary>
    /// <returns>Number of processed alerts</returns>
    public int getAlertsProcessed()
    {
        return alertsProcessed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAlertsProcessed</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the number of alerts processed.
    /// </summary>
    /// <param name = "_alertsProcessed">Number of processed alerts</param>
    private void setAlertsProcessed(int _alertsProcessed)
    {
        alertsProcessed = _alertsProcessed;
    }

]]></Source>
			</Method>
			<Method>
				<Name>getAlertsRemaining</Name>
				<Source><![CDATA[
    /// <summary>
    /// Gets the number of remaining alerts.
    /// This is the number of alerts that were not included in the summary email because
    /// the number of alerts processed the DocAlertSummaryEmailDistributor service exceeded 
    /// the maximum number of alerts included in the summary email (maxAlertsInSummary).
    /// </summary>
    /// <returns>Number of remaining alerts</returns>
    public int getAlertsRemaining()
    {
        return alertsRemaining;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setAlertsRemaining</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the number of alerts remaining.
    /// </summary>
    /// <param name = "_alertsRemaining">Number of remaining alerts</param>
    private void setAlertsRemaining(int _alertsRemaining)
    {
        alertsRemaining = _alertsRemaining;
    }

]]></Source>
			</Method>
			<Method>
				<Name>construct</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the DocAlertSummaryEmailContextInfoParams class.
    /// </summary>
    /// <param name = "_processorId">Processor Id</param>
    /// <param name = "_emailToAddr">To e-mail address</param>
    /// <param name = "_maxAlertsInSummary">Maximum number of alerts in summary</param>
    /// <param name = "_alertsProcessed">Number of processed alerts</param>
    /// <param name = "_alertsRemaining">Number of remaining alerts</param>
    /// <returns>An instance of the DocAlertSummaryEmailParams class</returns>
    public static DocAlertSummaryEmailContextInfoParams construct(
        SysEmailProcessorId _processorId,
        str _emailToAddr,
        int _maxAlertsInSummary,
        int _alertsProcessed,
        int _alertsRemaining)
    {
        DocAlertSummaryEmailContextInfoParams contextInfoParams = new DocAlertSummaryEmailContextInfoParams();
        contextInfoParams.setProcessorId(_processorId);
        contextInfoParams.setEmailToAddr(_emailToAddr);
        contextInfoParams.setMaxAlertsInSummary(_maxAlertsInSummary);
        contextInfoParams.setAlertsProcessed(_alertsProcessed);
        contextInfoParams.setAlertsRemaining(_alertsRemaining);

        return contextInfoParams;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createFromAlertSummaryEmailContextInfoContainer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates an instance of the DocAlertSummaryEmailContextInfoParams class from the provided container.
    /// If container is not provided or it doesn't represent Alert Summary Email Context Info, which is the case
    /// if the first element in the container is the value 'Alert' - a symbol value of the enum element
    /// DocEmailTemplateEventNotificationSource::Alert, returns null.
    /// </summary>
    /// <param name = "_alertSummaryEmailContextInfoContainer">Alert Summary Email Context Info container</param>
    /// <returns>An instance of the DocAlertSummaryEmailContextInfoParams class</returns>
    public static DocAlertSummaryEmailContextInfoParams createFromAlertSummaryEmailContextInfoContainer(container _alertSummaryEmailContextInfoContainer)
    {
        if (_alertSummaryEmailContextInfoContainer != conNull() &&
            conPeek(_alertSummaryEmailContextInfoContainer, 1) == enum2Symbol(enumNum(DocEmailTemplateEventNotificationSource), DocEmailTemplateEventNotificationSource::Alert))
        {
            DocAlertSummaryEmailContextInfoParams alertSummaryEmailContextInfoParams = new DocAlertSummaryEmailContextInfoParams();
            if (conLen(_alertSummaryEmailContextInfoContainer) > 1)
            {
                alertSummaryEmailContextInfoParams.unpack(conPeek(_alertSummaryEmailContextInfoContainer, 2));
            }
            return alertSummaryEmailContextInfoParams;
        }

        return null;
    }

]]></Source>
			</Method>
			<Method>
				<Name>createAlertSummaryEmailContextInfoContainer</Name>
				<Source><![CDATA[
    /// <summary>
    /// Creates a context info container for alert summary email.
    /// A container has 1 elements:
    /// - 'Alert' - a symbol value of the enum element DocEmailTemplateEventNotificationSource::Alert
    /// - an instance of the DocAlertSummaryEmailContextInfoParams class as packed container
    /// </summary>
    /// <param name = "_alertSummaryEmailContextInfoParams">The DocAlertSummaryEmailContextInfoParams object contains alert summary email context info</param>
    /// <returns>A context info container for alert summary email</returns>
    public static container createAlertSummaryEmailContextInfoContainer(DocAlertSummaryEmailContextInfoParams _alertSummaryEmailContextInfoParams)
    {
        return [enum2Symbol(enumNum(DocEmailTemplateEventNotificationSource), DocEmailTemplateEventNotificationSource::Alert), _alertSummaryEmailContextInfoParams.pack()];
    }

]]></Source>
			</Method>
			<Method>
				<Name>new</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes a new instace of the DocAlertSummaryEmailContextInfoParams class.
    /// </summary>
    protected void new()
    {
    }

]]></Source>
			</Method>
			<Method>
				<Name>pack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Serializes the current instance of the DocAlertSummaryEmailContextInfoParams class.
    /// </summary>
    /// <returns>A container that contains the current instance of the DocAlertSummaryEmailContextInfoParams class</returns>
    public container pack()
    {
        return [#CurrentVersion, #CurrentList];
    }

]]></Source>
			</Method>
			<Method>
				<Name>unpack</Name>
				<Source><![CDATA[
    /// <summary>
    /// Deserializes the _packedClass parameter to an instance of the DocAlertSummaryEmailContextInfoParams class.
    /// </summary>
    /// <param name="_packedClass">The container from which to deserialize the instance.</param>
    /// <returns>True if deserialization was successful; otherwise, false</returns>
    public boolean unpack(container _packedClass)
    {
        boolean ret = false;
        int version = RunBase::getVersion(_packedClass);

        switch (version)
        {
            case #CurrentVersion:
                [version, #CurrentList] = _packedClass;
                ret = true;
                break;

            default :
                ret = false;
        }
        return ret;
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>