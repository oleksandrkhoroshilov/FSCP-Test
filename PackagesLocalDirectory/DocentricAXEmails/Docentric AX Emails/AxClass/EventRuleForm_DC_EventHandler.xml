<?xml version="1.0" encoding="utf-8"?>
<AxClass xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>EventRuleForm_DC_EventHandler</Name>
	<SourceCode>
		<Declaration><![CDATA[
/// <summary>
/// The class EventRuleForm_DC_EventHandler contains event handlers for the form EventRule.
/// </summary>
public class EventRuleForm_DC_EventHandler
{
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>EmailId_DC_OnLookup</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form control Lookup event handler.
    /// </summary>
    /// <param name = "_sender">Sender</param>
    /// <param name = "_e">Event args</param>
    [FormControlEventHandler(formControlStr(EventRule, EmailId_DC), FormControlEventType::Lookup)]
    public static void EmailId_DC_OnLookup(FormControl _sender, FormControlEventArgs _e)
    {
        FormRun fr = _sender.formRun();
        fr.EmailId_DC_OnLookup_DC(_sender as FormStringControl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>EventRule_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form data source initialized event handler.
    /// </summary>
    /// <param name = "_sender">Sender</param>
    /// <param name = "_e">Event args</param>
    [FormDataSourceEventHandler(formDataSourceStr(EventRule, EventRule), FormDataSourceEventType::Initialized)]
    public static void EventRule_OnInitialized(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        FormRun fr = _sender.formRun();
        fr.EventRule_OnInitialized_DC(_sender);
    }

]]></Source>
			</Method>
			<Method>
				<Name>EventRule_OnActivated</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form data source activated event handler.
    /// </summary>
    /// <param name = "_sender">Sender</param>
    /// <param name = "_e">Event args</param>
    [FormDataSourceEventHandler(formDataSourceStr(EventRule, EventRule), FormDataSourceEventType::Activated)]
    public static void EventRule_OnActivated(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        FormRun fr = _sender.formRun();
        fr.EventRule_OnActivated_DC(_sender);
    }

]]></Source>
			</Method>
			<Method>
				<Name>EventRule_OnQueryExecuting</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form data source query executing event handler.
    /// </summary>
    /// <param name="_sender">Sender</param>
    /// <param name="_e">Event args</param>
    [FormDataSourceEventHandler(formDataSourceStr(EventRule, EventRule), FormDataSourceEventType::QueryExecuting)]
    public static void EventRule_OnQueryExecuting(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        FormRun fr = _sender.formRun();
        fr.EventRule_OnQueryExecuting_DC(_sender);
    }

]]></Source>
			</Method>
			<Method>
				<Name>EventRuleData_AlertField_OnInitialized</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form data source initialized event handler.
    /// </summary>
    /// <param name = "_sender">Sender</param>
    /// <param name = "_e">Event args</param>
    [FormDataSourceEventHandler(formDataSourceStr(EventRule, EventRuleData_AlertField), FormDataSourceEventType::Initialized)]
    public static void EventRuleData_AlertField_OnInitialized(FormDataSource _sender, FormDataSourceEventArgs _e)
    {
        FormRun fr = _sender.formRun();
        fr.EventRuleData_AlertField_OnInitialized_DC(_sender);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ShowRules_DC_OnSelectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form control selection chnaged event handler.
    /// </summary>
    /// <param name = "_sender">Sender</param>
    /// <param name = "_e">Event args</param>
    [FormControlEventHandler(formControlStr(EventRule, ShowRules_DC), FormControlEventType::SelectionChanged)]
    public static void ShowRules_DC_OnSelectionChanged(FormControl _sender, FormControlEventArgs _e)
    {
        FormRun fr = _sender.formRun();
        fr.ShowRules_DC_OnSelectionChanged_DC();
    }

]]></Source>
			</Method>
			<Method>
				<Name>FilterAdmin_DC_OnSelectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form control selection changed event handler.
    /// </summary>
    /// <param name = "_sender">Sender</param>
    /// <param name = "_e">Event args</param>
    [FormControlEventHandler(formControlStr(EventRule, FilterAdmin_DC), FormControlEventType::SelectionChanged)]
    public static void FilterAdmin_DC_OnSelectionChanged(FormControl _sender, FormControlEventArgs _e)
    {
        FormRun fr = _sender.formRun();
        fr.FilterAdmin_DC_OnSelectionChanged_DC(_sender as FormComboBoxControl);
    }

]]></Source>
			</Method>
			<Method>
				<Name>ShowRulesForUserAdmin_DC_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form control modified event handler.
    /// </summary>
    /// <param name = "_sender">Sender</param>
    /// <param name = "_e">Event args</param>
    [FormControlEventHandler(formControlStr(EventRule, ShowRulesForUserAdmin_DC), FormControlEventType::Modified)]
    public static void ShowRulesForUserAdmin_DC_OnModified(FormControl _sender, FormControlEventArgs _e)
    {
        FormRun fr = _sender.formRun();
        fr.ShowRulesForUserAdmin_DC_OnModified_DC();
    }

]]></Source>
			</Method>
			<Method>
				<Name>ShowRulesAdmin_DC_OnSelectionChanged</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form control selection changed event handler.
    /// </summary>
    /// <param name = "_sender">Sender</param>
    /// <param name = "_e">Event args</param>
    [FormControlEventHandler(formControlStr(EventRule, ShowRulesAdmin_DC), FormControlEventType::SelectionChanged)]
    public static void ShowRulesAdmin_DC_OnSelectionChanged(FormControl _sender, FormControlEventArgs _e)
    {
        FormRun fr = _sender.formRun();
        fr.ShowRulesAdmin_DC_OnSelectionChanged_DC();
    }

]]></Source>
			</Method>
			<Method>
				<Name>EventRule_GlobalRule_OnModified</Name>
				<Source><![CDATA[
    /// <summary>
    /// Form control modified event handler.
    /// </summary>
    /// <param name = "_sender">Sender</param>
    /// <param name = "_e">Event args</param>
    [FormControlEventHandler(formControlStr(EventRule, EventRule_GlobalRule), FormControlEventType::Modified)]
    public static void EventRule_GlobalRule_OnModified(FormControl _sender, FormControlEventArgs _e)
    {
        FormRun fr = _sender.formRun();
        fr.EventRule_GlobalRule_OnModified_DC();
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
</AxClass>