<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>DocEventRuleGridView</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class DocEventRuleGridView extends FormRun
{
    private boolean adminMode;
    private boolean isCurrentUserAdmin;
    private DocEventRuleFormHandler docEventRuleFormHandler;
    private boolean inDeleteMarked;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    /// <summary>
    /// Initializes the form.
    /// </summary>
    public void init()
    {
        // Set the flag indicating if the current user is admin
        isCurrentUserAdmin = EventSecurity::construct(curUserId()).isUserAdmin();

        // Set the admin mode depending on passed args
        if (element.args().parmEnumType() == enumNum(NoYes))
        {
            adminMode = element.args().parmEnum();
        }
        else
        {
            adminMode = isCurrentUserAdmin;
        }

        // Create an instance of the form handler class
        docEventRuleFormHandler = DocEventRuleFormHandler::construct(element);

        // Set the admin mode in the instance of form handler class
        docEventRuleFormHandler.setAdminMode(adminMode);

        super();

        // Set the value of the ShowRules custom filter combo box from the caller form
        docEventRuleFormHandler.setShowRulesCustomFilterFromCaller();

        element.setControls();
    }

]]></Source>
			</Method>
			<Method>
				<Name>setControls</Name>
				<Source><![CDATA[
    /// <summary>
    /// Sets the form controls.
    /// </summary>
    private void setControls()
    {
        #SysSystemDefinedButtons

        element.design().caption(adminMode ? "@SYS336210" :  "@Alerts:ManageMyAlerts");

        // Hide the EventAlertRuleCreate and EventRule menu items in the Action pane
        element.design().controlName(#SystemDefinedShareGroup).visible(false);

        // Show/hide the ShowRules custom filter form controls depending on the admin mode
        ShowRules.visible(!adminMode);
        FilterAdmin.visible(adminMode);
        ShowRulesForUserAdmin.visible(adminMode && FilterAdmin.selection() == DocEventRuleFilterAdmin::FilterByUser);
        ShowRulesAdmin.visible(adminMode && (FilterAdmin.selection() == DocEventRuleFilterAdmin::FilterByUser || FilterAdmin.selection() == DocEventRuleFilterAdmin::BulkFilter));

        // Show/hide the EventRule menu item depending on the admin mode
        EventRuleMenuItem.visible(!adminMode);
        EventRuleAdminMenuItem.visible(adminMode);
    }

]]></Source>
			</Method>
			<Method>
				<Name>showDetails</Name>
				<Source><![CDATA[
    /// <summary>
    /// Jumps to the referenced form.
    /// </summary>
    private void showDetails()
    {
        Args args = new Args();
        args.lookupField(fieldNum(EventRule, RuleId));
        args.lookupValue(EventRule.RuleId);
        args.caller(element);

        if (adminMode)
        {
            new MenuFunction(menuItemDisplayStr(EventRuleAdmin), MenuItemType::Display).run(args);
        }
        else
        {
            new MenuFunction(menuItemDisplayStr(EventRule), MenuItemType::Display).run(args);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>EventRule</Name>
				<Methods>
					<Method>
						<Name>init</Name>
						<Source><![CDATA[
        /// <summary>
        /// Initializes the data source.
        /// </summary>
        public void init()
        {
            super();

            // Extend the default query with additional data sources to retreive all EventRule records where
            // the current user is the owner of the alert rule or belongs to the user group defined in the alert rule.
            docEventRuleFormHandler.addAdditionalDataSources(this.query());

            // Find or create additional query ranges in the root data source query
            docEventRuleFormHandler.findOrCreateQueryRanges(this.query());
        }

]]></Source>
					</Method>
					<Method>
						<Name>executeQuery</Name>
						<Source><![CDATA[
        /// <summary>
        /// Executes the query.
        /// </summary>
        public void executeQuery()
        {
            // Set query ranges in the root data source query
            docEventRuleFormHandler.setQueryRanges(this.query());

            super();
        }

]]></Source>
					</Method>
					<Method>
						<Name>validateDelete</Name>
						<Source><![CDATA[
        /// <summary>
        /// Validates if the record can be deleted.
        /// </summary>
        /// <returns>True if the record can be deleted; otherwise false</returns>
        public boolean validateDelete()
        {
            boolean ret;
        
            ret = super();
        
            if (!(adminMode || isCurrentUserAdmin) && EventRule.UserId != curUserId())
            {
                ret = ret && false;
                DocGlobalHelper::handleError(strFmt("@DocentricAX4:EventRuleDeleteError", EventRule.RuleId));
            }

            return ret;
        }

]]></Source>
					</Method>
					<Method>
						<Name>deleteMarked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Deletes the selected records from the data source.
        /// </summary>
        public void deleteMarked()
        {
            EventInbox eventInbox;
            Set deleteAlertsSet = eventRule_ds.promptDeleteAlerts();

            inDeleteMarked = true;

            ttsbegin;

            super();

            if (deleteAlertsSet && deleteAlertsSet.elements())
            {
                SetEnumerator se = deleteAlertsSet.getEnumerator();
                while (se.moveNext())
                {
                    EventRuleId deleteRuleId = se.current();
                    delete_from eventInbox
                        where eventInbox.RuleId == deleteRuleId;
                }
            }
            ttscommit;

            inDeleteMarked = false;
        }

]]></Source>
					</Method>
					<Method>
						<Name>delete</Name>
						<Source><![CDATA[
        /// <summary>
        /// Deletes the current record from the data source.
        /// </summary>
        public void delete()
        {
            EventInbox eventInbox;
            
            if (!inDeleteMarked)
            {
                Set deleteAlertsSet = eventRule_ds.promptDeleteAlerts();

                ttsbegin;

                super();

                if (deleteAlertsSet && deleteAlertsSet.elements())
                {
                    SetEnumerator se = deleteAlertsSet.getEnumerator();
                    while (se.moveNext())
                    {
                        EventRuleId deleteRuleId = se.current();
                        delete_from eventInbox
                            where eventInbox.RuleId == deleteRuleId;
                    }
                }
                ttscommit;
            }
            else
            {
                super();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>promptDeleteAlerts</Name>
						<Source><![CDATA[
        /// <summary>
        /// Gets the list of alert rules for which the generated alerts can also be deleted. 
        /// </summary>
        /// <returns>Set of alert rules for which the generated alerts can also be deleted</returns>
        private Set promptDeleteAlerts()
        {
            EventRule eventRuleSelected;
            DialogButton button;
            EventRuleId lastRuleId;
            EventInbox eventInbox;
            
            if (!eventRule.RecId)
            {
                return null;
            }

            Set deleteRuleIdSet = new Set(Types::String);

            for (eventRuleSelected = getFirstSelection(eventRule_ds); eventRuleSelected; eventRuleSelected = eventRule_ds.getNext())
            {
                deleteRuleIdSet.add(eventRuleSelected.RuleId);
                lastRuleId = eventRuleSelected.RuleId;
            }

            if (deleteRuleIdSet.elements() == 0)
            {
                return null;
            }
            else if (deleteRuleIdSet.elements() == 1)
            {
                select firstonly RecId, RuleId from eventInbox
                    where eventInbox.RuleId == lastRuleId;

                if (eventInbox.RecId)
                {
                    button = Box::yesNo("@SYS89323", DialogButton::No, "@SYS89324");
                    return button == DialogButton::Yes ? deleteRuleIdSet : null;
                }
                else
                {
                    return null;
                }
            }
            else if (deleteRuleIdSet.elements() > 1)
            {
                SetEnumerator se = deleteRuleIdSet.getEnumerator();
                while (se.moveNext())
                {
                    EventRuleId delRuleId = se.current();

                    select firstonly RecId, RuleId from eventInbox
                        where eventInbox.RuleId == delRuleId;

                    if (eventInbox.RecId)
                    {
                        button = Box::yesNo("@SYS90525", DialogButton::No, "@SYS89324");
                        return button == DialogButton::Yes ? deleteRuleIdSet : null;
                    }
                }
            }
            return null;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields>
					<Field>
						<DataField>RuleId</DataField>
						<Methods>
							<Method>
								<Name>jumpRef</Name>
								<Source><![CDATA[
            /// <summary>
            /// Jumps to the referenced table.
            /// </summary>
            public void jumpRef()
            {
                element.showDetails();
            }

]]></Source>
							</Method>
						</Methods>
					</Field>
				</Fields>
			</DataSource>
		</DataSources>
		<DataControls xmlns="">
			<Control>
				<Name>EventRuleMenuItem</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Called when the control is clicked.
        /// </summary>
        public void clicked()
        {
            element.showDetails();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>EventRuleAdminMenuItem</Name>
				<Type>MenuFunctionButton</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        /// <summary>
        /// Called when the control is clicked.
        /// </summary>
        public void clicked()
        {
            element.showDetails();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ShowRules</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Called when the value of the control is modified.
        /// </summary>
        /// <returns>True/False</returns>
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            EventRule_ds.executeQuery();
    
            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>FilterAdmin</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Called when the value of the control is modified.
        /// </summary>
        /// <returns>True/False</returns>
        public boolean modified()
        {
            boolean ret;
    
            ret = super();

            ShowRulesForUserAdmin.visible(this.selection() == DocEventRuleFilterAdmin::FilterByUser);
            ShowRulesAdmin.visible(this.selection() == DocEventRuleFilterAdmin::FilterByUser || this.selection() == DocEventRuleFilterAdmin::BulkFilter);
    
            EventRule_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ShowRulesForUserAdmin</Name>
				<Type>String</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Called when the value of the control is modified.
        /// </summary>
        /// <returns>True/False</returns>
        public boolean modified()
        {
            boolean ret;
    
            ret = super();
    
            EventRule_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ShowRulesAdmin</Name>
				<Type>ComboBox</Type>
				<Methods>
					<Method>
						<Name>modified</Name>
						<Source><![CDATA[
        /// <summary>
        /// Called when the value of the control is modified.
        /// </summary>
        /// <returns>True/False</returns>
        public boolean modified()
        {
            boolean ret;
    
            ret = super();
    
            EventRule_ds.executeQuery();

            return ret;
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>EventRule</Name>
			<Table>EventRule</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>ActionNames</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlertFieldId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlertFieldLabel</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlertInstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlertQbdsNo</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlertTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<AllowEdit>No</AllowEdit>
					<DataField>CompanyId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>CreatedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DeleteRefRecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_ActionIds</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DEL_TempMessage</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailBcc_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailCc_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailId_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailRecipients</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EmailSendingMode_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Enabled</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>EnabledForExternal</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>FormName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>GlobalRule</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IncludeInSummaryEmail_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>IsAggregated</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MenuItemName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>MenuItemType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Message</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedBy</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ModifiedDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimInstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RuleCondition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RuleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SendAlertEmail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SendEmail</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SendEmailUsingDocentric_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ShowPopup</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Subject</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SummaryEmailRecipients_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TypeTrigger</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Until</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UntilDate</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserGroupId_DC</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>UserId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
		<AxFormDataSource xmlns="">
			<Name>DocEventRuleView</Name>
			<Table>DocEventRuleView</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>AlertInstanceRelationName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlertInstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlertTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlertTableName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlertTableType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>AlertTableTypeName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>OrganizationWide</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>Partition</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimInstanceRelationName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimInstanceRelationType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimTableId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimTableName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimTableType</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>PrimTableTypeName</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RuleId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<JoinSource>EventRule</JoinSource>
			<LinkType>InnerJoin</LinkType>
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<AllowEdit>No</AllowEdit>
			<InsertAtEnd>No</InsertAtEnd>
			<InsertIfEmpty>No</InsertIfEmpty>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS336210</Caption>
		<DataSource xmlns="">EventRule</DataSource>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<SetCompany xmlns="">No</SetCompany>
		<ShowNewButton xmlns="">No</ShowNewButton>
		<Style xmlns="">SimpleList</Style>
		<ViewEditMode xmlns="">View</ViewEditMode>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>ActionPane</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>EventRuleButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>EventRuleMenuItem</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>EventRule</MenuItemName>
								<MultiSelect>Yes</MultiSelect>
								<NormalImage>Details</NormalImage>
								<Text>@SYS76257</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>EventRuleAdminMenuItem</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>EventRuleAdmin</MenuItemName>
								<MultiSelect>Yes</MultiSelect>
								<NormalImage>Details</NormalImage>
								<Text>@SYS76257</Text>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>EventInboxButtonGroup</Name>
						<Type>ButtonGroup</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormMenuFunctionButtonControl">
								<Name>DocEventAlertInbox</Name>
								<Type>MenuFunctionButton</Type>
								<FormControlExtension
									i:nil="true" />
								<MenuItemName>DocEventAlertInbox</MenuItemName>
								<NeedsRecord>Yes</NeedsRecord>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>CustomFilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilter</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>ShowRulesFilterGroup</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>ShowRules</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@DocentricAX4:EventRuleShowRulesHelp</HelpText>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<EnumType>DocEventRuleShowRules</EnumType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>FilterAdmin</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@DocentricAX4:EventRuleFilterHelp</HelpText>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<EnumType>DocEventRuleFilterAdmin</EnumType>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>ShowRulesForUserAdmin</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@DocentricAX4:EventRuleShowRulesForUserHelp</HelpText>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>UserId</ExtendedDataType>
								<Label>@DocentricAX4:EventRuleShowRulesForUser</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>ShowRulesAdmin</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<HelpText>@DocentricAX4:EventRuleShowRulesHelp</HelpText>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<EnumType>DocEventRuleShowRulesAdmin</EnumType>
								<Items />
							</AxFormControl>
						</Controls>
						<ArrangeMethod>HorizontalLeft</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<Type>Grid</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>General</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_RuleId</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>RuleId</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>EventRule_GlobalRule</Name>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>OrganizationWide</DataField>
								<DataSource>DocEventRuleView</DataSource>
								<Label>@SYS314901</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_CompanyId</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>CompanyId</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_MenuItemName</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>MenuItemName</DataField>
								<DataSource>EventRule</DataSource>
								<Label>@SYS14999</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>EventRule_Enabled</Name>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>Enabled</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>EventRule_isConditional_DC</Name>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>EventRuleTable_DC_Extension.isConditional_DC</DataMethod>
								<DataSource>EventRule</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_conditionCriteria_DC</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataMethod>EventRuleTable_DC_Extension.conditionCriteria_DC</DataMethod>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>AlertMeWhen</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>DocEventRuleView_PrimTableTypeName</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>PrimTableTypeName</DataField>
								<DataSource>DocEventRuleView</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>DocEventRuleView_AlertTableTypeName</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>AlertTableTypeName</DataField>
								<DataSource>DocEventRuleView</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_AlertFieldLabel</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>AlertFieldLabel</DataField>
								<DataSource>EventRule</DataSource>
								<Label>@DocentricAX4:EventRuleAlertFieldName</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_eventType</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<CacheDataMethod>Yes</CacheDataMethod>
								<DataMethod>typeIdLabel</DataMethod>
								<DataSource>EventRule</DataSource>
								<Label>@SYS76605</Label>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>EventRule_TypeTrigger</Name>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>TypeTrigger</DataField>
								<DataSource>EventRule</DataSource>
								<Items />
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>AlertMeHowOften</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>EventRule_Until</Name>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>Until</DataField>
								<DataSource>EventRule</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormDateControl">
								<Name>EventRule_UntilDate</Name>
								<Type>Date</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>UntilDate</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>AlertMeWith</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_Subject</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>Subject</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_Message</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>Message</DataField>
								<DataSource>EventRule</DataSource>
								<DisplayHeight>1</DisplayHeight>
								<DisplayHeightMode>Fixed</DisplayHeightMode>
								<MultiLine>Yes</MultiLine>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_UserId</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>UserId</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_UserGroupId_DC</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>UserGroupId_DC</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>AlertMeWithEmail</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>EventRule_SendAlertEmail</Name>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>SendAlertEmail</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_EmailRecipients</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>EmailRecipients</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>AlertMeExternally</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>EventRule_EnabledForExternal</Name>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>EnabledForExternal</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>AlertMeWithSummaryEmail</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>EventRule_IncludeInSummaryEmail_DC</Name>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>IncludeInSummaryEmail_DC</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_SummaryEmailRecipients_DC</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>SummaryEmailRecipients_DC</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
						</Controls>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>AlertMeUsingDocentric</Name>
						<Type>Group</Type>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormCheckBoxControl">
								<Name>EventRule_SendEmailUsingDocentric_DC</Name>
								<Type>CheckBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>SendEmailUsingDocentric_DC</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_EmailId_DC</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>EmailId_DC</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormComboBoxControl">
								<Name>EventRule_EmailSendingMode_DC</Name>
								<Type>ComboBox</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>EmailSendingMode_DC</DataField>
								<DataSource>EventRule</DataSource>
								<Items />
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_EmailCc_DC</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>EmailCc_DC</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>EventRule_EmailBcc_DC</Name>
								<Type>String</Type>
								<FormControlExtension
									i:nil="true" />
								<DataField>EmailBcc_DC</DataField>
								<DataSource>EventRule</DataSource>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<DataSource>EventRule</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts>
		<AxFormPartReference xmlns="">
			<Name>UserGroupListFactBox</Name>
			<DataSource>EventRule</DataSource>
			<DataSourceRelation>EventRule.UserGroupId_DC</DataSourceRelation>
			<MenuItemName>DocEventRuleUserGroupListFactBox</MenuItemName>
		</AxFormPartReference>
	</Parts>
</AxForm>