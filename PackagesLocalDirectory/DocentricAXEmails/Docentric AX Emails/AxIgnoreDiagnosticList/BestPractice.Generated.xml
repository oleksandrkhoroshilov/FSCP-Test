<?xml version="1.0" encoding="utf-8"?>
<IgnoreDiagnostics xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!-- 
	*************************************************************************************************************************
	*** START OF XML SCHEMA
	*************************************************************************************************************************
	-->
  <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" id="defaultSchema" attributeFormDefault="unqualified" elementFormDefault="qualified">
    <xs:element name="Name" type="xsd:string" />
    <xs:element name="Items">
      <xs:complexType>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Diagnostic">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="DiagnosticType" type="xsd:string" />
                <xs:element name="Severity" type="xsd:string" />
                <xs:element name="Path" type="xsd:string" />
                <xs:element name="Moniker" type="xsd:string" />
                <xs:element name="Message" type="xsd:string" />
                <xs:element name="Justification" type="xsd:string" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  </xs:schema>
  <!-- 
	*************************************************************************************************************************
	*** START OF XML BODY
	*************************************************************************************************************************
	-->
  <Name>BestPractice.Generated</Name>
  <Items>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://DataEntityView/DocSysEmailTableEntity/DataEntityViewMappedField/EmailTemplateHandlerClass_DC</Path>
      <Moniker>DataEntityFieldNamePropertyCheck</Moniker>
      <Message>DataEntityFieldNameCheck: The data entity 'DocSysEmailTableEntity' has an array field 'EmailTemplateHandlerClass_DC' which contains invaid characters in it's name. Please remove '_' or any other numeric value from the field.</Message>
      <Justification>An extension of the source table has been made.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://DataEntityView/DocSysEmailTableEntity/DataEntityViewMappedField/IsUsedForAlert_DC</Path>
      <Moniker>DataEntityFieldNamePropertyCheck</Moniker>
      <Message>DataEntityFieldNameCheck: The data entity 'DocSysEmailTableEntity' has an array field 'IsUsedForAlert_DC' which contains invaid characters in it's name. Please remove '_' or any other numeric value from the field.</Message>
      <Justification>An extension of the source table has been made.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://DataEntityView/DocSysEmailTableEntity/DataEntityViewMappedField/IsUsedForWF_DC</Path>
      <Moniker>DataEntityFieldNamePropertyCheck</Moniker>
      <Message>DataEntityFieldNameCheck: The data entity 'DocSysEmailTableEntity' has an array field 'IsUsedForWF_DC' which contains invaid characters in it's name. Please remove '_' or any other numeric value from the field.</Message>
      <Justification>An extension of the source table has been made.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://DataEntityView/DocSysEmailTableEntity/DataEntityViewMappedField/UseDocentricEmailEditor_DC</Path>
      <Moniker>DataEntityFieldNamePropertyCheck</Moniker>
      <Message>DataEntityFieldNameCheck: The data entity 'DocSysEmailTableEntity' has an array field 'UseDocentricEmailEditor_DC' which contains invaid characters in it's name. Please remove '_' or any other numeric value from the field.</Message>
      <Justification>An extension of the source table has been made.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://DataEntityView/DocSysEmailTableEntity/DataEntityViewMappedField/WorkflowType_DC</Path>
      <Moniker>DataEntityFieldNamePropertyCheck</Moniker>
      <Message>DataEntityFieldNameCheck: The data entity 'DocSysEmailTableEntity' has an array field 'WorkflowType_DC' which contains invaid characters in it's name. Please remove '_' or any other numeric value from the field.</Message>
      <Justification>An extension of the source table has been made.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://DataEntityView/DocSysEmailTableEntity/DataEntityViewMappedField/AddEmailAttachments_DC</Path>
      <Moniker>DataEntityFieldNamePropertyCheck</Moniker>
      <Message>DataEntityFieldNameCheck: The data entity 'DocSysEmailTableEntity' has an array field 'AddEmailAttachments_DC' which contains invaid characters in it's name. Please remove '_' or any other numeric value from the field.</Message>
      <Justification>An extension of the source table has been made.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://DataEntityView/DocSysEmailTableEntity/DataEntityViewMappedField/EmailAttachmentTags_DC</Path>
      <Moniker>DataEntityFieldNamePropertyCheck</Moniker>
      <Message>DataEntityFieldNameCheck: The data entity 'DocSysEmailTableEntity' has an array field 'EmailAttachmentTags_DC' which contains invaid characters in it's name. Please remove '_' or any other numeric value from the field.</Message>
      <Justification>An extension of the source table has been made.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://DataEntityView/DocSysEmailSystemTableEntity/DataEntityViewMappedField/EmailTemplateHandlerClass_DC</Path>
      <Moniker>DataEntityFieldNamePropertyCheck</Moniker>
      <Message>DataEntityFieldNameCheck: The data entity 'DocSysEmailSystemTableEntity' has an array field 'EmailTemplateHandlerClass_DC' which contains invaid characters in it's name. Please remove '_' or any other numeric value from the field.</Message>
      <Justification>An extension of the source table has been made.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://DataEntityView/DocSysEmailSystemTableEntity/DataEntityViewMappedField/IsUsedForAlert_DC</Path>
      <Moniker>DataEntityFieldNamePropertyCheck</Moniker>
      <Message>DataEntityFieldNameCheck: The data entity 'DocSysEmailSystemTableEntity' has an array field 'IsUsedForAlert_DC' which contains invaid characters in it's name. Please remove '_' or any other numeric value from the field.</Message>
      <Justification>An extension of the source table has been made.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://DataEntityView/DocSysEmailSystemTableEntity/DataEntityViewMappedField/IsUsedForWF_DC</Path>
      <Moniker>DataEntityFieldNamePropertyCheck</Moniker>
      <Message>DataEntityFieldNameCheck: The data entity 'DocSysEmailSystemTableEntity' has an array field 'IsUsedForWF_DC' which contains invaid characters in it's name. Please remove '_' or any other numeric value from the field.</Message>
      <Justification>An extension of the source table has been made.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://DataEntityView/DocSysEmailSystemTableEntity/DataEntityViewMappedField/UseDocentricEmailEditor_DC</Path>
      <Moniker>DataEntityFieldNamePropertyCheck</Moniker>
      <Message>DataEntityFieldNameCheck: The data entity 'DocSysEmailSystemTableEntity' has an array field 'UseDocentricEmailEditor_DC' which contains invaid characters in it's name. Please remove '_' or any other numeric value from the field.</Message>
      <Justification>An extension of the source table has been made.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://DataEntityView/DocSysEmailSystemTableEntity/DataEntityViewMappedField/WorkflowType_DC</Path>
      <Moniker>DataEntityFieldNamePropertyCheck</Moniker>
      <Message>DataEntityFieldNameCheck: The data entity 'DocSysEmailSystemTableEntity' has an array field 'WorkflowType_DC' which contains invaid characters in it's name. Please remove '_' or any other numeric value from the field.</Message>
      <Justification>An extension of the source table has been made.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://DataEntityView/DocSysEmailSystemTableEntity/DataEntityViewMappedField/AddEmailAttachments_DC</Path>
      <Moniker>DataEntityFieldNamePropertyCheck</Moniker>
      <Message>DataEntityFieldNameCheck: The data entity 'DocSysEmailSystemTableEntity' has an array field 'AddEmailAttachments_DC' which contains invaid characters in it's name. Please remove '_' or any other numeric value from the field.</Message>
      <Justification>An extension of the source table has been made.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://DataEntityView/DocSysEmailSystemTableEntity/DataEntityViewMappedField/EmailAttachmentTags_DC</Path>
      <Moniker>DataEntityFieldNamePropertyCheck</Moniker>
      <Message>DataEntityFieldNameCheck: The data entity 'DocSysEmailSystemTableEntity' has an array field 'EmailAttachmentTags_DC' which contains invaid characters in it's name. Please remove '_' or any other numeric value from the field.</Message>
      <Justification>An extension of the source table has been made.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageSystemTablePackageStaging/TableFieldString/EmailId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'SysEmailSystemId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageSystemTablePackageStaging/TableFieldString/LanguageId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'LanguageId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageSystemTablePackageStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field EmailId of table DocSysEmailMessageSystemTablePackageStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageSystemTablePackageStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field LanguageId of table DocSysEmailMessageSystemTablePackageStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageTableStaging/TableFieldString/EmailId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'SysEmailId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageTableStaging/TableFieldString/LanguageId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'LanguageId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageTableStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field EmailId of table DocSysEmailMessageTableStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageTableStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field LanguageId of table DocSysEmailMessageTableStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageSystemTableStaging/TableFieldString/EmailId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'SysEmailSystemId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageSystemTableStaging/TableFieldString/LanguageId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'LanguageId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageSystemTableStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field EmailId of table DocSysEmailMessageSystemTableStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageSystemTableStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field LanguageId of table DocSysEmailMessageSystemTableStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailTableStaging/TableFieldString/BatchGroupId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'BatchGroupId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailTableStaging/TableFieldString/DefaultLanguage</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'LanguageId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailTableStaging/TableFieldString/EmailId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'SysEmailId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailTableStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field BatchGroupId of table DocSysEmailTableStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailTableStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field DefaultLanguage of table DocSysEmailTableStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailTableStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field EmailId of table DocSysEmailTableStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailSystemTableStaging/TableFieldString/BatchGroupId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'BatchGroupId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailSystemTableStaging/TableFieldString/DefaultLanguage</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'LanguageId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailSystemTableStaging/TableFieldString/EmailId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'SysEmailSystemId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailSystemTableStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field BatchGroupId of table DocSysEmailSystemTableStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailSystemTableStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field DefaultLanguage of table DocSysEmailSystemTableStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailSystemTableStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field EmailId of table DocSysEmailSystemTableStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageTablePackageStaging/TableFieldString/EmailId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'SysEmailId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageTablePackageStaging/TableFieldString/LanguageId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'LanguageId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageTablePackageStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field EmailId of table DocSysEmailMessageTablePackageStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocSysEmailMessageTablePackageStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field LanguageId of table DocSysEmailMessageTablePackageStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventActionAlert_DC_Extension/Method/execute</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _eventRule in method execute is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocPlaceholderDefinition/Method/new</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _placeholderNameEx in method new is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTable_DC_Extension/Method/sendMail</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _mappings in method sendMail is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEventRuleCondition/Method/editFilterQuery</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call eventCreateRule.queryRun is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailMessage_DC_Extension/Method/stringExpand</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter s in method stringExpand is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailMessage_DC_Extension/Method/stringExpand</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter s in method stringExpand is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTable_DC_Extension/Method/sendMail</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _mappings in method sendMail is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventAlertInboxForm_DC_EventHandler/Method/EventInbox_OnQueryExecuting</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventAlertInboxForm_DC_EventHandler/Method/EventInbox_OnQueryExecuting</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EventInbox_OnQueryExecuting_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/SysEmailTable_OnActivated</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/SysEmailTable_OnQueryExecuted</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/SysEmailMessage_OnActivated</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/UseDocentricEmailEditor_DC_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/IsUsedForAlert_DC_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/IsUsedForWF_DC_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/AddEmailAttachments_DC_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/WorkflowType_DC_OnLookup</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/EmailTemplateHandlerClass_DC_OnLookup</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/EmailTemplateHandlerClass_DC_OnModified</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/SysEmailTable_OnActivated</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.SysEmailTable_OnActivated_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/SysEmailTable_OnQueryExecuted</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.SysEmailTable_OnQueryExecuted_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/SysEmailTable_OnValidatingWrite</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.SysEmailTable_OnValidatingWrite_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/SysEmailMessage_OnActivated</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.SysEmailMessage_OnActivated_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/UseDocentricEmailEditor_DC_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.UseDocentricEmailEditor_DC_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/IsUsedForAlert_DC_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.IsUsedForAlert_DC_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/IsUsedForWF_DC_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.IsUsedForWF_DC_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/AddEmailAttachments_DC_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.AddEmailAttachments_DC_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/WorkflowType_DC_OnLookup</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.WorkflowType_DC_OnLookup_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/EmailTemplateHandlerClass_DC_OnLookup</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EmailTemplateHandlerClass_DC_OnLookup_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailTableForm_DC_EventHandler/Method/EmailTemplateHandlerClass_DC_OnModified</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EmailTemplateHandlerClass_DC_OnModified_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailTemplateHelper/Method/replacePlaceholdersUserGroup</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _inputStr in method replacePlaceholdersUserGroup is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailTemplateHelper/Method/replacePlaceholdersUser</Path>
      <Moniker>BPCheckParametersModified</Moniker>
      <Message>Parameter _inputStr in method replacePlaceholdersUser is modified inside the method.</Message>
      <Justification>Made intentional.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocEmailTemplateHelper/Method/fillStandardPlaceholderDefinitionMapForWfType</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_wfType' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleTable_DC_Extension/Method/getEventRuleFilterQuery_DC</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call eventRuleIsConditionalObservableLink_DC.observe is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventCreateRuleForm_DC_EventHandler/Method/DocEventRuleCondition_DC_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventCreateRuleForm_DC_EventHandler/Method/eventType_OnModified</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventCreateRuleForm_DC_EventHandler/Method/EventRule_OnInitialized</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventCreateRuleForm_DC_EventHandler/Method/EmailId_DC_OnLookup</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventCreateRuleForm_DC_EventHandler/Method/EventRule_GlobalRule_OnModified</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventCreateRuleForm_DC_EventHandler/Method/DocEventRuleCondition_DC_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocEventRuleCondition_DC_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventCreateRuleForm_DC_EventHandler/Method/eventType_OnModified</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.eventType_OnModified_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventCreateRuleForm_DC_EventHandler/Method/EventRule_OnInitialized</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EventRule_OnInitialized_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventCreateRuleForm_DC_EventHandler/Method/EmailId_DC_OnLookup</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EmailId_DC_OnLookup_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventCreateRuleForm_DC_EventHandler/Method/EventRule_GlobalRule_OnModified</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EventRule_GlobalRule_OnModified_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/SysEmailSystemTable_OnActivated</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/SysEmailSystemTable_OnQueryExecuted</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/SysEmailSystemMessage_OnActivated</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/UseDocentricEmailEditor_DC_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/IsUsedForAlert_DC_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/IsUsedForAlertSummaryEmail_DC_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/IsUsedForWF_DC_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/AddEmailAttachments_DC_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/WorkflowType_DC_OnLookup</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/EmailTemplateHandlerClass_DC_OnLookup</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/EmailTemplateHandlerClass_DC_OnModified</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/SysEmailSystemTable_OnActivated</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.SysEmailSystemTable_OnActivated_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/SysEmailSystemTable_OnQueryExecuted</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.SysEmailSystemTable_OnQueryExecuted_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/SysEmailSystemTable_OnValidatingWrite</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.SysEmailSystemTable_OnValidatingWrite_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/SysEmailSystemMessage_OnActivated</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.SysEmailSystemMessage_OnActivated_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/UseDocentricEmailEditor_DC_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.UseDocentricEmailEditor_DC_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/IsUsedForAlert_DC_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.IsUsedForAlert_DC_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/IsUsedForAlertSummaryEmail_DC_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.IsUsedForAlertSummaryEmail_DC_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/IsUsedForWF_DC_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.IsUsedForWF_DC_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/AddEmailAttachments_DC_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.AddEmailAttachments_DC_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/WorkflowType_DC_OnLookup</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.WorkflowType_DC_OnLookup_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/EmailTemplateHandlerClass_DC_OnLookup</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EmailTemplateHandlerClass_DC_OnLookup_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysEmailSystemTableForm_DC_EventHandler/Method/EmailTemplateHandlerClass_DC_OnModified</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EmailTemplateHandlerClass_DC_OnModified_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysInetHTMLEditorRnr_DC_EventHandler/Method/OKButton_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysInetHTMLEditorRnr_DC_EventHandler/Method/OKButton_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.OKButton_OnClicked_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysOutgoingEmailTableForm_DCE_EventHandler/Method/EventInbox_DCE_OnInitialized</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/SysOutgoingEmailTableForm_DCE_EventHandler/Method/EventInbox_DCE_OnInitialized</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EventInbox_DCE_OnInitialized_DCE is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/EmailId_DC_OnLookup</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/EventRule_OnInitialized</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/EventRule_OnActivated</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/EventRule_OnQueryExecuting</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/EventRuleData_AlertField_OnInitialized</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/ShowRules_DC_OnSelectionChanged</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/FilterAdmin_DC_OnSelectionChanged</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/ShowRulesForUserAdmin_DC_OnModified</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/ShowRulesAdmin_DC_OnSelectionChanged</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/EventRule_GlobalRule_OnModified</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/EmailId_DC_OnLookup</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EmailId_DC_OnLookup_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/EventRule_OnInitialized</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EventRule_OnInitialized_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/EventRule_OnActivated</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EventRule_OnActivated_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/EventRule_OnQueryExecuting</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EventRule_OnQueryExecuting_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/EventRuleData_AlertField_OnInitialized</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EventRuleData_AlertField_OnInitialized_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/ShowRules_DC_OnSelectionChanged</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.ShowRules_DC_OnSelectionChanged_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/FilterAdmin_DC_OnSelectionChanged</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.FilterAdmin_DC_OnSelectionChanged_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/ShowRulesForUserAdmin_DC_OnModified</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.ShowRulesForUserAdmin_DC_OnModified_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/ShowRulesAdmin_DC_OnSelectionChanged</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.ShowRulesAdmin_DC_OnSelectionChanged_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/EventRuleForm_DC_EventHandler/Method/EventRule_GlobalRule_OnModified</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EventRule_GlobalRule_OnModified_DC is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
  </Items>
</IgnoreDiagnostics>