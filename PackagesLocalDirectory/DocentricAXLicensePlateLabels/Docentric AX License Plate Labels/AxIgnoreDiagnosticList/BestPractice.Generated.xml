<?xml version="1.0" encoding="utf-8"?>
<IgnoreDiagnostics xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!-- 
	*************************************************************************************************************************
	*** START OF XML SCHEMA
	*************************************************************************************************************************
	-->
  <xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" id="defaultSchema" attributeFormDefault="unqualified" elementFormDefault="qualified">
    <xs:element name="Name" type="xsd:string" />
    <xs:element name="Items">
      <xs:complexType>
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded" name="Diagnostic">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="DiagnosticType" type="xsd:string" />
                <xs:element name="Severity" type="xsd:string" />
                <xs:element name="Path" type="xsd:string" />
                <xs:element name="Moniker" type="xsd:string" />
                <xs:element name="Message" type="xsd:string" />
                <xs:element name="Justification" type="xsd:string" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:sequence>
      </xs:complexType>
    </xs:element>
  </xs:schema>
  <!-- 
	*************************************************************************************************************************
	*** START OF XML BODY
	*************************************************************************************************************************
	-->
  <Name>BestPractice.Generated</Name>
  <Items>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocWHSDocumentRoutingTestSetupResultTmp/TableFieldString/RoutingTableInventLocationId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'InventLocationId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocWHSDocumentRoutingTestSetupResultTmp</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field RoutingTableInventLocationId of table DocWHSDocumentRoutingTestSetupResultTmp. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocWHSDocumentRoutingPrinterStaging/TableFieldString/DocumentRoutingWarehouseId</Path>
      <Moniker>BPErrorEDTNotMigrated</Moniker>
      <Message>BPErrorEDTNotMigrated: The relation under the extended data type (EDT) 'InventLocationId' must be migrated to table relation. Consider using EDT relation migration tool.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Table/DocWHSDocumentRoutingPrinterStaging</Path>
      <Moniker>BPUpgradeMetadataEDTRelation</Moniker>
      <Message>EDT relation found in field DocumentRoutingWarehouseId of table DocWHSDocumentRoutingPrinterStaging. It should be migrated to a regular table relation.</Message>
      <Justification>The standard EDT is used.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/DocWHSLicensePlateLabelController/Method/renderingComplete</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_sender' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/EditQueryButtonDetails_DCL_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocPrintersEditQueryButtonDetails_DCL_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocPrintersNewButtonDetails_DCL_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocPrintersMoveUpLineButtonDetails_DCL_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocPrintersMoveDownLineButtonDetails_DCL_OnClicked</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocWHSDocumentRoutingLine_OnInitialized</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocWHSDocumentRoutingLine_OnCreated</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocWHSDocumentRoutingLine_OnActivated</Path>
      <Moniker>BPParameterNotUsed</Moniker>
      <Message>The parameter '_e' is not used.</Message>
      <Justification>The parameter was added for future use or is required by the interface.</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/WHSDocumentRoutingLine_UserIds_DCL_OnLookup</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.WHSDocumentRoutingLine_UserIds_DCL_OnLookup_DCL is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocWHSDocumentRoutingLine_PrinterName_OnLookup</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocWHSDocumentRoutingLine_PrinterName_OnLookup_DCL is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocWHSDocumentRoutingLine_TemplateId_OnLookup</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocWHSDocumentRoutingLine_TemplateId_OnLookup_DCL is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocWHSDocumentRoutingLine_LanguageId_OnLookup</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocWHSDocumentRoutingLine_LanguageId_OnLookup_DCL is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocWHSDocumentRoutingLine_UserIds_OnLookup</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocWHSDocumentRoutingLine_UserIds_OnLookup_DCL is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/EditQueryButtonDetails_DCL_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.EditQueryButtonDetails_DCL_OnClicked_DCL is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocPrintersEditQueryButtonDetails_DCL_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocPrintersEditQueryButtonDetails_DCL_OnClicked_DCL is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocPrintersNewButtonDetails_DCL_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocPrintersNewButtonDetails_DCL_OnClicked_DCL is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocPrintersMoveUpLineButtonDetails_DCL_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocPrintersMoveUpLineButtonDetails_DCL_OnClicked_DCL is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocPrintersMoveDownLineButtonDetails_DCL_OnClicked</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocPrintersMoveDownLineButtonDetails_DCL_OnClicked_DCL is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocWHSDocumentRoutingLine_OnInitialized</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocWHSDocumentRoutingLine_OnInitialized_DCL is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocWHSDocumentRoutingLine_OnCreating</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocWHSDocumentRoutingLine_OnCreating_DCL is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocWHSDocumentRoutingLine_OnCreated</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocWHSDocumentRoutingLine_OnCreated_DCL is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
    <Diagnostic>
      <DiagnosticType>BestPractices</DiagnosticType>
      <Severity>Warning</Severity>
      <Path>dynamics://Class/WHSDocumentRoutingForm_DCL_EventHandler/Method/DocWHSDocumentRoutingLine_OnActivated</Path>
      <Moniker>BPUpgradeCodeLateBoundCall</Moniker>
      <Message>A late bound call fr.DocWHSDocumentRoutingLine_OnActivated_DCL is made. In source system (AX 2012) it is possible to dynamically call methods where the number and type of the parameters does not match with the method definition. This is not supported in AX 7, where the number and types of parameters have to match. Even if the parameters do match, the late bound call is extremely expensive. Mitigation: Use a class or interface hierarchy to provide a type safe fast call, or use the IS and AS operators to cast to a known type before calling.</Message>
      <Justification>The recommended solution is not feasible</Justification>
    </Diagnostic>
  </Items>
</IgnoreDiagnostics>