<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SC_InventItemCombinationInfo</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
[Form]
public class SC_InventItemCombinationInfo extends FormRun
{
    CustTable                       custTable;    
    SC_WebshopId                    websiteId;
    TmpDimTransExtract              tempTable;
    [FormObservable]
    Description                     errorMsg, nonIndexableMsg;
    [FormObservable]
    Price                           unitPrice, listPrice;
    [FormObservable]
    Qty                             inventory;
    SC_AXDataServiceClient_Product  dataServiceClient;

}
]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
    
        if(!element.args() || !element.args().record())
        {
            throw error("@SYS22539");
        }
    
        if(element.args().parm())
        {
            custTable = CustTable::find(element.args().parm());
            websiteId = element.args().caller().getWebsite();
        }    
            
        dataServiceClient = SC_AXDataServiceClient_Product::construct();
    
        this.updateDesign();
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateDesign</Name>
				<Source><![CDATA[
    private void updateDesign()
    {
        element.design().caption("@SCL170");
        NoneOrderableReason.label("@SCL165");
        Stock.label("@SYS438");
    }

]]></Source>
			</Method>
			<Method>
				<Name>checkProductTranslations</Name>
				<Source><![CDATA[
    public boolean checkProductTranslations(EcoResProductRecId _product)
    {
        EcoResProductTranslation    inventTxt;
        SC_LanguageParametersTable  languageParametersTable;
        boolean                     ret = true;
        ;

        while select Name from inventTxt
            index hint ProductLanguageIdx
            where inventTxt.Product == _product && inventTxt.Name
                exists join TableId from languageParametersTable
                    where languageParametersTable.LanguageId == inventTxt.LanguageId
        {
            ret = element.isStringIndexable(inventTxt.Name);

            if(!ret)
            {
                break;
            }
        }

        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>isStringIndexable</Name>
				<Source><![CDATA[
    public boolean isStringIndexable(SC_LargeText _text)
    {
        return !System.Text.RegularExpressions.Regex::IsMatch(_text, @"[\u0000-\u0008\u000B\u000C\u000E-\u001F\u007F-\u0084\u0086-\u009F\uD800-\uDFFF\uFDD0-\uFDEF\uFFFE-\uFFFF]");
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="">
			<DataSource>
				<Name>InventDimCombination</Name>
				<Methods>
					<Method>
						<Name>displayStyle</Name>
						<Source><![CDATA[
        //BP deviation documented
        [SysClientCacheDataMethodAttribute(true)]
        display EcoResItemStyleName displayStyle(InventDimCombination _inventDimCombination)
        {
            ;
            return _inventDimCombination.inventDim().InventStyleId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>calc</Name>
						<Source><![CDATA[
        public void calc(InventDimCombination _inventDimCombination)
        {
            InventTable inventtableLocal = InventTable::find(_inventDimCombination.ItemId);
            ;
            select firstonly tempTable
                where tempTable.AccountMain == custTable.AccountNum &&
                      tempTable.Voucher == inventtableLocal.ItemId &&
                      tempTable.TraceNum == _inventDimCombination.InventDimId;
        
            if(tempTable)
            {
                unitPrice       = tempTable.AmountCur;
                listPrice       = tempTable.AmountMSTDebCred;
                errorMsg        = tempTable.MainFocus;
                inventory       = tempTable.AccumulatedMST;
                nonIndexableMsg = tempTable.SecondaryFocus;
            }
            else
            {
                [unitPrice, listPrice, errorMsg, inventory] = dataServiceClient.calcItemFormData(inventtableLocal, custTable, websiteId, _inventDimCombination);
        
                nonIndexableMsg = this.calcIndexability(_inventDimCombination);
                tempTable.SecondaryFocus = nonIndexableMsg;
                tempTable.AccountMain = custTable.AccountNum;
                tempTable.AmountCur = unitPrice;
                tempTable.AmountMSTDebCred = listPrice;
                tempTable.MainFocus = errorMsg;
                tempTable.Voucher = inventtableLocal.ItemId;
                tempTable.TraceNum = _inventDimCombination.InventDimId;
                tempTable.AccumulatedMST = inventory;
                tempTable.insert();
            }
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayConfig</Name>
						<Source><![CDATA[
        //BP deviation documented
        [SysClientCacheDataMethodAttribute(true)]
        display EcoResItemConfigurationName displayConfig(InventDimCombination _inventDimCombination)
        {
            ;
            return _inventDimCombination.inventDim().configId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayColor</Name>
						<Source><![CDATA[
        //BP deviation documented
        [SysClientCacheDataMethodAttribute(true)]
        display EcoResItemColorName displayColor(InventDimCombination _inventDimCombination)
        {
            ;
            return _inventDimCombination.inventDim().InventColorId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displaySize</Name>
						<Source><![CDATA[
        //BP deviation documented
        [SysClientCacheDataMethodAttribute(true)]
        display EcoResItemSizeName displaySize(InventDimCombination _inventDimCombination)
        {
            ;
            return _inventDimCombination.inventDim().InventSizeId;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayInventory</Name>
						<Source><![CDATA[
        //BP deviation documented
        [SysClientCacheDataMethodAttribute(true)]
        display Qty displayInventory(InventDimCombination _inventDimCombination)
        {
            ;
            this.calc(_inventDimCombination);
        
            return inventory;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayUnitPrice</Name>
						<Source><![CDATA[
        //BP deviation documented
        [SysClientCacheDataMethodAttribute(true)]
        display Price displayUnitPrice(InventDimCombination _inventDimCombination)
        {
            ;
            this.calc(_inventDimCombination);
        
            return unitPrice;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayIsOrderable</Name>
						<Source><![CDATA[
        //BP deviation documented
        [SysClientCacheDataMethodAttribute(true)]
        display NoYes displayIsOrderable(InventDimCombination _inventDimCombination)
        {
            ;
            this.calc(_inventDimCombination);
        
            return !errorMsg;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayErrorMsg</Name>
						<Source><![CDATA[
        //BP deviation documented
        [SysClientCacheDataMethodAttribute(true)]
        display smmBusRelMemo displayErrorMsg(InventDimCombination _inventDimCombination)
        {
            ;
            this.calc(_inventDimCombination);
        
            return strrem(errorMsg, '\t');
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayIndexableErrorMsg</Name>
						<Source><![CDATA[
        //BP deviation documented
        [SysClientCacheDataMethodAttribute(true)]
        display smmBusRelMemo displayIndexableErrorMsg(InventDimCombination _inventDimCombination)
        {
            this.calc(_inventDimCombination);

            return nonIndexableMsg;
        }

]]></Source>
					</Method>
					<Method>
						<Name>displayIsIndexable</Name>
						<Source><![CDATA[
        //BP deviation documented
        [SysClientCacheDataMethodAttribute(true)]
        display NoYes displayIsIndexable(InventDimCombination _inventDimCombination)
        {
            this.calc(_inventDimCombination);

            return !nonIndexableMsg;
        }

]]></Source>
					</Method>
					<Method>
						<Name>calcIndexability</Name>
						<Source><![CDATA[
        private smmBusRelMemo calcIndexability(InventDimCombination _inventDimCombination)
        {
            boolean ret = true;
    
            nonIndexableMsg = '';

            ret = element.checkProductTranslations(_inventDimCombination.DistinctProductVariant); //assign resul to the boolean for the future checks
            nonIndexableMsg = ret ? nonIndexableMsg : strFmt("@SCL476","@SCL485");

            return nonIndexableMsg;
        }

]]></Source>
					</Method>
				</Methods>
				<Fields />
			</DataSource>
		</DataSources>
		<DataControls xmlns="" />
		<Members xmlns="" />
	</SourceCode>
	<DataSources>
		<AxFormDataSource xmlns="">
			<Name>InventDimCombination</Name>
			<Table>InventDimCombination</Table>
			<Fields>
				<AxFormDataSourceField>
					<DataField>createdDateTime</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>dataAreaId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>DistinctProductVariant</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>InventDimId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>ItemId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RecId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>RetailVariantId</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>SC_VisibleInWebShop</DataField>
				</AxFormDataSourceField>
				<AxFormDataSourceField>
					<DataField>TableId</DataField>
				</AxFormDataSourceField>
			</Fields>
			<ReferencedDataSources />
			<AllowCreate>No</AllowCreate>
			<AllowDelete>No</AllowDelete>
			<DataSourceLinks />
			<DerivedDataSources />
		</AxFormDataSource>
	</DataSources>
	<Design>
		<Caption xmlns="">@SYS320706</Caption>
		<Pattern xmlns="">SimpleList</Pattern>
		<PatternVersion xmlns="">1.1</PatternVersion>
		<Style xmlns="">SimpleList</Style>
		<TitleDataSource xmlns="">InventDimCombination</TitleDataSource>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FormActionPaneControl</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls />
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>FilterGroup</Name>
				<Pattern>CustomAndQuickFilters</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl>
						<Name>QuickFilterControl</Name>
						<FormControlExtension>
							<Name>QuickFilterControl</Name>
							<ExtensionComponents />
							<ExtensionProperties>
								<AxFormControlExtensionProperty>
									<Name>targetControlName</Name>
									<Type>String</Type>
									<Value>Grid</Value>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>defaultColumnName</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
								<AxFormControlExtensionProperty>
									<Name>placeholderText</Name>
									<Type>String</Type>
								</AxFormControlExtensionProperty>
							</ExtensionProperties>
						</FormControlExtension>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalLeft</ArrangeMethod>
				<FrameType>None</FrameType>
				<Style>CustomFilter</Style>
				<ViewEditMode>Edit</ViewEditMode>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGridControl">
				<Name>Grid</Name>
				<ElementPosition>1073741823</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<Type>Grid</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>InventDimCombination_ItemId</Name>
						<ElementPosition>390451572</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataField>ItemId</DataField>
						<DataSource>InventDimCombination</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>InventDimCombination_Name</Name>
						<ElementPosition>585677358</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>defaultProductName</DataMethod>
						<DataSource>InventDimCombination</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>InventDimCombination_InventColorId</Name>
						<ElementPosition>780903144</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayColor</DataMethod>
						<DataSource>InventDimCombination</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>InventDimCombination_InventSizeId</Name>
						<ElementPosition>976128930</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displaySize</DataMethod>
						<DataSource>InventDimCombination</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>InventDimCombination_ConfigId</Name>
						<ElementPosition>1171354716</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayConfig</DataMethod>
						<DataSource>InventDimCombination</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>InventDimCombination_Style</Name>
						<ElementPosition>1268967609</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayStyle</DataMethod>
						<DataSource>InventDimCombination</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>UnitPrice</Name>
						<ElementPosition>1399118133</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayUnitPrice</DataMethod>
						<DataSource>InventDimCombination</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormRealControl">
						<Name>Stock</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1529268657</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>Real</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayInventory</DataMethod>
						<DataSource>InventDimCombination</DataSource>
						<NoOfDecimals>-1</NoOfDecimals>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>InventDimCombination_SC_VisibleInWebShop</Name>
						<ElementPosition>1659419181</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataField>SC_VisibleInWebShop</DataField>
						<DataSource>InventDimCombination</DataSource>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>OrderableField</Name>
						<ElementPosition>1757032074</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataMethod>displayIsOrderable</DataMethod>
						<DataSource>InventDimCombination</DataSource>
						<Label>@SCL164</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCheckBoxControl">
						<Name>IndexableField</Name>
						<ElementPosition>1757032074</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>CheckBox</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<BackgroundColor>WindowBackground</BackgroundColor>
						<DataMethod>displayIsIndexable</DataMethod>
						<DataSource>InventDimCombination</DataSource>
						<Label>@SCL482</Label>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>NoneOrderableReason</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1952257860</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayErrorMsg</DataMethod>
						<DataSource>InventDimCombination</DataSource>
						<DisplayHeight>1</DisplayHeight>
						<DisplayHeightMode>Fixed</DisplayHeightMode>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormStringControl">
						<Name>NoneIndexableReason</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1952257860</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>String</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<DataMethod>displayIndexableErrorMsg</DataMethod>
						<DataSource>InventDimCombination</DataSource>
						<DisplayHeight>1</DisplayHeight>
						<DisplayHeightMode>Fixed</DisplayHeightMode>
						<Label>@SCL481</Label>
					</AxFormControl>
				</Controls>
				<DataSource>InventDimCombination</DataSource>
				<Style>Tabular</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>