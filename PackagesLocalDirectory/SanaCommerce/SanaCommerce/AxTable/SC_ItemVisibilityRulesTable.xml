<?xml version="1.0" encoding="utf-8"?>
<AxTable xmlns:i="http://www.w3.org/2001/XMLSchema-instance">
	<Name>SC_ItemVisibilityRulesTable</Name>
	<SourceCode>
		<Declaration><![CDATA[
public class SC_ItemVisibilityRulesTable extends common
{  
}
]]></Declaration>
		<Methods>
			<Method>
				<Name>updateLastModifiedDateOnProduct</Name>
				<Source><![CDATA[
    public void updateLastModifiedDateOnProduct(SC_TableGroupCategory _itemCode, SC_LargeText _itemRelation, SC_Code _value)
    {
        InventItemGroupItem         inventItemGroup;
        InventTable                 inventTable;
        Query                       query = new Query();
        QueryBuildDataSource        queryBuildDataSource;
        QueryRun                    queryRun;

        switch(_itemCode)
        {
            case SC_TableGroupCategory::Table:
                SC_AXDataServiceClient_Product::updateLastModifiedDate(_itemRelation);
                break;

            case SC_TableGroupCategory::Group:
                while select ItemId from inventTable
                exists join TableId from inventItemGroup
                    where inventTable.ItemId == inventItemGroup.ItemId &&
                          inventItemGroup.ItemGroupId == _itemRelation
                {
                    SC_AXDataServiceClient_Product::updateLastModifiedDate(inventTable.ItemId);
                }
                break;

            case SC_TableGroupCategory::Category:
                this.updateSubCategoriesLastModifiedDate(str2int64(_itemRelation));
                break;

            case SC_TableGroupCategory::ItemField:
                if(_itemRelation && fieldName2id(tableNum(InventTable), _itemRelation))
                {
                    queryBuildDataSource = query.addDataSource(tableNum(InventTable));
                    queryBuildDataSource.addRange(fieldName2id(tableNum(InventTable), _itemRelation)).value(_value);
                    queryRun = new QueryRun(query);
                    while(queryRun.next())
                    {
                        inventTable = queryRun.get(tableNum(InventTable));
                        SC_AXDataServiceClient_Product::updateLastModifiedDate(inventTable.ItemId);
                    }
                }
                break;
        }    
    }

]]></Source>
			</Method>
			<Method>
				<Name>updateSubCategoriesLastModifiedDate</Name>
				<Source><![CDATA[
    private void updateSubCategoriesLastModifiedDate(RecId _category)
    {
        EcoResCategory          subCategories;
        EcoResProductCategory   ecoResProductCategory;
        InventTable             inventTable;

        while select forupdate RecId from subCategories
            where subCategories.ParentCategory == _category
        {
            this.updateSubCategoriesLastModifiedDate(subCategories.RecId);
        }

        while select forUpdate ItemId from inventTable
            exists join TableId from ecoResProductCategory
                where ecoResProductCategory.Product == inventTable.Product &&
                        ecoResProductCategory.Category == _category
        {
            SC_AXDataServiceClient_Product::updateLastModifiedDate(inventTable.ItemId);
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editItemRelation</Name>
				<Source><![CDATA[
    //BP deviation documented
    public edit SC_LargeText editItemRelation(boolean set, SC_LargeText _itemRelation)
    {
        str ret;        

        if (set)
        {
            this.ItemRelation = _itemRelation;

            if(this.ItemCode == SC_TableGroupCategory::Category)
            {
                this.ItemCategoryRelation = EcoResCategory::find(str2int64(this.ItemRelation)).RecId;
            }
        }
        else
        {
            if(this.ItemCode == SC_TableGroupCategory::Category)
            {
                ret = EcoResCategory::find(str2int64(this.ItemRelation)).Name;
                ret = isInteger(ret) ? ret + '.' : ret; //fix for D365 compiler which convert numeric names to integer 
            }
        }

        return ret ? ret : this.ItemRelation;
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillEmptyWebshopIds</Name>
				<Source><![CDATA[
    /// <summary>
    /// Method will be used only once after upgrade to Sana 9.2.1
    /// </summary>
    public static void fillEmptyWebshopIds()
    {
        SC_ItemVisibilityRulesTable itemVisibilityRulesTable;
        SC_WebshopId                webshopIdLocal = SC_WebshopsTable::findFirst().WebShopId;
        
        if(webshopIdLocal)
        {
            ttsBegin;
            while select forUpdate itemVisibilityRulesTable
                where !itemVisibilityRulesTable.WebShopId
            {
                itemVisibilityRulesTable.WebShopId = webshopIdLocal;
                itemVisibilityRulesTable.update();
            }
            ttsCommit;
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>editFieldValue</Name>
				<Source><![CDATA[
    public edit SC_Code editFieldValue(boolean _set, SC_Code _value)
    {        
        if(_set)
        {
            this.Value = _value;
        }
        else
        {
            _value = this.Value;
        }

        return _value;
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupTableFields</Name>
				<Source><![CDATA[
    public static void lookupTableFields(FormControl _formControl)
    {
        TmpSysQuery         tmpSysQuery;
        SysTableLookUp      sysTableLookUp = SysTableLookUp::newParameters(tablenum(tmpSysQuery), _formControl);
        TmpSysTableField    tmpSysTableField;
        DictTable           dictTable      = new DictTable(tableNum(InventTable));
        DictField           dictField;        

        if(dictTable)
        {
            tmpSysTableField = TmpSysTableField::findTableFields(tmpSysTableField, dictTable.id());

            while select tmpSysTableField
            {
                dictField = new DictField(tableNum(InventTable), tmpSysTableField.FieldId);

                tmpSysQuery.Field_Id   = tmpSysTableField.FieldId;
                tmpSysQuery.Tablelabel = tmpSysTableField.FieldName;
                tmpSysQuery.FieldLabel = tmpSysTableField.FieldLabel;
                tmpSysQuery.RangeValue = enum2str(dictField.baseType());
                tmpSysQuery.insert();
            }

            //BP Deviation documented
            sysTableLookUp.parmTmpBuffer(tmpSysQuery);
            sysTableLookUp.addLookupfield(fieldnum(TmpSysQuery, Field_Id));
            sysTableLookUp.setLabel("@SYS112132");
            sysTableLookUp.addLookupfield(fieldnum(TmpSysQuery, Tablelabel), true);
            sysTableLookUp.setLabel("@SYS34979");
            sysTableLookUp.addLookupfield(fieldnum(TmpSysQuery, FieldLabel));
            sysTableLookUp.setLabel("@SYS104939");
            sysTableLookUp.addLookupfield(fieldnum(TmpSysQuery, RangeValue));
            sysTableLookUp.setLabel("@SYS81228");
            sysTableLookUp.performFormLookup();

        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>lookupItem</Name>
				<Source><![CDATA[
    public client static void lookupItem(FormStringControl _ctrl)
    {
        SysTableLookup          sysTableLookup = SysTableLookup::newParameters(tableNum(InventTable),_ctrl);
        Query                   query = new Query();
        QueryBuildDataSource    queryBuildDataSource = query.addDataSource(tableNum(InventTable));

        sysTableLookup.addLookupfield(fieldNum(InventTable,ItemId));
        sysTableLookup.addLookupMethod(tableMethodStr(InventTable,defaultProductName));
        sysTableLookup.addLookupMethod(tableMethodStr(InventTable,itemGroupId));
        sysTableLookup.addLookupfield(fieldNum(InventTable,NameAlias));
        sysTableLookup.addLookupfield(fieldNum(InventTable,ItemType));
        sysTableLookup.addSelectionField(fieldNum(InventTable,Product));

        sysTableLookup.parmQuery(query);
        sysTableLookup.performFormLookup();
    }

]]></Source>
			</Method>
			<Method>
				<Name>insert</Name>
				<Source><![CDATA[
    public void insert()
    {
        if(this.ItemCode == SC_TableGroupCategory::Category && !this.ItemCategoryRelation)
        {
            this.ItemCategoryRelation = EcoResCategory::find(str2int64(this.ItemRelation)).RecId;
        }

        super();
    }

]]></Source>
			</Method>
			<Method>
				<Name>fillEmptyCategoryIds</Name>
				<Source><![CDATA[
    public static void fillEmptyCategoryIds()
    {
        SC_ItemVisibilityRulesTable itemVisibilityRulesTable;

        ttsbegin;
        while select forUpdate itemVisibilityRulesTable            
            where itemVisibilityRulesTable.ItemCode == SC_TableGroupCategory::Category &&
                 !itemVisibilityRulesTable.ItemCategoryRelation
        {
            itemVisibilityRulesTable.ItemCategoryRelation = str2int64(itemVisibilityRulesTable.ItemRelation);
            itemVisibilityRulesTable.doUpdate();
        }
        ttsCommit;        
    }

]]></Source>
			</Method>
		</Methods>
	</SourceCode>
	<ConfigurationKey>SC_SanaCommerce</ConfigurationKey>
	<DeveloperDocumentation>@SCL181</DeveloperDocumentation>
	<FormRef>SC_ItemVisibilityRules</FormRef>
	<Label>@SCL181</Label>
	<TitleField1>AccountRelation</TitleField1>
	<TitleField2>ItemRelation</TitleField2>
	<CacheLookup>Found</CacheLookup>
	<ClusteredIndex>AccountIdx</ClusteredIndex>
	<CreateRecIdIndex>No</CreateRecIdIndex>
	<PrimaryIndex>CodeIdx</PrimaryIndex>
	<DeleteActions />
	<FieldGroups>
		<AxTableFieldGroup>
			<Name>AutoSummary</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Mode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WebShopId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoBrowse</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>WebShopId</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoReport</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Mode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>WebShopId</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoLookup</Name>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Mode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>AutoIdentification</Name>
			<AutoPopulate>Yes</AutoPopulate>
			<Fields />
		</AxTableFieldGroup>
		<AxTableFieldGroup>
			<Name>Identification</Name>
			<Label>@SYS104938</Label>
			<Fields>
				<AxTableFieldGroupField>
					<DataField>AccountCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>AccountRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemCode</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>ItemRelation</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Value</DataField>
				</AxTableFieldGroupField>
				<AxTableFieldGroupField>
					<DataField>Mode</DataField>
				</AxTableFieldGroupField>
			</Fields>
		</AxTableFieldGroup>
	</FieldGroups>
	<Fields>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>AccountCode</Name>
			<Label>@SYS12243</Label>
			<EnumType>SC_TableGroup</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>AccountRelation</Name>
			<ExtendedDataType>CustVendRel</ExtendedDataType>
			<Label>@SYS2355</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>ItemCode</Name>
			<Label>@SYS58740</Label>
			<EnumType>SC_TableGroupCategory</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>ItemRelation</Name>
			<ExtendedDataType>FieldName</ExtendedDataType>
			<HelpText>@SYS23658</HelpText>
			<Label>@SYS8631</Label>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldEnum">
			<Name>Mode</Name>
			<Label>@SYS8722</Label>
			<EnumType>SC_AllowDeny</EnumType>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>WebShopId</Name>
			<AllowEdit>No</AllowEdit>
			<ExtendedDataType>SC_WebshopId</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Mandatory>Yes</Mandatory>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldString">
			<Name>Value</Name>
			<ExtendedDataType>SC_Code</ExtendedDataType>
			<HelpText>@SYS55288</HelpText>
			<Label>@SYS8815</Label>
		</AxTableField>
		<AxTableField xmlns=""
			i:type="AxTableFieldInt64">
			<Name>ItemCategoryRelation</Name>
			<ExtendedDataType>ReferenceField</ExtendedDataType>
			<IgnoreEDTRelation>Yes</IgnoreEDTRelation>
			<Label>@SYS101352</Label>
			<Visible>No</Visible>
		</AxTableField>
	</Fields>
	<FullTextIndexes />
	<Indexes>
		<AxTableIndex>
			<Name>CodeIdx</Name>
			<AlternateKey>Yes</AlternateKey>
			<Fields>
				<AxTableIndexField>
					<DataField>RecId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
		<AxTableIndex>
			<Name>AccountIdx</Name>
			<Fields>
				<AxTableIndexField>
					<DataField>AccountCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>AccountRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemCode</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>ItemRelation</DataField>
				</AxTableIndexField>
				<AxTableIndexField>
					<DataField>WebShopId</DataField>
				</AxTableIndexField>
			</Fields>
		</AxTableIndex>
	</Indexes>
	<Mappings />
	<Relations>
		<AxTableRelation>
			<Name>CustGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>CustGroup</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>SC_TableGroup::Group</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>CustTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>CustTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>AccountRelation</Name>
					<Field>AccountRelation</Field>
					<RelatedField>AccountNum</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>AccountCode</Name>
					<Field>AccountCode</Field>
					<ValueStr>SC_TableGroup::Table</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventItemGroup</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventItemGroup</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>ItemGroupId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>SC_TableGroupCategory::Group</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>InventTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>InventTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>ItemRelation</Name>
					<Field>ItemRelation</Field>
					<RelatedField>ItemId</RelatedField>
				</AxTableRelationConstraint>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintFixed">
					<Name>ItemCode</Name>
					<Field>ItemCode</Field>
					<ValueStr>SC_TableGroupCategory::Table</ValueStr>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
		<AxTableRelation>
			<Name>SC_WebShopsTable</Name>
			<Cardinality>ZeroMore</Cardinality>
			<RelatedTable>SC_WebShopsTable</RelatedTable>
			<RelatedTableCardinality>ExactlyOne</RelatedTableCardinality>
			<RelationshipType>Association</RelationshipType>
			<Constraints>
				<AxTableRelationConstraint xmlns=""
					i:type="AxTableRelationConstraintField">
					<Name>WebShopId</Name>
					<Field>WebShopId</Field>
					<RelatedField>WebShopId</RelatedField>
				</AxTableRelationConstraint>
			</Constraints>
		</AxTableRelation>
	</Relations>
	<StateMachines />
</AxTable>